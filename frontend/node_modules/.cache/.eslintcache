[{"/Users/yasmine/Desktop/stage/aidchannel-front/src/index.js":"1","/Users/yasmine/Desktop/stage/aidchannel-front/src/App.js":"2","/Users/yasmine/Desktop/stage/aidchannel-front/src/reportWebVitals.js":"3","/Users/yasmine/Desktop/stage/aidchannel-front/src/conf/Routes.js":"4","/Users/yasmine/Desktop/stage/aidchannel-front/src/conf/WebMasterRoutes.js":"5","/Users/yasmine/Desktop/stage/aidchannel-front/src/conf/SuperAdminRoutes.js":"6","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/HomeCountry.js":"7","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ProjectOfTheMonthDetails.js":"8","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ProjectSearch.js":"9","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ProjectsCountry.js":"10","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ShowMoreDetailsProject.js":"11","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/public/Index.js":"12","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/public/LearnMoreExpert.js":"13","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/public/OrganizationDetails.js":"14","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/public/ViewMoreOrganization.js":"15","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/public/ViewMoreExpert.js":"16","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/public/ViewMoreProject.js":"17","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/public/LearnMoreProject.js":"18","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/public/Login.js":"19","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ViewMoreArticle.js":"20","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/AddOrganization.js":"21","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/public/Register.js":"22","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/WebMasterHome.js":"23","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/ListOrganizations.js":"24","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/EditOrganization.js":"25","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/Interview.js":"26","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/AddProject.js":"27","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/ListProjects.js":"28","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/LearnMoreArticle.js":"29","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ViewMoreYoutube.js":"30","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/Validation.js":"31","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/EditProject.js":"32","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/AddInterview.js":"33","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/EditInterview.js":"34","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ViewMoreTweet.js":"35","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/DetailsInterview.js":"36","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/AddExpertArticle.js":"37","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/TwiterSearch.js":"38","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/TechnicalDetails.js":"39","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/ListExperts.js":"40","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/ProjectOfMonth.js":"41","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/YoutubeSearch.js":"42","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/AddExpert.js":"43","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/superadmin/AddWebmaster.js":"44","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/superadmin/Dashboard.js":"45","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/superadmin/ListProjectsGlobal.js":"46","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/superadmin/ListWebMasters.js":"47","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/superadmin/DetailsProjectNull.js":"48","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/YoutubeValides.js":"49","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/TweetsValid√©s.js":"50","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/YoutubeValidation.js":"51","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/TwitterValidation.js":"52","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/layout/webmaster/WebMasterLayout.js":"53","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/layout/superadmin/SuperAdminLayout.js":"54","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/projectApi.js":"55","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/youtubeApi.js":"56","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/countryApi.js":"57","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/twitterApi.js":"58","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/interviewApi.js":"59","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/general/CardInfo.js":"60","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/layout/header/CountryHeader.js":"61","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/general/CardInfo2.js":"62","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/general/CardSmall.js":"63","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/general/InputSearch.js":"64","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/general/CardInfoDetails.js":"65","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/layout/header/PublicHeader.js":"66","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/layout/footer/PublicFooter.js":"67","/Users/yasmine/Desktop/stage/aidchannel-front/src/helpers/useIntersectionObserver.js":"68","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/ProjectForm.js":"69","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/youtubeVideos/YoutubeVideo.js":"70","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/tweets/Post.js":"71","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/project/SearchWithStatus.js":"72","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/tweets/Tweets.js":"73","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/InterviewForm.js":"74","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/project/ProjectCard.js":"75","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/MTableProject.js":"76","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/MTableInterview.js":"77","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/OrganizationForm.js":"78","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/MTableOrganization.js":"79","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/general/CounterDatavisualization.js":"80","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/organizationApi.js":"81","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/project/ProjectDetailHeader.js":"82","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/userApi.js":"83","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/project/ProjectDetailSide.js":"84","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/expert/ExpertCard.js":"85","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/authentication/SideImage.js":"86","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/authentication/LoginForm.js":"87","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/expert/ExpertDetailHeader.js":"88","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/organization/OrganizationCard.js":"89","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/expert/ExpertDetailBody.js":"90","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/organization/OrganizationDetailsBody.js":"91","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/expert/ExpertContact.js":"92","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/authentication/RegistrationForm.js":"93","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/organization/OrganizationDetailsHeader.js":"94","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/Details.js":"95","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/MtableExpert.js":"96","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/TableProject.js":"97","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/general/SideBarAdmin.js":"98","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/index.js":"99","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/organisationType.js":"100","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/thematiqueApi.js":"101","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/general/InputRadio.js":"102","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/interviewTypeApi.js":"103","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/TableInterview.js":"104","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/general/SideBar.js":"105","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/TableOrganization.js":"106","/Users/yasmine/Desktop/stage/aidchannel-front/src/helpers/sideBarWebMasterData.js":"107","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/project/ShowMoreDetails.js":"108","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/ProjectOfTheMontInterview.js":"109","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/TableExpert.js":"110","/Users/yasmine/Desktop/stage/aidchannel-front/src/helpers/urlImageAdapter.js":"111","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/ExpertForm.js":"112","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/superadmin/DetailsProject.js":"113","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/superadmin/MtableProject.js":"114","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/superadmin/WebmasterForm.js":"115","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/expert/SimpleMap.js":"116","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/statusApi.js":"117","/Users/yasmine/Desktop/stage/aidchannel-front/src/helpers/sideBarSuperAdminData.js":"118","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/ExpertArticleApi.js":"119","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ExpertArticleDetails.js":"120","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ViewMoreExpertArticle.js":"121","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/RoadMap.js":"122","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/AddTechnicalDetails.js":"123","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/ImpactAccordion.js":"124","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/OutComeAccordion.js":"125","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/impactApi.js":"126","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/OutPutAccordion.js":"127","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/outComeApi.js":"128","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/ActivityAccordion.js":"129","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/outPutApi.js":"130","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/EditTechnicalDetails.js":"131","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/ValidationProjects.js":"132","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/ListProjectsValides.js":"133","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/TableProjectAccepted.js":"134","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ArticleSearch.js":"135","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/ArticlesValides.js":"136","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/ValidationArticles.js":"137","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/articles/ArticleCard.js":"138","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/articleApi.js":"139","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/EditGraphTechnicalDetails.js":"140","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/superadmin/ListCountryEnabled.js":"141","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/layout/superadmin/CountryEnabled.js":"142","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/superadmin/ListCountryDisabled.js":"143","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/activityApi.js":"144","/Users/yasmine/Desktop/stage/aidchannel-front/src/helpers/constants.js":"145","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/TechnicalDetailsCanvas.js":"146","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/MultiSelectGraph.js":"147","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/InterviewDetails.js":"148","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ProjectsByThematic.js":"149","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/MoreDetailsProject.js":"150","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ProjectsByImplementers.js":"151","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ProjectsByDonor.js":"152","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/MainBeneficiaryApi.js":"153","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/localizationApi.js":"154","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/expectedResultApi.js":"155","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/KeyExpertsApi.js":"156","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/kpisApi.js":"157","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/superadmin/EditProject.js":"158","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/superadmin/EditProjectSA.js":"159","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/general/CardInfoExpert.js":"160","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/EditExpert.js":"161","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/layout/footer/PublicFooterHomepage.js":"162","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/linkedin/Home.js":"163","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/header/Header.js":"164","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/header/HeaderOption.js":"165","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/sidebar/Sidebar.js":"166","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/widget/Widgets.js":"167","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/feed/Feed.js":"168","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/inputOption/InputOption.js":"169","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/post/Post.js":"170","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/EditWebMaster.js":"171","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/Users.js":"172","/Users/yasmine/Desktop/stage/aidchannel-front/src/helpers/SecureRouteLink.js":"173","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/linkedin/LoginLinkedin.js":"174","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/linkedin/RegisterLink.js":"175","/Users/yasmine/Desktop/stage/aidchannel-front/src/helpers/authorization.js":"176","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/superadmin/TableWebmaster.js":"177","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/PublicHeaderLink/PublicHeaderLink.js":"178","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/registerFormLink/RegisterFormLink.js":"179","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/loginFormLinkedin/LoginFormLinkedin.js":"180","/Users/yasmine/Desktop/stage/aidchannel-front/src/helpers/FormDataHelper.js":"181","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/postModal/PostModal.js":"182","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/postApi.js":"183","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/AddUser.js":"184","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/ListAddedUsers.js":"185","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/TableUser.js":"186","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/superadmin/ListOganizationsAdmin.js":"187","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/linkedin/Network.js":"188","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/linkedin/Profil.js":"189","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/linkedin/MyDbaNetwork.js":"190","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/linkedin/MyProjects.js":"191","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/linkedin/AddProjectByExpert.js":"192","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/linkedin/ListOfProjectsLinkedin.js":"193","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/PojectFormLinkedin.js":"194","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/TableProjectsLinkedin.js":"195","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/networkGraph/NetworkGraph.js":"196","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/comment/Comment.js":"197","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/commentApi.js":"198","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/invitationApi.js":"199","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/superadmin/TableOrganizationsAdmin.js":"200","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/profilHeader/ProfilHeader.js":"201","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/userCard/UserCard.js":"202","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/invitations/Invitations.js":"203","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/superadmin/EditOrganizationAdmin.js":"204","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/superadmin/AddOrganizationAdmin.js":"205","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/superadmin/OrganizationForm.js":"206","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/linkedin/ChoiceOftheProjectList.js":"207","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/viewApi.js":"208","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/NetworkGraph2.js":"209","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/NetworkGraph4.js":"210","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/NetworkGraph3.js":"211"},{"size":676,"mtime":1631008150568,"results":"212","hashOfConfig":"213"},{"size":784,"mtime":1630491188465,"results":"214","hashOfConfig":"213"},{"size":362,"mtime":1628165546441,"results":"215","hashOfConfig":"213"},{"size":15449,"mtime":1631006981735,"results":"216","hashOfConfig":"213"},{"size":423,"mtime":1628165546429,"results":"217","hashOfConfig":"213"},{"size":430,"mtime":1628165546429,"results":"218","hashOfConfig":"213"},{"size":6992,"mtime":1629368094066,"results":"219","hashOfConfig":"213"},{"size":4433,"mtime":1629231203277,"results":"220","hashOfConfig":"213"},{"size":2786,"mtime":1628165546432,"results":"221","hashOfConfig":"213"},{"size":2591,"mtime":1628165546432,"results":"222","hashOfConfig":"213"},{"size":5557,"mtime":1631022929022,"results":"223","hashOfConfig":"213"},{"size":4324,"mtime":1629813061284,"results":"224","hashOfConfig":"213"},{"size":1811,"mtime":1629882446237,"results":"225","hashOfConfig":"213"},{"size":2096,"mtime":1629813207706,"results":"226","hashOfConfig":"213"},{"size":3017,"mtime":1629813207706,"results":"227","hashOfConfig":"213"},{"size":2461,"mtime":1629813207745,"results":"228","hashOfConfig":"213"},{"size":2475,"mtime":1629813207706,"results":"229","hashOfConfig":"213"},{"size":1589,"mtime":1631005138826,"results":"230","hashOfConfig":"213"},{"size":1651,"mtime":1628165546434,"results":"231","hashOfConfig":"213"},{"size":2691,"mtime":1629231203277,"results":"232","hashOfConfig":"213"},{"size":637,"mtime":1630262427708,"results":"233","hashOfConfig":"213"},{"size":830,"mtime":1628165546435,"results":"234","hashOfConfig":"213"},{"size":4264,"mtime":1630262427711,"results":"235","hashOfConfig":"213"},{"size":2343,"mtime":1630262427709,"results":"236","hashOfConfig":"213"},{"size":640,"mtime":1630262427708,"results":"237","hashOfConfig":"213"},{"size":1511,"mtime":1628165546439,"results":"238","hashOfConfig":"213"},{"size":596,"mtime":1628165546438,"results":"239","hashOfConfig":"213"},{"size":726,"mtime":1630491188491,"results":"240","hashOfConfig":"213"},{"size":2612,"mtime":1628165546431,"results":"241","hashOfConfig":"213"},{"size":2851,"mtime":1629231203278,"results":"242","hashOfConfig":"213"},{"size":3172,"mtime":1629231203281,"results":"243","hashOfConfig":"213"},{"size":1797,"mtime":1630262427709,"results":"244","hashOfConfig":"213"},{"size":605,"mtime":1628165546437,"results":"245","hashOfConfig":"213"},{"size":608,"mtime":1628165546438,"results":"246","hashOfConfig":"213"},{"size":3298,"mtime":1629231203278,"results":"247","hashOfConfig":"213"},{"size":600,"mtime":1628165546438,"results":"248","hashOfConfig":"213"},{"size":4615,"mtime":1629755178161,"results":"249","hashOfConfig":"213"},{"size":3075,"mtime":1628165546432,"results":"250","hashOfConfig":"213"},{"size":1756,"mtime":1629368094072,"results":"251","hashOfConfig":"213"},{"size":2281,"mtime":1630262427709,"results":"252","hashOfConfig":"213"},{"size":14627,"mtime":1629749974087,"results":"253","hashOfConfig":"213"},{"size":2430,"mtime":1628165546433,"results":"254","hashOfConfig":"213"},{"size":581,"mtime":1630262427707,"results":"255","hashOfConfig":"213"},{"size":278,"mtime":1628165546436,"results":"256","hashOfConfig":"213"},{"size":7815,"mtime":1630769181647,"results":"257","hashOfConfig":"213"},{"size":1350,"mtime":1630540806465,"results":"258","hashOfConfig":"213"},{"size":871,"mtime":1630262427707,"results":"259","hashOfConfig":"213"},{"size":310,"mtime":1628165546436,"results":"260","hashOfConfig":"213"},{"size":1853,"mtime":1629712084995,"results":"261","hashOfConfig":"213"},{"size":2600,"mtime":1629712084994,"results":"262","hashOfConfig":"213"},{"size":2538,"mtime":1628165546441,"results":"263","hashOfConfig":"213"},{"size":3487,"mtime":1629712084994,"results":"264","hashOfConfig":"213"},{"size":385,"mtime":1628165546407,"results":"265","hashOfConfig":"213"},{"size":396,"mtime":1628165546406,"results":"266","hashOfConfig":"213"},{"size":7098,"mtime":1630769181619,"results":"267","hashOfConfig":"213"},{"size":2584,"mtime":1629712084970,"results":"268","hashOfConfig":"213"},{"size":1197,"mtime":1630769181618,"results":"269","hashOfConfig":"213"},{"size":2743,"mtime":1629712084969,"results":"270","hashOfConfig":"213"},{"size":1685,"mtime":1628165546370,"results":"271","hashOfConfig":"213"},{"size":4350,"mtime":1629749974083,"results":"272","hashOfConfig":"213"},{"size":5995,"mtime":1630262427701,"results":"273","hashOfConfig":"213"},{"size":4208,"mtime":1628179231795,"results":"274","hashOfConfig":"213"},{"size":825,"mtime":1629749974084,"results":"275","hashOfConfig":"213"},{"size":990,"mtime":1629231203271,"results":"276","hashOfConfig":"213"},{"size":2313,"mtime":1630769181641,"results":"277","hashOfConfig":"213"},{"size":7309,"mtime":1630769181643,"results":"278","hashOfConfig":"213"},{"size":3264,"mtime":1629368094039,"results":"279","hashOfConfig":"213"},{"size":714,"mtime":1628165546430,"results":"280","hashOfConfig":"213"},{"size":16771,"mtime":1630262427697,"results":"281","hashOfConfig":"213"},{"size":699,"mtime":1628165546403,"results":"282","hashOfConfig":"213"},{"size":1888,"mtime":1628165546398,"results":"283","hashOfConfig":"213"},{"size":2336,"mtime":1628165546396,"results":"284","hashOfConfig":"213"},{"size":219,"mtime":1628165546399,"results":"285","hashOfConfig":"213"},{"size":5168,"mtime":1628165546399,"results":"286","hashOfConfig":"213"},{"size":2940,"mtime":1630953267734,"results":"287","hashOfConfig":"213"},{"size":5482,"mtime":1628165546400,"results":"288","hashOfConfig":"213"},{"size":4476,"mtime":1628165546400,"results":"289","hashOfConfig":"213"},{"size":7799,"mtime":1630262427696,"results":"290","hashOfConfig":"213"},{"size":5636,"mtime":1628165546400,"results":"291","hashOfConfig":"213"},{"size":1340,"mtime":1628165546392,"results":"292","hashOfConfig":"213"},{"size":5464,"mtime":1630769181618,"results":"293","hashOfConfig":"213"},{"size":1003,"mtime":1629231203271,"results":"294","hashOfConfig":"213"},{"size":5129,"mtime":1630491188470,"results":"295","hashOfConfig":"213"},{"size":5054,"mtime":1630491188471,"results":"296","hashOfConfig":"213"},{"size":1637,"mtime":1630769181638,"results":"297","hashOfConfig":"213"},{"size":566,"mtime":1628165546388,"results":"298","hashOfConfig":"213"},{"size":2044,"mtime":1629231203270,"results":"299","hashOfConfig":"213"},{"size":1883,"mtime":1628165546390,"results":"300","hashOfConfig":"213"},{"size":1959,"mtime":1628165546394,"results":"301","hashOfConfig":"213"},{"size":3640,"mtime":1629882446231,"results":"302","hashOfConfig":"213"},{"size":4393,"mtime":1628165546394,"results":"303","hashOfConfig":"213"},{"size":1542,"mtime":1628165546389,"results":"304","hashOfConfig":"213"},{"size":4191,"mtime":1629231203270,"results":"305","hashOfConfig":"213"},{"size":1120,"mtime":1628165546394,"results":"306","hashOfConfig":"213"},{"size":1693,"mtime":1629231203272,"results":"307","hashOfConfig":"213"},{"size":6574,"mtime":1628165546401,"results":"308","hashOfConfig":"213"},{"size":4455,"mtime":1629368094035,"results":"309","hashOfConfig":"213"},{"size":968,"mtime":1630262427694,"results":"310","hashOfConfig":"213"},{"size":1758,"mtime":1630491188467,"results":"311","hashOfConfig":"213"},{"size":227,"mtime":1629277243783,"results":"312","hashOfConfig":"213"},{"size":212,"mtime":1628165546370,"results":"313","hashOfConfig":"213"},{"size":491,"mtime":1628165546392,"results":"314","hashOfConfig":"213"},{"size":418,"mtime":1628165546370,"results":"315","hashOfConfig":"213"},{"size":3348,"mtime":1629749974085,"results":"316","hashOfConfig":"213"},{"size":1017,"mtime":1628165546393,"results":"317","hashOfConfig":"213"},{"size":4843,"mtime":1630262427698,"results":"318","hashOfConfig":"213"},{"size":1274,"mtime":1630262427706,"results":"319","hashOfConfig":"213"},{"size":4502,"mtime":1629368094034,"results":"320","hashOfConfig":"213"},{"size":2762,"mtime":1628165546402,"results":"321","hashOfConfig":"213"},{"size":4517,"mtime":1630262427697,"results":"322","hashOfConfig":"213"},{"size":272,"mtime":1628165546430,"results":"323","hashOfConfig":"213"},{"size":6000,"mtime":1630264974270,"results":"324","hashOfConfig":"213"},{"size":1875,"mtime":1628165546397,"results":"325","hashOfConfig":"213"},{"size":3845,"mtime":1630769181642,"results":"326","hashOfConfig":"213"},{"size":5821,"mtime":1630769181643,"results":"327","hashOfConfig":"213"},{"size":844,"mtime":1628165546391,"results":"328","hashOfConfig":"213"},{"size":212,"mtime":1628165546370,"results":"329","hashOfConfig":"213"},{"size":945,"mtime":1630491188487,"results":"330","hashOfConfig":"213"},{"size":1241,"mtime":1629810213754,"results":"331","hashOfConfig":"213"},{"size":2629,"mtime":1628168773228,"results":"332","hashOfConfig":"213"},{"size":2833,"mtime":1628179231801,"results":"333","hashOfConfig":"213"},{"size":1066,"mtime":1628179231801,"results":"334","hashOfConfig":"213"},{"size":259,"mtime":1628339849235,"results":"335","hashOfConfig":"213"},{"size":2419,"mtime":1628339849236,"results":"336","hashOfConfig":"213"},{"size":2078,"mtime":1628339849236,"results":"337","hashOfConfig":"213"},{"size":1271,"mtime":1629231203267,"results":"338","hashOfConfig":"213"},{"size":2060,"mtime":1628339849237,"results":"339","hashOfConfig":"213"},{"size":882,"mtime":1629277243784,"results":"340","hashOfConfig":"213"},{"size":2106,"mtime":1629231203272,"results":"341","hashOfConfig":"213"},{"size":870,"mtime":1629277243785,"results":"342","hashOfConfig":"213"},{"size":698,"mtime":1629231203279,"results":"343","hashOfConfig":"213"},{"size":1529,"mtime":1630262427710,"results":"344","hashOfConfig":"213"},{"size":1174,"mtime":1629231203280,"results":"345","hashOfConfig":"213"},{"size":5377,"mtime":1630262427699,"results":"346","hashOfConfig":"213"},{"size":2322,"mtime":1630491188488,"results":"347","hashOfConfig":"213"},{"size":1799,"mtime":1630262427708,"results":"348","hashOfConfig":"213"},{"size":2537,"mtime":1630262427710,"results":"349","hashOfConfig":"213"},{"size":410,"mtime":1629231203270,"results":"350","hashOfConfig":"213"},{"size":2585,"mtime":1630491188466,"results":"351","hashOfConfig":"213"},{"size":2779,"mtime":1629231203272,"results":"352","hashOfConfig":"213"},{"size":1527,"mtime":1629231203279,"results":"353","hashOfConfig":"213"},{"size":1829,"mtime":1628861041757,"results":"354","hashOfConfig":"213"},{"size":3443,"mtime":1629712084973,"results":"355","hashOfConfig":"213"},{"size":907,"mtime":1629277243782,"results":"356","hashOfConfig":"213"},{"size":54,"mtime":1629231203275,"results":"357","hashOfConfig":"213"},{"size":16582,"mtime":1629368094038,"results":"358","hashOfConfig":"213"},{"size":2383,"mtime":1629231203280,"results":"359","hashOfConfig":"213"},{"size":308,"mtime":1629231203276,"results":"360","hashOfConfig":"213"},{"size":1580,"mtime":1629368094068,"results":"361","hashOfConfig":"213"},{"size":14120,"mtime":1630769181648,"results":"362","hashOfConfig":"213"},{"size":1690,"mtime":1629368094067,"results":"363","hashOfConfig":"213"},{"size":1633,"mtime":1629368094066,"results":"364","hashOfConfig":"213"},{"size":749,"mtime":1629368094030,"results":"365","hashOfConfig":"213"},{"size":744,"mtime":1629368094032,"results":"366","hashOfConfig":"213"},{"size":734,"mtime":1629368094031,"results":"367","hashOfConfig":"213"},{"size":690,"mtime":1629368094030,"results":"368","hashOfConfig":"213"},{"size":641,"mtime":1629368094031,"results":"369","hashOfConfig":"213"},{"size":1215,"mtime":1629712084972,"results":"370","hashOfConfig":"213"},{"size":17747,"mtime":1630262427695,"results":"371","hashOfConfig":"213"},{"size":2442,"mtime":1630262427694,"results":"372","hashOfConfig":"213"},{"size":584,"mtime":1629757274187,"results":"373","hashOfConfig":"213"},{"size":1866,"mtime":1629813530154,"results":"374","hashOfConfig":"213"},{"size":968,"mtime":1629882446237,"results":"375","hashOfConfig":"213"},{"size":2380,"mtime":1630769181644,"results":"376","hashOfConfig":"213"},{"size":1613,"mtime":1630491188479,"results":"377","hashOfConfig":"213"},{"size":2542,"mtime":1630769181644,"results":"378","hashOfConfig":"213"},{"size":791,"mtime":1630769181644,"results":"379","hashOfConfig":"213"},{"size":4868,"mtime":1630491188476,"results":"380","hashOfConfig":"213"},{"size":836,"mtime":1630262427703,"results":"381","hashOfConfig":"213"},{"size":6519,"mtime":1630491188483,"results":"382","hashOfConfig":"213"},{"size":678,"mtime":1630263016447,"results":"383","hashOfConfig":"213"},{"size":2873,"mtime":1630262427710,"results":"384","hashOfConfig":"213"},{"size":568,"mtime":1630262427705,"results":"385","hashOfConfig":"213"},{"size":860,"mtime":1630262427706,"results":"386","hashOfConfig":"213"},{"size":757,"mtime":1630262427706,"results":"387","hashOfConfig":"213"},{"size":172,"mtime":1630262427705,"results":"388","hashOfConfig":"213"},{"size":4031,"mtime":1630262427696,"results":"389","hashOfConfig":"213"},{"size":947,"mtime":1630262427701,"results":"390","hashOfConfig":"213"},{"size":5488,"mtime":1630262427704,"results":"391","hashOfConfig":"213"},{"size":2486,"mtime":1630491188481,"results":"392","hashOfConfig":"213"},{"size":237,"mtime":1630262427705,"results":"393","hashOfConfig":"213"},{"size":3547,"mtime":1630262427704,"results":"394","hashOfConfig":"213"},{"size":1252,"mtime":1630491188469,"results":"395","hashOfConfig":"213"},{"size":4788,"mtime":1630262427708,"results":"396","hashOfConfig":"213"},{"size":1476,"mtime":1630262427709,"results":"397","hashOfConfig":"213"},{"size":3889,"mtime":1630262427699,"results":"398","hashOfConfig":"213"},{"size":909,"mtime":1630769181648,"results":"399","hashOfConfig":"213"},{"size":1911,"mtime":1630491188490,"results":"400","hashOfConfig":"213"},{"size":587,"mtime":1630491188490,"results":"401","hashOfConfig":"213"},{"size":1138,"mtime":1630491188489,"results":"402","hashOfConfig":"213"},{"size":1491,"mtime":1630769181647,"results":"403","hashOfConfig":"213"},{"size":661,"mtime":1630491188488,"results":"404","hashOfConfig":"213"},{"size":919,"mtime":1630769181646,"results":"405","hashOfConfig":"213"},{"size":16530,"mtime":1630491188473,"results":"406","hashOfConfig":"213"},{"size":4458,"mtime":1630491188474,"results":"407","hashOfConfig":"213"},{"size":2672,"mtime":1630491188481,"results":"408","hashOfConfig":"213"},{"size":854,"mtime":1630491188475,"results":"409","hashOfConfig":"213"},{"size":733,"mtime":1630491188466,"results":"410","hashOfConfig":"213"},{"size":1161,"mtime":1630491188468,"results":"411","hashOfConfig":"213"},{"size":4012,"mtime":1630769181642,"results":"412","hashOfConfig":"213"},{"size":3881,"mtime":1630491188483,"results":"413","hashOfConfig":"213"},{"size":1385,"mtime":1630491188485,"results":"414","hashOfConfig":"213"},{"size":2999,"mtime":1630491188480,"results":"415","hashOfConfig":"213"},{"size":443,"mtime":1630769181647,"results":"416","hashOfConfig":"213"},{"size":456,"mtime":1630769181647,"results":"417","hashOfConfig":"213"},{"size":9973,"mtime":1630769181642,"results":"418","hashOfConfig":"213"},{"size":2368,"mtime":1630769181646,"results":"419","hashOfConfig":"213"},{"size":513,"mtime":1630769181619,"results":"420","hashOfConfig":"213"},{"size":5640,"mtime":1631010782567,"results":"421","hashOfConfig":"213"},{"size":6303,"mtime":1631006360328,"results":"422","hashOfConfig":"213"},{"size":7976,"mtime":1631011930140,"results":"423","hashOfConfig":"213"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ip9e0s",{"filePath":"426","messages":"427","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"429"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"429"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"429"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"429"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"451","messages":"452","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"429"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"429"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"429"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"429"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"429"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"429"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"429"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"429"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"429"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"429"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"429"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"429"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"429"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"429"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"429"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"429"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"429"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"520","usedDeprecatedRules":"429"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"429"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"429"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"429"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"429"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"429"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"429"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"429"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"548","usedDeprecatedRules":"429"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553","usedDeprecatedRules":"429"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"429"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"577","usedDeprecatedRules":"429"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"429"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"587","usedDeprecatedRules":"429"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594","usedDeprecatedRules":"429"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"599","usedDeprecatedRules":"429"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"618","usedDeprecatedRules":"429"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"631","usedDeprecatedRules":"429"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"638","usedDeprecatedRules":"429"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"641"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"646","usedDeprecatedRules":"429"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"641"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"657","usedDeprecatedRules":"429"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"660","usedDeprecatedRules":"429"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"663","usedDeprecatedRules":"429"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666","usedDeprecatedRules":"429"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"679","usedDeprecatedRules":"429"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"684","usedDeprecatedRules":"429"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"687","usedDeprecatedRules":"429"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"690","usedDeprecatedRules":"429"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"693","usedDeprecatedRules":"429"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"696","usedDeprecatedRules":"429"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"699","usedDeprecatedRules":"429"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"702","usedDeprecatedRules":"429"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"705","usedDeprecatedRules":"429"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"708","usedDeprecatedRules":"429"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"711","usedDeprecatedRules":"429"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"722","usedDeprecatedRules":"429"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"725","usedDeprecatedRules":"429"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"728","usedDeprecatedRules":"429"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"733","usedDeprecatedRules":"429"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"736","usedDeprecatedRules":"429"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"741","usedDeprecatedRules":"429"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"746","usedDeprecatedRules":"429"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"755","usedDeprecatedRules":"429"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"758","usedDeprecatedRules":"429"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"767","usedDeprecatedRules":"429"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"770","usedDeprecatedRules":"429"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"773","usedDeprecatedRules":"429"},{"filePath":"774","messages":"775","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"776","messages":"777","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"778","messages":"779","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"780","usedDeprecatedRules":"429"},{"filePath":"781","messages":"782","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"785","messages":"786","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"787","usedDeprecatedRules":"429"},{"filePath":"788","messages":"789","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"794","usedDeprecatedRules":"429"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"797","usedDeprecatedRules":"429"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"800","usedDeprecatedRules":"429"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"803","usedDeprecatedRules":"429"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"806","usedDeprecatedRules":"429"},{"filePath":"807","messages":"808","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"809","usedDeprecatedRules":"429"},{"filePath":"810","messages":"811","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"812","usedDeprecatedRules":"429"},{"filePath":"813","messages":"814","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"815","usedDeprecatedRules":"429"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"818","usedDeprecatedRules":"429"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"821","usedDeprecatedRules":"429"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"824","usedDeprecatedRules":"429"},{"filePath":"825","messages":"826","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"827","messages":"828","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"831","usedDeprecatedRules":"429"},{"filePath":"832","messages":"833","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"834","messages":"835","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"836","usedDeprecatedRules":"429"},{"filePath":"837","messages":"838","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"839","usedDeprecatedRules":"429"},{"filePath":"840","messages":"841","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"842","usedDeprecatedRules":"429"},{"filePath":"843","messages":"844","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"845","messages":"846","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"847","usedDeprecatedRules":"429"},{"filePath":"848","messages":"849","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"850","messages":"851","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"852","usedDeprecatedRules":"429"},{"filePath":"853","messages":"854","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"855","usedDeprecatedRules":"429"},{"filePath":"856","messages":"857","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"858","usedDeprecatedRules":"429"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"861","messages":"862","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"863","usedDeprecatedRules":"429"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"866","usedDeprecatedRules":"429"},{"filePath":"867","messages":"868","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"869","messages":"870","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"871","usedDeprecatedRules":"429"},{"filePath":"872","messages":"873","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"874","messages":"875","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"876","usedDeprecatedRules":"429"},{"filePath":"877","messages":"878","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"879","usedDeprecatedRules":"429"},{"filePath":"880","messages":"881","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"882","messages":"883","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"884","usedDeprecatedRules":"429"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"887","usedDeprecatedRules":"429"},{"filePath":"888","messages":"889","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"890","usedDeprecatedRules":"429"},{"filePath":"891","messages":"892","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"893","usedDeprecatedRules":"429"},{"filePath":"894","messages":"895","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"896","usedDeprecatedRules":"429"},{"filePath":"897","messages":"898","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"899","usedDeprecatedRules":"429"},{"filePath":"900","messages":"901","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"902","usedDeprecatedRules":"429"},{"filePath":"903","messages":"904","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"905","messages":"906","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"907","usedDeprecatedRules":"429"},{"filePath":"908","messages":"909","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"910","usedDeprecatedRules":"429"},{"filePath":"911","messages":"912","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"913","messages":"914","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"915","usedDeprecatedRules":"429"},{"filePath":"916","messages":"917","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"918","usedDeprecatedRules":"429"},{"filePath":"919","messages":"920","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"921","usedDeprecatedRules":"429"},{"filePath":"922","messages":"923","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"924","usedDeprecatedRules":"429"},{"filePath":"925","messages":"926","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"927","messages":"928","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"929","usedDeprecatedRules":"429"},{"filePath":"930","messages":"931","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"932","messages":"933","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"934","usedDeprecatedRules":"429"},{"filePath":"935","messages":"936","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"937","usedDeprecatedRules":"429"},{"filePath":"938","messages":"939","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"940","usedDeprecatedRules":"429"},{"filePath":"941","messages":"942","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"943","usedDeprecatedRules":"429"},{"filePath":"944","messages":"945","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"946","usedDeprecatedRules":"429"},{"filePath":"947","messages":"948","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"949","usedDeprecatedRules":"429"},{"filePath":"950","messages":"951","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"952","usedDeprecatedRules":"429"},{"filePath":"953","messages":"954","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"955","usedDeprecatedRules":"429"},{"filePath":"956","messages":"957","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"958","usedDeprecatedRules":"429"},{"filePath":"959","messages":"960","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"961","messages":"962","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"963","usedDeprecatedRules":"429"},{"filePath":"964","messages":"965","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/yasmine/Desktop/stage/aidchannel-front/src/index.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/App.js",["966","967"],"/**\n * Caution: Consider this file when using react-scripts\n *\n * You may delete this file and its occurrences from the project filesystem if you are using GatsbyJS or NextJS version\n */\nimport React, { useEffect } from \"react\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport Routes from \"./conf/Routes\";\nimport \"./App.css\";\n\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { setAuthorizationToken } from \"apis\";\n\nconst browserHistory = createBrowserHistory();\nconst queryClient = new QueryClient();\n\nconst App = () => {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Router history={browserHistory}>\n        <Routes />\n      </Router>\n    </QueryClientProvider>\n  );\n};\n\nexport default App;\n",["968","969"],"/Users/yasmine/Desktop/stage/aidchannel-front/src/reportWebVitals.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/conf/Routes.js",["970","971","972","973","974","975","976","977"],"import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport ProjectOfTheMonthDetails from \"../pages/country/ProjectOfTheMonthDetails\";\nimport HomeCountry from \"../pages/country/HomeCountry\";\nimport ProjectSearch from \"../pages/country/ProjectSearch\";\nimport Index from \"../pages/public/Index\";\nimport LearnMoreExpert from \"../pages/public/LearnMoreExpert\";\nimport LearnMoreProject from \"../pages/public/LearnMoreProject\";\nimport OrganizationDetails from \"../pages/public/OrganizationDetails\";\nimport ViewMoreExpert from \"../pages/public/ViewMoreExpert\";\nimport ViewMoreOrganization from \"../pages/public/ViewMoreOrganization\";\nimport ViewMoreProject from \"../pages/public/ViewMoreProject\";\nimport ViewMoreTweet from \"../pages/country/ViewMoreTweet\";\nimport ViewMoreYoutube from \"../pages/country/ViewMoreYoutube\";\nimport LearnMoreArticle from \"../pages/country/LearnMoreArticle\";\nimport ViewMoreArticle from \"../pages/country/ViewMoreArticle\";\nimport ProjectsCountry from \"../pages/country/ProjectsCountry\";\nimport Login from \"../pages/public/Login\";\nimport Register from \"../pages/public/Register\";\nimport WebMasterHome from \"../pages/webmaster/WebMasterHome\";\nimport AddOrganization from \"../pages/webmaster/AddOrganization\";\nimport Interview from \"../pages/webmaster/Interview\";\nimport WebMasterRoutes from \"./WebMasterRoutes\";\nimport SuperAdminRoutes from \"./SuperAdminRoutes\";\nimport ListOrganizations from \"../pages/webmaster/ListOrganizations\";\nimport ShowMoreDetailsProject from \"../pages/country/ShowMoreDetailsProject\";\nimport EditOrganization from \"../pages/webmaster/EditOrganization\";\nimport ListProjects from \"../pages/webmaster/ListProjects\";\nimport AddInterview from \"../pages/webmaster/AddInterview\";\nimport AddProject from \"../pages/webmaster/AddProject\";\nimport Validation from \"../pages/webmaster/Validation\";\nimport EditProject from \"../pages/webmaster/EditProject\";\nimport EditInterview from \"../pages/webmaster/EditInterview\";\nimport ProjectOfMonth from \"pages/webmaster/ProjectOfMonth\";\nimport ListExperts from \"pages/webmaster/ListExperts\";\nimport AddExpert from \"pages/webmaster/AddExpert\";\nimport DetailsInterview from \"pages/webmaster/DetailsInterview\";\nimport Dashboard from \"pages/superadmin/Dashboard\";\nimport ListWebMasters from \"pages/superadmin/ListWebMasters\";\nimport ListProjectsGlobal from \"pages/superadmin/ListProjectsGlobal\";\nimport AddWebmaster from \"pages/superadmin/AddWebmaster\";\nimport DetailsProjectNull from \"pages/superadmin/DetailsProjectNull\";\nimport YoutubeSearch from \"pages/country/YoutubeSearch\";\nimport TwiterSearch from \"pages/country/TwiterSearch\";\nimport AddExpertArticle from \"pages/webmaster/AddExpertArticle\";\nimport TechnicalDetails from \"pages/webmaster/TechnicalDetails\";\nimport ExpertArticleDetails from \"pages/country/ExpertArticleDetails\";\nimport ViewMoreExpertArticle from \"pages/country/ViewMoreExpertArticle\";\nimport RoadMap from \"pages/webmaster/RoadMap\";\nimport EditTechnicalDetails from \"pages/webmaster/EditTechnicalDetails\";\nimport ValidationProjects from \"pages/webmaster/ValidationProjects\";\nimport ArticleSearch from \"pages/country/ArticleSearch\";\nimport ListCountryEnabled from \"pages/superadmin/ListCountryEnabled\";\nimport ListCountryDisabled from \"pages/superadmin/ListCountryDisabled\";\nimport Details from \"components/aidchannel/webmaster/Details\";\nimport InterviewDetails from \"pages/country/InterviewDetails\";\nimport ProjectsByThematic from \"pages/country/ProjectsByThematic\";\nimport ProjectsByDonor from \"pages/country/ProjectsByDonor\";\nimport ProjectsByImplementers from \"pages/country/ProjectsByImplementers\";\nimport MoreDetailsProject from \"pages/webmaster/MoreDetailsProject\";\nimport EditProjectSuperAdmin from \"../pages/superadmin/EditProject\";\nimport EditExpert from \"pages/webmaster/EditExpert\";\nimport Header from \"components/linkedin/header/Header\";\nimport Home from \"pages/linkedin/Home\";\nimport LoginLinkedin from \"pages/linkedin/LoginLinkedin\";\nimport SecureRouteLink from \"helpers/SecureRouteLink\";\nimport RegisterLink from \"pages/linkedin/RegisterLink\";\nimport ListAddedUsers from \"pages/webmaster/Users\";\nimport Users from \"pages/webmaster/Users\";\nimport EditWebMaster from \"pages/webmaster/EditWebMaster\";\nimport Profil from \"pages/linkedin/Profil\";\nimport Network from \"pages/linkedin/Network\";\nimport MyDbaNetwork from \"pages/linkedin/MyDbaNetwork\";\nimport MyProjects from \"pages/linkedin/MyProjects\";\nimport AddProjectByExpert from \"pages/linkedin/AddProjectByExpert\";\nimport ListOrganizationsAdmin from \"pages/superadmin/ListOganizationsAdmin\";\nimport ChoiceOftheProjectList from \"pages/linkedin/ChoiceOftheProjectList\";\nimport EditOrganizationAdmin from \"pages/superadmin/EditOrganizationAdmin\";\nimport AddOrganizationAdmin from \"pages/superadmin/AddOrganizationAdmin\";\nimport NetworkGraph from \"components/linkedin/networkGraph/NetworkGraph\";\nimport NetworkGraph2 from \"pages/country/NetworkGraph2\";\nimport NetworkGraph3 from \"pages/country/NetworkGraph3\";\nimport NetworkGraph4 from \"pages/country/NetworkGraph4\";\n\n// import RoadMap from \"pages/webmaster/RoadMap\";\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route // index page\n        exact\n        path=\"/\"\n        component={Index}\n      />\n      <Route // country page\n        exact\n        path=\"/country/:codeCountry\"\n        component={HomeCountry}\n      />\n      <Route // details project of the month\n        exact\n        // path=\"/country/:codeCountry/projectOfMonthDetails/:project_id\"\n        path=\"/country/:codeCountry/projectOfMonthDetails\"\n        component={ProjectOfTheMonthDetails}\n      />\n      <Route // learnmore page\n        exact\n        path=\"/projectdetails/:project_id\"\n        component={LearnMoreProject}\n      />\n      <Route // get projects by thematic\n        exact\n        path=\"/projectsbyThematic/:id/:codeCountry\"\n        component={ProjectsByThematic}\n      />\n      <Route // get projects by Donors\n        exact\n        path=\"/projectsByDonors/:idOrganization/:codeCountry\"\n        component={ProjectsByDonor}\n      />\n      <Route // get projects by Implementers\n        exact\n        path=\"/projectsByImplementers/:idOrganization/:codeCountry\"\n        component={ProjectsByImplementers}\n      />\n      <Route // more details of a project\n        exact\n        path=\"/projectdetails/:idProject/more\"\n        component={ShowMoreDetailsProject}\n      />\n      <Route // more details of a project\n        exact\n        path=\"/projectdetails2/:idProject/more\"\n        component={NetworkGraph2}\n      />{\" \"}\n      <Route // more details of a project\n        exact\n        path=\"/projectdetails3/:idProject/more\"\n        component={NetworkGraph3}\n      />{\" \"}\n      <Route // more details of a project\n        exact\n        path=\"/projectdetails4/more\"\n        component={NetworkGraph4}\n      />\n      <Route // oraganization details page\n        exact\n        path=\"/public/learn-more-organization/:organizationId\"\n        component={OrganizationDetails}\n      />\n      <Route // learnmore article\n        exact\n        path=\"/country/:codeCountry/learn-more-article\"\n        component={LearnMoreArticle}\n      />{\" \"}\n      <Route // learnmore expert\n        exact\n        path=\"/country/:codeCountry/expertArticleDetails\"\n        component={ExpertArticleDetails}\n      />\n      <Route // projects page + search projects page\n        exact\n        path=\"/public/projects/:search_text\"\n        component={ProjectSearch}\n      />\n      <Route // Expert details page\n        exact\n        path=\"/expert/:expert_id\"\n        component={LearnMoreExpert}\n      />\n      <Route // view more organizations\n        exact\n        path=\"/view-more/:organization/month\"\n        component={ViewMoreOrganization}\n      />\n      <Route // view more expert\n        exact\n        path=\"/view-more-expert-month/\"\n        component={ViewMoreExpert}\n      />\n      <Route // view more tweets\n        exact\n        path=\"/Country/:codeCountry/view-more-tweet/\"\n        component={ViewMoreTweet}\n      />\n      <Route // view more youtube\n        exact\n        path=\"/Country/:codeCountry/view-more-youtube/\"\n        component={ViewMoreYoutube}\n      />\n      <Route // view more youtube\n        exact\n        path=\"/Country/:codeCountry/view-more-article/\"\n        component={ViewMoreArticle}\n      />{\" \"}\n      <Route // view more youtube\n        exact\n        path=\"/Country/:codeCountry/view-more-expert-article/\"\n        component={ViewMoreExpertArticle}\n      />\n      <Route // view more projects of month\n        exact\n        path=\"/view-more-project-month/\"\n        component={ViewMoreProject}\n      />\n      <Route\n        exact\n        path=\"/videosYoutube/:codeCountry/:search_text\"\n        component={YoutubeSearch}\n      />\n      <Route\n        exact\n        path=\"/Articles/:codeCountry/:search_text\"\n        component={ArticleSearch}\n      />\n      <Route\n        exact\n        path=\"/Tweets/:codeCountry/:search_text\"\n        component={TwiterSearch}\n      />\n      <Route\n        exact\n        path=\"/projects/:codeCountry/:search_text\"\n        component={ProjectsCountry}\n      />\n      <Route // signin\n        exact\n        path=\"/login\"\n        component={Login}\n      />\n      <Route // signup\n        exact\n        path=\"/signup\"\n        component={Register}\n      />\n      <WebMasterRoutes\n        exact\n        path=\"/web-master/edit-organization/:codeCountry/:idSubOrganization\"\n        component={EditOrganization}\n      />\n      <WebMasterRoutes\n        exact\n        path=\"/web-master/edit-project/:codeCountry/:idProject\"\n        component={EditProject}\n      />\n      <WebMasterRoutes\n        exact\n        path=\"/web-master/add-organization/:codeCountry\"\n        component={AddOrganization}\n      />\n      <WebMasterRoutes\n        exact\n        path=\"/web-master/add-project/:codeCountry\"\n        component={AddProject}\n      />\n      <WebMasterRoutes\n        exact\n        path=\"/web-master/add-Expert/:codeCountry\"\n        component={AddExpert}\n      />\n      <WebMasterRoutes\n        exact\n        path=\"/web-master/edit-Expert/:codeCountry/:idExpert\"\n        component={EditExpert}\n      />\n      <WebMasterRoutes\n        exact\n        path=\"/web-master/organizations/:codeCountry\"\n        component={ListOrganizations}\n      />\n      <WebMasterRoutes\n        exact\n        path=\"/web-master/:codeCountry\"\n        component={WebMasterHome}\n      />\n      <WebMasterRoutes\n        exact\n        path=\"/web-master/validation/:multimedia/:codeCountry\"\n        component={Validation}\n      />{\" \"}\n      <WebMasterRoutes\n        exact\n        path=\"/web-master/validationProjects/:multimedia/:codeCountry\"\n        component={ValidationProjects}\n      />\n      <WebMasterRoutes\n        exact\n        path=\"/web-master/edit-interview/:codeCountry/:idInterview\"\n        component={EditInterview}\n      />\n      <WebMasterRoutes\n        path=\"/web-master/interview/:codeCountry\"\n        component={Interview}\n      />{\" \"}\n      <WebMasterRoutes\n        path=\"/web-master/details-interview/:codeCountry/:idInterview\"\n        component={DetailsInterview}\n      />\n      <Route\n        path=\"/web-master/interview-details/:codeCountry/:idInterview\"\n        component={InterviewDetails}\n      />\n      <WebMasterRoutes\n        exact\n        path=\"/web-master/add-interview/:codeCountry\"\n        component={AddInterview}\n      />\n      <WebMasterRoutes\n        exact\n        path=\"/web-master/edit-interview/:codeCountry/:idInterview\"\n        component={EditInterview}\n      />\n      <WebMasterRoutes\n        exact\n        path=\"/web-master/projectofthemonth/:codeCountry/:idProject\"\n        component={ProjectOfMonth}\n      />\n      <WebMasterRoutes\n        exact\n        path=\"/web-master/technicaldetails/:codeCountry/:idProject/:multimedia\"\n        component={TechnicalDetails}\n      />{\" \"}\n      {/* <WebMasterRoutes\n        exact\n        path=\"/web-master/moredetailsproject/:codeCountry/:idProject/:multimedia\"\n        component={MoreDetailsProject}\n      /> */}\n      <WebMasterRoutes\n        exact\n        path=\"/web-master/edit-technical-details/:codeCountry/:idProject\"\n        component={EditTechnicalDetails}\n      />\n      <WebMasterRoutes\n        exact\n        path=\"/web-master/experts/:codeCountry\"\n        component={ListExperts}\n      />{\" \"}\n      <WebMasterRoutes\n        exact\n        path=\"/web-master/RoadMap/:codeCountry\"\n        component={RoadMap}\n      />{\" \"}\n      <WebMasterRoutes\n        exact\n        path=\"/web-master/add-expert-article/:codeCountry/:idExpert\"\n        component={AddExpertArticle}\n      />\n      <WebMasterRoutes\n        exact\n        path=\"/web-master/users/:multimedia/:codeCountry\"\n        component={Users}\n      />{\" \"}\n      <SuperAdminRoutes exact path=\"/super-admin/\" component={Dashboard} />\n      <SuperAdminRoutes\n        exact\n        path=\"/super-admin/edit-webmaster/:idWebMaster\"\n        component={EditWebMaster}\n      />\n      <SuperAdminRoutes\n        exact\n        path=\"/super-admin/webMaster\"\n        component={ListWebMasters}\n      />\n      <SuperAdminRoutes\n        exact\n        path=\"/super-admin/projects\"\n        component={ListProjectsGlobal}\n      />{\" \"}\n      <SuperAdminRoutes\n        exact\n        path=\"/super-admin/organizations\"\n        component={ListOrganizationsAdmin}\n      />{\" \"}\n      <SuperAdminRoutes\n        exact\n        path=\"/super-admin/edit-organization/idOrganization\"\n        component={EditOrganizationAdmin}\n      />{\" \"}\n      <SuperAdminRoutes\n        exact\n        path=\"/super-admin/add-organization\"\n        component={AddOrganizationAdmin}\n      />\n      <SuperAdminRoutes\n        exact\n        path=\"/super-admin/add-webmaster\"\n        component={AddWebmaster}\n      />{\" \"}\n      <SuperAdminRoutes\n        exact\n        path=\"/super-admin/details-project-null/:idProject\"\n        // component={DetailsProjectNull}\n        component={EditProjectSuperAdmin}\n      />{\" \"}\n      <SuperAdminRoutes\n        exact\n        path=\"/super-admin/countries\"\n        component={ListCountryDisabled}\n      />\n      {/* <SuperAdminRoutes\n        exact\n        path=\"/super-admin/countries/:multimedia/:codeCountry\"\n        component={ListCountryEnabled}\n      /> */}\n      {/* //////////////////////////////// LINKEDIN ROUTES //////////////////////////////////*/}\n      <SecureRouteLink // view more tweets\n        exact\n        path=\"/linkdin/\"\n        component={Home}\n      />\n      <Route // view more tweets\n        exact\n        path=\"/linkdin/login\"\n        component={LoginLinkedin}\n      />\n      <Route // view more tweets\n        exact\n        path=\"/linkedin/register\"\n        component={RegisterLink}\n      />\n      <SecureRouteLink // view more tweets\n        exact\n        path=\"/linkedin/profil/:idUser\"\n        component={Profil}\n      />\n      <SecureRouteLink exact path=\"/linkedin/network\" component={Network} />\n      <SecureRouteLink\n        exact\n        path=\"/linkedin/mydbanetwork\"\n        component={MyDbaNetwork}\n      />\n      <SecureRouteLink\n        exact\n        path=\"/linkedin/myprojects\"\n        component={MyProjects}\n      />\n      <SecureRouteLink\n        exact\n        path=\"/linkedin/add-project\"\n        component={AddProjectByExpert}\n      />\n      <SecureRouteLink\n        exact\n        path=\"/linkedin/listofprojects\"\n        component={ChoiceOftheProjectList}\n      />\n      <Redirect to=\"/not-found-cover\" />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/conf/WebMasterRoutes.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/conf/SuperAdminRoutes.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/HomeCountry.js",["978","979","980","981","982","983","984","985","986","987","988"],"import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  getOneProjectOfMonthByCountryApi,\n  getProjectsOfMonthApi,\n} from \"../../apis/projectApi\";\nimport YoutubeVideo from \"../../components/aidchannel/youtubeVideos/YoutubeVideo\";\nimport Tweets from \"../../components/aidchannel/tweets/Tweets\";\nimport CardInfo from \"../../components/aidchannel/general/CardInfo\";\nimport CardInfo2 from \"../../components/aidchannel/general/CardInfo2\";\nimport CountryHeader from \"../../components/layout/header/CountryHeader\";\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\nimport {\n  getAcceptedVideosByCountryLimit,\n  getVideosByCountry,\n} from \"../../apis/youtubeApi\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  getAcceptedTweetsByCountry,\n  getAllTweetsByCountryPagination,\n} from \"apis/twitterApi\";\nimport useIntersectionObserver from \"../../helpers/useIntersectionObserver\";\nimport { useInfiniteQuery } from \"react-query\";\nimport Post from \"../../components/aidchannel/tweets/Post\";\nimport {\n  getArticleAcceptedByCountry,\n  getArticlesByCountry,\n} from \"apis/articleApi\";\nimport ArticleCard from \"components/aidchannel/articles/ArticleCard\";\nconst HomeCountry = (props) => {\n  const [project, setProject] = useState();\n  const [article, setArticles] = useState();\n  const [expert, setExpert] = useState();\n  const [tweets, setTweets] = useState();\n  const [videos, setVideos] = useState();\n  const history = useHistory();\n  const [limit] = useState(4);\n  const loadMoreButtonRef = useRef();\n  const { codeCountry } = useParams();\n\n  const getDataFromApi = useCallback(async () => {\n    const proj = await getOneProjectOfMonthByCountryApi(codeCountry);\n    setProject(proj);\n    const videos = await getAcceptedVideosByCountryLimit(codeCountry, 4);\n    setVideos(videos);\n    const article = await getArticleAcceptedByCountry(codeCountry, 3, 1);\n    setArticles(article);\n    const tweets = await getAcceptedTweetsByCountry(codeCountry, 4);\n    setTweets(tweets);\n  }, [codeCountry]);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [codeCountry, getDataFromApi]);\n\n  return (\n    <>\n      <CountryHeader />\n      <div className=\"container\" style={{ minHeight: \"100vh\" }}>\n        {project && (\n          <>\n            <h1 className=\"heading_background  mt-5 mb-5 pb-3 pt-3\">\n              Project<span className=\"sub-heading\"> of the month</span>\n            </h1>\n            <CardInfo\n              data={project}\n              url={`/country/${codeCountry}/projectOfMonthDetails`}\n              index={0}\n            />\n          </>\n        )}\n\n      \n        {expert && (\n          <>\n            <h1 className=\"heading_background  mt-5 mb-5 pb-3 pt-3\">\n              Expert<span className=\"sub-heading\"> of the month</span>\n            </h1>\n            <div className=\"col-6\">\n              <button\n                onClick={() =>\n                  history.push(\n                    `/country/${codeCountry}/view-more-expert-article`\n                  )\n                }\n                className=\"btn btn-view-more\"\n                style={{ marginTop: \"10px\" }}\n              >\n                More Experts\n              </button>\n            </div>\n          </>\n        )}\n        {videos && (\n          <>\n            {\" \"}\n            <h1 className=\"heading_background  mt-5 mb-5 pb-3 pt-3\">\n              Youtube<span className=\"sub-heading\"> Videos</span>\n            </h1>\n            <div className=\"row\">\n              {videos?.map((video, index) => (\n                <div key={index} className=\"col-12  col-md-6 \">\n                  <YoutubeVideo key={index} url={video?.video_url} />\n                </div>\n              ))}\n            </div>\n            <div className=\"row\">\n              <div className=\"col-6 mt-1\">\n                <button\n                  onClick={() =>\n                    history.push(`/country/${codeCountry}/view-more-youtube`)\n                  }\n                  type=\"button\"\n                  className=\"btn btn-view-more\"\n                  style={{ marginTop: \"10px\", marginLeft: \"30px\" }}\n                >\n                  More Videos\n                </button>{\" \"}\n              </div>\n            </div>\n          </>\n        )}\n        {tweets && (\n          <>\n            <h1 className=\"container heading_background  mt-5 mb-5 pb-3 pt-3\">\n              Tweets<span className=\"sub-heading\"> </span>\n            </h1>\n            <div className=\"row\">\n              {tweets?.map((tweet, index) => (\n                <div\n                  key={index}\n                  className=\"col-12  p-2 col-lg-5 mx-auto mt-3 border\"\n                >\n                  <a\n                    style={{ textDecoration: \"none\" }}\n                    href={`https://twitter.com/${tweet?.twitter_username}/status/${tweet?.tweet_id}`}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    <Post\n                      displayName={tweet?.name}\n                      username={tweet?.twitter_username}\n                      verified={true}\n                      text={tweet?.body}\n                      avatar={tweet?.avatar_id}\n                      image={tweet?.photos?.length > 0 && tweet.photos[0]}\n                    />\n                  </a>\n                </div>\n              ))}\n            </div>\n            <div className=\"row\">\n              <div className=\"col-6\">\n                <button\n                  onClick={() =>\n                    history.push(`/country/${codeCountry}/view-more-tweet`)\n                  }\n                  type=\"button\"\n                  className=\"btn btn-view-more\"\n                  style={{ marginTop: \"20px\", marginLeft: \"30px\" }}\n                >\n                  More Tweets\n                </button>\n              </div>\n            </div>\n          </>\n        )}\n        {article && (\n          <>\n            <h1 className=\"container heading_background  mt-5 mb-5 pb-3 pt-3\">\n              Articles <span className=\"sub-heading\"> Related</span>\n            </h1>\n            <div className=\"row\">\n              {article?.map((article, index) => (\n                <div key={index} className=\"col-12  p-2  mt-3 border\">\n                  <ArticleCard article={article} key={index} />\n                </div>\n              ))}\n            </div>\n            <div className=\"row\">\n              <div className=\"col-6 my-2\">\n                <button\n                  onClick={() =>\n                    history.push(`/country/${codeCountry}/view-more-article`)\n                  }\n                  type=\"button \"\n                  className=\"btn btn-view-more \"\n                  style={{ marginTop: \"10px\" }}\n                >\n                  More Articles\n                </button>{\" \"}\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n      <PublicFooter />\n    </>\n  );\n};\n\nexport default HomeCountry;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ProjectOfTheMonthDetails.js",["989","990","991","992","993","994"],"import React, { useState, useEffect } from \"react\";\nimport {\n  getOneProjectOfMonthByCountryApi,\n  getProjectOfMonthByCountryApi,\n  getProjectsOfMonthApi,\n} from \"../../apis/projectApi\";\n\nimport CardInfoDetails from \"../../components/aidchannel/general/CardInfoDetails\";\n\nimport CountryHeader from \"../../components/layout/header/CountryHeader\";\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\nimport CardSmall from \"../../components/aidchannel/general/CardSmall\";\nimport { useParams } from \"react-router-dom\";\nimport { getOneInterviewTypesByName } from \"apis/interviewTypeApi\";\nimport { getInterviewByProjectAndType } from \"apis/interviewApi\";\n\nconst HomeCountry = (props) => {\n  const [project, setProject] = useState();\n  const [copTypeId, setCopTypeId] = useState();\n  const [donorTypeId, setDonorTypeId] = useState();\n  const [beneficiaryTypeId, setBeneficiaryTypeId] = useState();\n  const [copInterview, setCopInterview] = useState();\n  const [donorInterview, setDonorInterview] = useState();\n  const [beneficiaryInterview, setBeneficiaryInterview] = useState();\n  const { codeCountry } = useParams();\n\n  useEffect(() => {\n    getDataFromApi();\n  }, []);\n\n  const getDataFromApi = async () => {\n    const proj = await getOneProjectOfMonthByCountryApi(codeCountry);\n    setProject(proj);\n\n    const cop = await getOneInterviewTypesByName(\"COP\");\n    setCopTypeId(cop);\n    const donor = await getOneInterviewTypesByName(\"DONOR\");\n    setDonorTypeId(donor);\n    const beneficiary = await getOneInterviewTypesByName(\"BENEFICIARY\");\n    setBeneficiaryTypeId(beneficiary);\n\n    const copInterview = await getInterviewByProjectAndType(proj?._id, cop._id);\n    setCopInterview(copInterview);\n    const donorInterview = await getInterviewByProjectAndType(\n      proj?._id,\n      donor._id\n    );\n    setDonorInterview(donorInterview);\n    const beneficiaryInterview = await getInterviewByProjectAndType(\n      proj?._id,\n      beneficiary._id\n    );\n    setBeneficiaryInterview(beneficiaryInterview);\n  };\n  const overview = {\n    name: \"overview\",\n    interviewImage: \"/assets/overview.png\",\n  };\n  console.log(copInterview, \"copInter\");\n  console.log(donorInterview, \"donorInter\");\n  console.log(beneficiaryInterview, \"benefInter\");\n  return (\n    <>\n      <CountryHeader />\n      <div className=\"container\" style={{ minHeight: \"100vh\" }}>\n        {project && (\n          <>\n            <h1 className=\"heading_background  mt-5 mb-5 pb-3 pt-3\">\n              Project<span className=\"sub-heading\"> of the month</span>\n            </h1>{\" \"}\n            <CardInfoDetails data={project} />\n          </>\n        )}\n\n        <div class=\"row\">\n          {copInterview && codeCountry && (\n            <div class=\"col-12 col-md-6\">\n              <h1 className=\"heading_background  mt-3 mb-4 pb-3 pt-1\">\n                COP<span className=\"sub-heading\"> Interview</span>\n              </h1>\n              <CardSmall data={copInterview} codeCountry={codeCountry} />\n            </div>\n          )}\n          {donorInterview && codeCountry && (\n            <div className=\"col-12 col-md-6\">\n              <h1 className=\"heading_background  mt-3 mb-4 pb-3 pt-1\">\n                Donor<span className=\"sub-heading\"> Interview</span>\n              </h1>\n              <CardSmall data={donorInterview} codeCountry={codeCountry} />\n            </div>\n          )}\n          {beneficiaryInterview && codeCountry && (\n            <div className=\"col-12 col-md-6\">\n              <h1 className=\"heading_background  mt-3 mb-4 pb-3 pt-1\">\n                Beneficiary<span className=\"sub-heading\"> Interview</span>\n              </h1>\n              <CardSmall\n                data={beneficiaryInterview}\n                codeCountry={codeCountry}\n              />\n            </div>\n          )}\n          {copInterview &&\n            donorInterview &&\n            beneficiaryInterview &&\n            codeCountry && (\n              <div className=\"col-12 col-md-6\">\n                <h1 className=\"heading_background  mt-3 mb-4 pb-3 pt-1\">\n                  Project<span className=\"sub-heading\"> Overview</span>\n                </h1>\n                <CardSmall\n                  data={overview}\n                  codeCountry={codeCountry}\n                  projectId={project?._id}\n                />\n              </div>\n            )}\n        </div>\n      </div>\n\n      <PublicFooter />\n    </>\n  );\n};\n\nexport default HomeCountry;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ProjectSearch.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ProjectsCountry.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ShowMoreDetailsProject.js",["995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006"],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/public/Index.js",["1007"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { getProjectsOfMonthApi } from \"../../apis/projectApi\";\nimport { getExpertsofMonth } from \"../../apis/userApi\";\nimport {\n  getDonorsOfMonth,\n  getImplementersOfMonth,\n} from \"../../apis/organizationApi\";\n\nimport ProjectCard from \"../../components/aidchannel/project/ProjectCard\";\nimport ExpertCard from \"../../components/aidchannel/expert/ExpertCard\";\nimport OrganizationCard from \"../../components/aidchannel/organization/OrganizationCard\";\nimport PublicHeader from \"../../components/layout/header/PublicHeader\";\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\nimport PublicFooterHomepage from \"components/layout/footer/PublicFooterHomepage\";\n\nconst Index = () => {\n  const [projects, setProjects] = useState();\n  const [experts, setExperts] = useState();\n  const [donors, setDonors] = useState();\n  const [implementers, setImplementers] = useState();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    getDataFromApi();\n  }, []);\n\n  const getDataFromApi = async () => {\n    const proj = await getProjectsOfMonthApi(3, 1);\n    setProjects(proj?.data);\n    const exper = await getExpertsofMonth(3, 1);\n    setExperts(exper);\n    const donor = await getDonorsOfMonth(3, 1, \"\");\n    setDonors(donor?.data);\n    const imple = await getImplementersOfMonth(3, 1);\n    setImplementers(imple?.data);\n  };\n\n  return (\n    <>\n      <PublicHeader />\n      <div style={{ minHeight: \"100vh\" }}>\n        {projects && experts && donors && implementers && (\n          <div className=\"container my-5\">\n            <h1 className=\"heading mt-5\">\n              Projects<span className=\"sub-heading\"> of the month</span>\n            </h1>\n            <div className=\"row\">\n              {projects?.map((project, index) => (\n                <div key={index} className=\"col-12 col-md-6 col-lg-4 my-4\">\n                  <ProjectCard project={project} key={index} />\n                </div>\n              ))}\n            </div>\n            <button\n              onClick={() => history.push(\"/view-more-project-month\")}\n              type=\"button\"\n              className=\"btn btn-view-more\"\n            >\n              View More\n            </button>\n            <h1 className=\"heading mt-5\">\n              Experts<span className=\"sub-heading\"> of the month</span>\n            </h1>\n            <div className=\"row\">\n              {experts?.map((expert, index) => (\n                <div key={index} className=\"col-12 col-md-6 col-lg-4 my-4\">\n                  <ExpertCard expert={expert} key={index} />\n                </div>\n              ))}\n            </div>\n\n            <button\n              onClick={() => history.push(\"/view-more-expert-month\")}\n              type=\"button\"\n              className=\"btn btn-view-more\"\n            >\n              View More\n            </button>\n            <h1 className=\"heading mt-5\">\n              Donors<span className=\"sub-heading\"> of the month</span>\n            </h1>\n            <div className=\"row\">\n              {donors?.map((donor, index) => (\n                <div key={index} className=\"col-12 col-md-6 col-lg-4 my-4\">\n                  <OrganizationCard organization={donor} key={index} />\n                </div>\n              ))}\n            </div>\n            <button\n              onClick={() => history.push(\"/view-more/donors/month\")}\n              type=\"button\"\n              className=\"btn btn-view-more\"\n            >\n              View More\n            </button>\n            <h1 className=\"heading mt-5\">\n              Implementers<span className=\"sub-heading\"> of the month</span>\n            </h1>\n            <div className=\"row\">\n              {implementers?.map((implementer, index) => (\n                <div key={index} className=\"col-12 col-md-6 col-lg-4 my-4\">\n                  <OrganizationCard organization={implementer} key={index} />\n                </div>\n              ))}\n            </div>\n            <button\n              onClick={() => history.push(\"/view-more/implementers/month\")}\n              type=\"button\"\n              className=\"btn btn-view-more\"\n            >\n              View More\n            </button>\n          </div>\n        )}\n      </div>\n      <PublicFooterHomepage />\n    </>\n  );\n};\n\nexport default Index;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/public/LearnMoreExpert.js",["1008"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getExpertArticleByIdExpert } from \"../../apis/ExpertArticleApi\";\nimport { getExpertDetails } from \"../../../src/apis/userApi\";\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\nimport CardInfoExpert from \"../../components/aidchannel/general/CardInfoExpert\";\nimport ExpertDetailBody from \"../../components/aidchannel/expert/ExpertDetailBody\";\nimport PublicHeader from \"components/layout/header/PublicHeader\";\nimport PublicFooterHomepage from \"components/layout/footer/PublicFooterHomepage\";\n\nconst LearnMoreExpert = () => {\n  const { expert_id } = useParams();\n\n  const [expert, setExperts] = useState();\n  const [article, setArticle] = useState();\n\n  const getDataFromApi = useCallback(async () => {\n    const article = await getExpertArticleByIdExpert(expert_id);\n    setArticle(article);\n    const expert = await getExpertDetails(expert_id);\n    setExperts(expert);\n  }, [expert_id]);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  return (\n    <>\n      <PublicHeader />\n      <div className=\"container\" style={{ minHeight: \"100vh\" }}>\n        {expert && (\n          <div className=\"row\">\n            <div className=\"col-12 \">\n              <ExpertDetailBody expert={expert} />\n            </div>\n          </div>\n        )}\n        {article && expert && (\n          <div className=\"container mt-5  \">\n            <h1 className=\"heading_background  mt-5 mb-5 pb-3 pt-3\">\n              Expert's\n              <span className=\"sub-heading\"> Article</span>\n            </h1>{\" \"}\n            <CardInfoExpert data={article} />\n          </div>\n        )}\n      </div>\n      <PublicFooterHomepage />\n    </>\n  );\n};\n\nexport default LearnMoreExpert;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/public/OrganizationDetails.js",["1009"],"import PublicFooterHomepage from \"components/layout/footer/PublicFooterHomepage\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getOrganization } from \"../../apis/organizationApi\";\nimport { getProjectByFunder } from \"../../apis/projectApi\";\nimport OrganizationDetailsBody from \"../../components/aidchannel/organization/OrganizationDetailsBody\";\nimport OrganizationDetailsHeader from \"../../components/aidchannel/organization/OrganizationDetailsHeader\";\nimport ProjectCard from \"../../components/aidchannel/project/ProjectCard\";\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\nimport PublicHeader from \"../../components/layout/header/PublicHeader\";\n\nconst OrganizationDetails = () => {\n  const [organization, setOrganization] = useState();\n  const [organizationProjects, setOrganizationProjects] = useState();\n\n  const { organizationId } = useParams();\n\n  const getDataFromApi = useCallback(async () => {\n    const org = await getOrganization(organizationId);\n    setOrganization(org);\n    const projects = await getProjectByFunder(\n      \"60c7344a1fabf71db04496db\",\n      12,\n      1\n    );\n    setOrganizationProjects(projects?.data);\n  }, [organizationId]);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  return (\n    <>\n      <PublicHeader />\n      {organization && organizationProjects && (\n        <div className=\"container\">\n          <OrganizationDetailsHeader organization={organization} />\n          <OrganizationDetailsBody organization={organization} />\n          <h1 className=\"heading mt-5\">\n            Last<span className=\"sub-heading\"> Projects</span>\n          </h1>\n          <div className=\"row\">\n            {organizationProjects?.map((project, index) => (\n              <div key={index} className=\"col-12 col-md-6 col-lg-4 my-4\">\n                <ProjectCard project={project} key={index} />\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      <PublicFooterHomepage />\n    </>\n  );\n};\n\nexport default OrganizationDetails;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/public/ViewMoreOrganization.js",["1010"],"import React, { useState, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useInfiniteQuery } from \"react-query\";\nimport {\n  getDonorsOfMonthScrolling,\n  getImplementersOfMonthScrolling,\n} from \"../../apis/organizationApi\";\nimport useIntersectionObserver from \"../../helpers/useIntersectionObserver\";\nimport InputSearch from \"../../components/aidchannel/general/InputSearch\";\nimport PublicHeader from \"../../components/layout/header/PublicHeader\";\nimport OrganizationCard from \"../../components/aidchannel/organization/OrganizationCard\";\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\nimport PublicFooterHomepage from \"components/layout/footer/PublicFooterHomepage\";\n\nconst ViewMoreOrganization = () => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [limit] = useState(9);\n\n  const { organization } = useParams();\n  const loadMoreButtonRef = useRef();\n\n  const chooseOrganizationApi = ({ pageParam = 1, queryKey }) => {\n    if (organization === \"donors\")\n      return getDonorsOfMonthScrolling({ pageParam: 1, queryKey });\n    else if (organization === \"implementers\")\n      return getImplementersOfMonthScrolling({ pageParam: 1, queryKey });\n    return null;\n  };\n\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n  } = useInfiniteQuery([searchText, limit], chooseOrganizationApi, {\n    getNextPageParam: (lastPage, pages) => {\n      if (lastPage.data.length === limit) return parseInt(lastPage.page) + 1;\n      return false;\n    },\n  });\n\n  useIntersectionObserver({\n    target: loadMoreButtonRef,\n    onIntersect: fetchNextPage,\n    enabled: hasNextPage,\n  });\n\n  return (\n    <>\n      <PublicHeader />\n      <div className=\"container\">\n        <h1 className=\"heading my-4\">\n          {organization.charAt(0).toUpperCase() + organization.slice(1)}\n          <span className=\"sub-heading\"> of the month </span>\n        </h1>\n        <InputSearch\n          setSearchText={setSearchText}\n          searchText={searchText}\n          placeholder={`Search for ${organization}`}\n        />\n        <div className=\"row\">\n          {data?.pages.map((group, i) => (\n            <React.Fragment key={i}>\n              {group.data.map((organization, index) => (\n                <div key={index} className=\"col-12 col-md-6 col-lg-4 my-4\">\n                  <OrganizationCard organization={organization} key={index} />\n                </div>\n              ))}\n            </React.Fragment>\n          ))}\n        </div>\n        <div style={{ marginTop: \"20px\" }}>\n          <button\n            ref={loadMoreButtonRef}\n            onClick={() => fetchNextPage()}\n            disabled={!hasNextPage || isFetchingNextPage}\n          >\n            {isFetchingNextPage\n              ? \"Loading more ....\"\n              : hasNextPage\n              ? \"Load More\"\n              : \"Nothing more to load\"}\n          </button>\n        </div>\n      </div>\n      <PublicFooterHomepage />\n    </>\n  );\n};\n\nexport default ViewMoreOrganization;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/public/ViewMoreExpert.js",["1011"],"import React, { useState, useRef } from \"react\";\nimport { useInfiniteQuery } from \"react-query\";\nimport useIntersectionObserver from \"../../helpers/useIntersectionObserver\";\nimport InputSearch from \"../../components/aidchannel/general/InputSearch\";\nimport PublicHeader from \"../../components/layout/header/PublicHeader\";\nimport { getExpertsofMonthScrolling } from \"../../apis/userApi\";\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\nimport ExpertCard from \"../../components/aidchannel/expert/ExpertCard\";\nimport PublicFooterHomepage from \"components/layout/footer/PublicFooterHomepage\";\n\nconst ViewMoreExpert = () => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [limit] = useState(9);\n\n  const loadMoreButtonRef = useRef();\n\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n  } = useInfiniteQuery([searchText, limit], getExpertsofMonthScrolling, {\n    getNextPageParam: (lastPage, pages) => {\n      if (lastPage.data.length === limit) return parseInt(lastPage.page) + 1;\n      return false;\n    },\n  });\n\n  useIntersectionObserver({\n    target: loadMoreButtonRef,\n    onIntersect: fetchNextPage,\n    enabled: hasNextPage,\n  });\n\n  return (\n    <>\n      <PublicHeader />\n      <div className=\"container\">\n        <h1 className=\"heading my-4\">\n          Experts\n          <span className=\"sub-heading\"> of the month </span>\n        </h1>\n        <InputSearch\n          setSearchText={setSearchText}\n          searchText={searchText}\n          placeholder={`Search for experts`}\n        />\n        <div className=\"row\">\n          {data?.pages.map((group, i) => (\n            <React.Fragment key={i}>\n              {group.data.map((expert, index) => (\n                <div key={index} className=\"col-12 col-md-6 col-lg-4 my-4\">\n                  <ExpertCard expert={expert} key={index} />\n                </div>\n              ))}\n            </React.Fragment>\n          ))}\n        </div>\n        <div style={{ marginTop: \"20px\" }}>\n          <button\n            ref={loadMoreButtonRef}\n            onClick={() => fetchNextPage()}\n            disabled={!hasNextPage || isFetchingNextPage}\n          >\n            {isFetchingNextPage\n              ? \"Loading more ....\"\n              : hasNextPage\n              ? \"Load More\"\n              : \"Nothing more to load\"}\n          </button>\n        </div>\n      </div>\n      <PublicFooterHomepage />\n    </>\n  );\n};\n\nexport default ViewMoreExpert;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/public/ViewMoreProject.js",["1012"],"import React, { useState, useRef } from \"react\";\nimport { useInfiniteQuery } from \"react-query\";\nimport useIntersectionObserver from \"../../helpers/useIntersectionObserver\";\nimport InputSearch from \"../../components/aidchannel/general/InputSearch\";\nimport PublicHeader from \"../../components/layout/header/PublicHeader\";\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\nimport ProjectCard from \"../../components/aidchannel/project/ProjectCard\";\nimport { getProjectOfMonthScrolling } from \"../../apis/projectApi\";\nimport PublicFooterHomepage from \"components/layout/footer/PublicFooterHomepage\";\n\nconst ViewMoreProject = () => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [limit] = useState(9);\n\n  const loadMoreButtonRef = useRef();\n\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n  } = useInfiniteQuery([searchText, limit], getProjectOfMonthScrolling, {\n    getNextPageParam: (lastPage, pages) => {\n      if (lastPage.data.length === limit) return parseInt(lastPage.page) + 1;\n      return false;\n    },\n  });\n\n  useIntersectionObserver({\n    target: loadMoreButtonRef,\n    onIntersect: fetchNextPage,\n    enabled: hasNextPage,\n  });\n\n  return (\n    <>\n      <PublicHeader />\n      <div className=\"container\">\n        <h1 className=\"heading my-4\">\n          Projects\n          <span className=\"sub-heading\"> of the month </span>\n        </h1>\n        <InputSearch\n          setSearchText={setSearchText}\n          searchText={searchText}\n          placeholder={`Search for projects`}\n        />\n        <div className=\"row\">\n          {data?.pages.map((group, i) => (\n            <React.Fragment key={i}>\n              {group.data.map((project, index) => (\n                <div key={index} className=\"col-12 col-md-6 col-lg-4 my-4\">\n                  <ProjectCard project={project} key={index} />\n                </div>\n              ))}\n            </React.Fragment>\n          ))}\n        </div>\n        <div style={{ marginTop: \"20px\" }}>\n          <button\n            ref={loadMoreButtonRef}\n            onClick={() => fetchNextPage()}\n            disabled={!hasNextPage || isFetchingNextPage}\n          >\n            {isFetchingNextPage\n              ? \"Loading more ....\"\n              : hasNextPage\n              ? \"Load More\"\n              : \"Nothing more to load\"}\n          </button>\n        </div>\n      </div>\n      <PublicFooterHomepage />\n    </>\n  );\n};\n\nexport default ViewMoreProject;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/public/LearnMoreProject.js",["1013","1014"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { getProject2 } from \"../../apis/projectApi\";\nimport PublicHeader from \"../../components/layout/header/PublicHeader\";\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\nimport ProjectDetailHeader from \"../../components/aidchannel/project/ProjectDetailHeader\";\nimport ProjectDetailSide from \"../../components/aidchannel/project/ProjectDetailSide\";\nimport PublicFooterHomepage from \"components/layout/footer/PublicFooterHomepage\";\n\nconst LearnMoreProject = () => {\n  const { project_id, multimedia } = useParams();\n\n  const [project, setProject] = useState({});\n\n  const history = useHistory();\n\n  const getDataFromApi = useCallback(async () => {\n    const project = await getProject2(project_id);\n    setProject(project);\n  }, [project_id]);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  return (\n    <>\n      <div>\n        <PublicHeader />\n\n        <ProjectDetailHeader project={project} />\n        <div className=\"container my-5\">\n          <ProjectDetailSide project={project} />\n        </div>\n\n        <div className=\"container my-5\">\n          <button\n            onClick={() => history.push(`/projectdetails/${project_id}/more`)}\n            type=\"button\"\n            className=\"btn btn-view-more\"\n          >\n            Show More Details\n          </button>\n        </div>\n\n        <PublicFooterHomepage />\n      </div>\n    </>\n  );\n};\n\nexport default LearnMoreProject;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/public/Login.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ViewMoreArticle.js",["1015","1016","1017","1018","1019"],"import React, { useState, useRef } from \"react\";\nimport { useInfiniteQuery } from \"react-query\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport InputSearch from \"../../components/aidchannel/general/InputSearch\";\nimport PublicHeader from \"../../components/layout/header/PublicHeader\";\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\n\nimport useIntersectionObserver from \"../../helpers/useIntersectionObserver\";\n\n\nimport { getAllArticlesByCountryPagination, getArticlesAccepted, getarticlesScrolling } from \"apis/articleApi\";\nimport ArticleCard from \"components/aidchannel/articles/ArticleCard\";\nimport CountryHeader from \"components/layout/header/CountryHeader\";\n\nconst ViewMoreArticle = () => {\n  const [searchText, setSearchText] = useState(\"\");\n  const { codeCountry } = useParams();\n  const [limit] = useState(9);\n  const loadMoreButtonRef = useRef();\n  const [test, setTest] = useState(false);\n const history = useHistory();\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n  } = useInfiniteQuery(\n    [searchText,codeCountry, limit, test],\n    getarticlesScrolling,\n    {\n      getNextPageParam: (lastPage, pages) => {\n        if (lastPage.data.length === limit) return parseInt(lastPage.page) + 1;\n        return false;\n      },\n    }\n  );\n  useIntersectionObserver({\n    target: loadMoreButtonRef,\n    onIntersect: fetchNextPage,\n    enabled: hasNextPage,\n  });\n\n\n  return (\n    <>\n      <CountryHeader />\n      <div className=\"container\">\n        <h1 className=\"heading my-4\">\n          More\n          <span className=\"sub-heading\"> Articles </span>\n        </h1>\n        <InputSearch\n          setSearchText={setSearchText}\n          searchText={searchText}\n          placeholder={`Search for Articles`}\n        />\n        <div className=\"row\">\n          {data?.pages.map((group, i) => (\n            <React.Fragment key={i}>\n              {group.data.map((article, index) => (\n                <div key={index} className=\"col-12  p-2  mt-3 border\">\n                  <ArticleCard article={article} key={index} />\n                </div>\n              ))}\n            </React.Fragment>\n          ))}\n        </div>\n\n        <div style={{ marginTop: \"20px\" }}>\n          <button\n            ref={loadMoreButtonRef}\n            onClick={() => fetchNextPage()}\n            disabled={!hasNextPage || isFetchingNextPage}\n          >\n            {isFetchingNextPage\n              ? \"Loading more ....\"\n              : hasNextPage\n              ? \"Load More\"\n              : \"Nothing more to load\"}\n          </button>\n        </div>\n      </div>\n      <PublicFooter />\n    </>\n  );\n};\n\nexport default ViewMoreArticle;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/AddOrganization.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/public/Register.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/WebMasterHome.js",["1020"],"import { getNumberArticlesByCountry } from \"apis/articleApi\";\nimport { getNumberTweetsByCountry } from \"apis/twitterApi\";\nimport { getNumberExperts } from \"apis/userApi\";\nimport { getNumberVideosByCountry } from \"apis/youtubeApi\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Flag from \"react-world-flags\";\nimport { getNumberOrganizationsByCountry } from \"../../apis/organizationApi\";\nimport {\n  getNumberProjectsByCountry,\n  getNumberProjectsByCountryNULL,\n} from \"../../apis/projectApi\";\nimport CounterDatavisualization from \"../../components/aidchannel/general/CounterDatavisualization\";\n\nconst WebMasterHome = () => {\n  const { codeCountry } = useParams();\n  const [numberProjects, setNumberProjects] = useState();\n  const [numberOrganizations, setNumberOrganizations] = useState();\n  const [numberVideos, setNumberVideos] = useState();\n  const [numberTweets, setNumberTweets] = useState();\n  const [numberArticles, setnumberArticles] = useState();\n  const [numberExperts, setnumberExperts] = useState();\n  const getDataFromApi = useCallback(async () => {\n    const numberProj = await getNumberProjectsByCountry(codeCountry);\n    setNumberProjects(numberProj);\n\n    const numberOrg = await getNumberOrganizationsByCountry(codeCountry);\n    setNumberOrganizations(numberOrg);\n    const numberVideos = await getNumberVideosByCountry(codeCountry);\n    setNumberVideos(numberVideos);\n    const numberTweets = await getNumberTweetsByCountry(codeCountry);\n    setNumberTweets(numberTweets);\n    const numberArticles = await getNumberArticlesByCountry(codeCountry);\n    setnumberArticles(numberArticles);\n    const numberExperts = await getNumberExperts();\n    setnumberExperts(numberExperts);\n  }, [codeCountry]);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  return (\n    <div className=\"container\">\n      <h1>\n        <Flag\n          code={codeCountry}\n          height=\"70\"\n          width=\"70\"\n          style={{ marginRight: \"2px\" }}\n          className=\"flag\"\n        />{\" \"}\n        Dashboard\n      </h1>\n      <hr />\n      <div className=\"row mt-5\">\n        <div className=\"col-12 col-sm-6 col-md-4 mt-3\">\n          <CounterDatavisualization\n            value={\"0\" + numberProjects}\n            route={`/web-master/projects/${codeCountry}`}\n            title=\"Projects\"\n            bgColor=\"#0069d9\"\n            textColor=\"white\"\n            duration=\"1\"\n          />\n        </div>\n        <div className=\"col-12 col-sm-6 col-md-4 mt-3\">\n          <CounterDatavisualization\n            value={\"0\" + numberOrganizations}\n            route={`/web-master/organizations/${codeCountry}`}\n            title=\"Local organizations \"\n            bgColor=\"#0069d9\"\n            textColor=\"white\"\n            duration=\"1\"\n          />\n        </div>\n        <div className=\"col-12 col-sm-6 col-md-4 mt-3\">\n          <CounterDatavisualization\n            value={\"0\" + numberVideos}\n            route={`/web-master/validation/youtube/${codeCountry}`}\n            title=\"Youtube videos\"\n            bgColor=\"#0069d9\"\n            textColor=\"white\"\n            duration=\"1\"\n          />\n        </div>\n        <div className=\"col-12 col-sm-6 col-md-4 mt-3\">\n          <CounterDatavisualization\n            value={\"0\" + numberTweets}\n            route={`/web-master/validation/twitter/${codeCountry}`}\n            title=\"Tweets\"\n            bgColor=\"#0069d9\"\n            textColor=\"white\"\n            duration=\"1\"\n          />\n        </div>\n        <div className=\"col-12 col-sm-6 col-md-4 mt-3\">\n          <CounterDatavisualization\n            value={\"0\" + numberArticles}\n            route={`/web-master/validation/articles/${codeCountry}`}\n            title=\"Articles\"\n            bgColor=\"#0069d9\"\n            textColor=\"white\"\n            duration=\"1\"\n          />\n        </div>\n        <div className=\"col-12 col-sm-6 col-md-4 mt-3\">\n          <CounterDatavisualization\n            value={\"0\" + numberExperts}\n            route={`/web-master/experts/${codeCountry}`}\n            title=\"Experts\"\n            bgColor=\"#0069d9\"\n            textColor=\"white\"\n            duration=\"1\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WebMasterHome;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/ListOrganizations.js",["1021","1022"],"import TableOrganization from \"components/aidchannel/webmaster/TableOrganization\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Flag from \"react-world-flags\";\nimport { getCountryByCode } from \"../../apis/countryApi\";\nimport {\n  deleteOrganization,\n  getAllOrganizationsByCountry,\n} from \"../../apis/organizationApi\";\nimport MTableOrganization from \"../../components/aidchannel/webmaster/MTableOrganization\";\n\nconst ListOrganizations = () => {\n  const history = useHistory();\n  const { codeCountry } = useParams();\n  const [country, setCountry] = useState();\n  const [organizations, setOrganizations] = useState([]);\n\n  const getDataFromApi = useCallback(async () => {\n    const country = await getCountryByCode(codeCountry);\n    setCountry(country);\n    const subOrganization = await getAllOrganizationsByCountry(codeCountry);\n    setOrganizations(subOrganization?.reverse());\n  }, [codeCountry]);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi, codeCountry]);\n\n  const deleteSubOrg = async (org) => {\n    if (window.confirm(`Are you sure you wish to delete ${org.name} ?`)) {\n      try {\n        await deleteOrganization(org._id);\n        const newOrganizationList = organizations.filter(function(item) {\n          if (item[\"_id\"] === org?._id) return false;\n          return true;\n        });\n        setOrganizations(newOrganizationList);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      {country && (\n        <>\n          <h1>\n            <Flag\n              code={codeCountry}\n              height=\"70\"\n              width=\"70\"\n              style={{ marginRight: \"2px\" }}\n              className=\"flag\"\n            />{\" \"}\n            Local organizations office\n          </h1>\n          <hr />\n          <button\n            onClick={() =>\n              history.push(`/web-master/add-organization/${codeCountry}`)\n            }\n            className=\"btn btn-primary ml-3 mt-2 mb-3 shadow-none border-none\"\n            \n          >\n            Add\n          </button>\n          {/*   <MTableOrganization data={organizations} deleteRow={deleteSubOrg} />*/}\n          <TableOrganization />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ListOrganizations;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/EditOrganization.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/Interview.js",["1023","1024","1025","1026"],"import TableInterview from \"components/aidchannel/webmaster/TableInterview\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Flag from \"react-world-flags\";\nimport { getCountryByCode } from \"../../apis/countryApi\";\nimport {\n  // deleteInterviewApi,\n  //   deleteInterview,\n  getAllInterviewByCountry,\n} from \"../../apis/interviewApi\";\nimport MTableInterview from \"../../components/aidchannel/webmaster/MTableInterview\";\n\nconst Interview = () => {\n  const history = useHistory();\n  const { codeCountry } = useParams();\n  const [country, setCountry] = useState();\n  const [interview, setInterview] = useState([]);\n\n  const getDataFromApi = useCallback(async () => {\n    const country = await getCountryByCode(codeCountry);\n    setCountry(country);\n    const interviews = await getAllInterviewByCountry(codeCountry);\n    setInterview(interviews?.reverse());\n  }, []);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  return (\n    <div className=\"container\">\n      {country && (\n        <>\n          <h1>\n            <Flag\n              code={codeCountry}\n              height=\"70\"\n              width=\"70\"\n              style={{ marginRight: \"2px\" }}\n              className=\"flag\"\n            />{\" \"}\n            Old interviews\n          </h1>\n          <hr />\n\n          {/*<MTableInterview data={interview} />*/}\n          <TableInterview />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Interview;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/AddProject.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/ListProjects.js",["1027","1028","1029","1030","1031","1032","1033","1034","1035","1036"],"import Flag from \"react-world-flags\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport { getAllProjectsByCountry, deleteProject } from \"../../apis/projectApi\";\nimport TableProject from \"components/aidchannel/webmaster/TableProject\";\n\nconst ListProjects = () => {\n \n\n  return (\n    <div className=\"container\">\n      <>\n        <h5></h5>\n        {/* <button\n          onClick={() => history.push(`/web-master/add-project/${codeCountry}`)}\n          className=\"btn btn-primary ml-3 my-3 shadow-none border-none\"\n        >\n          Add\n        </button> */}\n        <TableProject />\n      </>\n    </div>\n  );\n};\n\nexport default ListProjects;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/LearnMoreArticle.js",["1037","1038"],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CardInfoDetails from \"../../components/aidchannel/general/CardInfoDetails\";\nimport { Link } from \"react-router-dom\";\nimport CountryHeader from \"../../components/layout/header/CountryHeader\";\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\n\nconst LearnMoreArticle = (props) => {\n  const { codeCountry } = useParams();\n\n  const article = {\n    name: \"WOMEN ACHIEVING THEIR DREAMS\",\n    description:\n      \"PARTNERSHIPS AND PROJECTS Family Planning: Partnerships Partnerships The U.S. Agency for International Development (USAID) works with a wide range of public and private partners to accelerate development  and ensure we are using resources efficiently. USAID‚Äôs partnerships promote PARTNERSHIPS AND PROJECTS Family Planning: Partnerships Partnerships The U.S. Agency for International Development (USAID) works with a wide range of public and private partners to accelerate development  and ensure we are using resources efficiently. USAID‚Äôs partnerships promote PARTNERSHIPS AND PROJECTS Family Planning: Partnerships Partnerships The U.S. Agency for International Development (USAID) works with a wide range of public and private partners to accelerate development  and ensure we are using resources efficiently. USAID‚Äôs partnerships promote PARTNERSHIPS AND PROJECTS Family Planning: Partnerships Partnerships The U.S. Agency for International Development (USAID) works with a wide range of public and private partners to accelerate development  and ensure we are using resources efficiently. USAID‚Äôs partnerships promote PARTNERSHIPS AND PROJECTS Family Planning: Partnerships Partnerships The U.S. Agency for International Development (USAID) works with a wide range of public and private partners to accelerate development  and ensure we are using resources efficiently. USAID‚Äôs partnerships promote ...\",\n    image_url:\n      \"https://share.america.gov/wp-content/uploads/2021/03/USAID-Women-Leaders-Climate-Crisis-49534646426_44e4a8da7c_o.jpg\",\n  };\n\n  return (\n    <>\n      <CountryHeader />\n      <div className=\"container\">\n        <h1 className=\"heading_background  mt-5 mb-5 pb-3 pt-3\">\n          Article<span className=\"sub-heading\"> details</span>\n        </h1>\n        <CardInfoDetails data={article} />\n      </div>\n      <div className=\"row\">\n        <Link to={`/country/${codeCountry}`}>\n          <button className=\"btn-view-more\">Go Back</button>\n        </Link>\n      </div>\n      <PublicFooter />\n    </>\n  );\n};\n\nexport default LearnMoreArticle;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ViewMoreYoutube.js",["1039","1040","1041","1042","1043","1044","1045","1046","1047"],"import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useInfiniteQuery } from \"react-query\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport   \"../../components/aidchannel/general/InputSearch.css\";\nimport PublicHeader from \"../../components/layout/header/PublicHeader\";\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\nimport { getAllTweetsByCountryPagination } from \"../../apis/twitterApi\";\nimport useIntersectionObserver from \"../../helpers/useIntersectionObserver\";\nimport YoutubeVideo from \"../../components/aidchannel/youtubeVideos/YoutubeVideo\";\nimport {\n  getAllVideosByCountryPagination,\n  getVideoAccepted,\n  getVideosByCountry,\n  getVideosScrolling,\n} from \"../../apis/youtubeApi\";\nimport InputSearch from \"../../components/aidchannel/general/InputSearch\";\nimport CountryHeader from \"components/layout/header/CountryHeader\";\nconst ViewMoreYoutube = () => {\n  const [searchText, setSearchText] = useState(\"\");\n  const { codeCountry } = useParams();\n\n  const [limit] = useState(9);\n  const loadMoreButtonRef = useRef();\n  const [test, setTest] = useState(false);\n\n  const {\n\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n  } = useInfiniteQuery(\n    [searchText, codeCountry,limit, test],\n    getVideosScrolling,\n    {\n      getNextPageParam: (lastPage, pages) => {\n        if (lastPage.data.length === limit) return parseInt(lastPage.page) + 1;\n        return false;\n      },\n    }\n  );\n  useIntersectionObserver({\n    target: loadMoreButtonRef,\n    onIntersect: fetchNextPage,\n    enabled: hasNextPage,\n  });\n\n\n\n  return (\n    <>\n      <CountryHeader />\n      <div className=\"container\">\n        <h1 className=\"heading my-4\">\n          More Youtube\n          <span className=\"sub-heading\"> Videos </span>\n        </h1>\n        <InputSearch\n          setSearchText={setSearchText}\n          searchText={searchText}\n          placeholder={`Search for videos`}\n        />\n        <div className=\"row\">\n          {data?.pages.map((group, i) => (\n            <React.Fragment key={i}>\n              {group.data.map((video, index) => (\n                <div key={index} className=\"mt-0 border p-3 m-2\">\n                  <YoutubeVideo url={video?.video_url} />\n                </div>\n              ))}\n            </React.Fragment>\n          ))}\n        </div>\n\n        <div style={{ marginTop: \"20px\" }}>\n          <button\n            ref={loadMoreButtonRef}\n            onClick={() => fetchNextPage()}\n            disabled={!hasNextPage || isFetchingNextPage}\n          >\n            {isFetchingNextPage\n              ? \"Loading more ....\"\n              : hasNextPage\n              ? \"Load More\"\n              : \"Nothing more to load\"}\n          </button>\n        </div>\n      </div>\n      <PublicFooter />\n    </>\n  );\n};\n\nexport default ViewMoreYoutube;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/Validation.js",["1048","1049","1050"],"import React from \"react\";\nimport Flag from \"react-world-flags\";\nimport { useParams, Link } from \"react-router-dom\";\nimport YoutubeValidation from \"./YoutubeValidation\";\nimport TwitterValidation from \"./TwitterValidation\";\nimport TweetsValid√©s from \"./TweetsValid√©s\";\nimport YoutubeValid√©s from \"./YoutubeValides\";\nimport ValidationArticles from \"./ValidationArticles\";\nimport ArticlesValides from \"./ArticlesValides\";\n\n\nconst Validation = (props) => {\n  const { codeCountry, multimedia } = useParams();\n\n  return (\n    <div>\n      <div className=\"container\">\n        <>\n          <h1>\n            <Flag\n              code={codeCountry}\n              height=\"70\"\n              width=\"70\"\n              style={{ marginRight: \"2px\" }}\n              className=\"flag\"\n            />{\" \"}\n            Validation\n          </h1>\n          <ul className=\"nav nav-tabs\">\n            <li className=\"nav-item\">\n              <Link\n                to={`/web-master/validation/youtube/${codeCountry}`}\n                className={`nav-link ${multimedia === \"youtube\" && \"active\"}`}\n              >\n                Youtube\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                to={`/web-master/validation/twitter/${codeCountry}`}\n                className={`nav-link ${multimedia === \"twitter\" && \"active\"}`}\n              >\n                Twitter\n              </Link>\n            </li>\n\n            <li className=\"nav-item\">\n              <Link\n                to={`/web-master/validation/articles/${codeCountry}`}\n                className={`nav-link ${multimedia === \"articles\" && \"active\"}`}\n              >\n                Articles\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                to={`/web-master/validation/TweetsAccepted/${codeCountry}`}\n                className={`nav-link ${multimedia === \"TweetsAccepted\" &&\n                  \"active\"}`}\n              >\n                Valid Tweets\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                to={`/web-master/validation/YoutubesAccepted/${codeCountry}`}\n                className={`nav-link ${multimedia === \"YoutubesAccepted\" &&\n                  \"active\"}`}\n              >\n                Valid Videos\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                to={`/web-master/validation/ArticlesAccepted/${codeCountry}`}\n                className={`nav-link ${multimedia === \"ArticlesAccepted\" &&\n                  \"active\"}`}\n              >\n               Valid Articles\n              </Link>\n            </li>\n          </ul>\n        </>\n\n        {multimedia === \"twitter\" && <TwitterValidation />}\n        {multimedia === \"youtube\" && <YoutubeValidation />}\n        {multimedia === \"articles\" && <ValidationArticles />}\n        {multimedia == \"TweetsAccepted\" && <TweetsValid√©s />}\n        {multimedia == \"YoutubesAccepted\" && <YoutubeValid√©s />}\n        {multimedia == \"ArticlesAccepted\" && <ArticlesValides />}\n      </div>\n    </div>\n  );\n};\n\nexport default Validation;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/EditProject.js",["1051","1052","1053","1054","1055"],"import { getProject2 } from \"apis/projectApi\";\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport Flag from \"react-world-flags\";\nimport AddProjectForm from \"../../components/aidchannel/webmaster/ProjectForm\";\nimport { acceptProject } from \"../../apis/projectApi\";\nimport ReactJson from \"react-json-view\";\nimport { Row, FormGroup, FormLabel, Col } from \"react-bootstrap\";\nconst EditProject = () => {\n  const [project, setProject] = useState();\n\n  const { codeCountry, idProject } = useParams();\n  const history = useHistory();\n\n  const getDataFromApi = useCallback(async () => {\n    const project = await getProject2(idProject);\n    setProject(project);\n  }, [idProject]);\n  const accept = async (projectId) => {\n    await acceptProject(projectId);\n    history.push(`/web-master/validationProjects/projectsNv/${codeCountry}`);\n  };\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n  return (\n    <div className=\"container\">\n      <h1>\n        <Flag\n          code={codeCountry}\n          height=\"70\"\n          width=\"70\"\n          style={{ marginRight: \"2px\" }}\n          className=\"flag\"\n        />{\" \"}\n        Edit Project\n      </h1>\n\n      <AddProjectForm />\n\n      {!project?.validation && (\n        <button\n          onClick={() => accept(project?._id)}\n          className=\"btn btn-success w-100 h-25 my-2 shadow-none\"\n        >\n          Accept Project\n        </button>\n      )}\n      {project && (\n        <div className=\"container my-5 box-shadow-card-info p-4\">\n          <FormLabel className=\"label__form\">Informations Related </FormLabel>{\" \"}\n          <ReactJson src={project?.raw_data_org} />{\" \"}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EditProject;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/AddInterview.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/EditInterview.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ViewMoreTweet.js",["1056","1057","1058","1059","1060"],"import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useInfiniteQuery } from \"react-query\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport InputSearch from \"../../components/aidchannel/general/InputSearch\";\nimport PublicHeader from \"../../components/layout/header/PublicHeader\";\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\n\nimport { gettweetsScrolling } from \"../../apis/twitterApi\";\nimport Post from \"../../components/aidchannel/tweets/Post\";\nimport useIntersectionObserver from \"../../helpers/useIntersectionObserver\";\nimport CountryHeader from \"components/layout/header/CountryHeader\";\n\nconst ViewMoreTweet = () => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [limit] = useState(9);\n  const loadMoreButtonRef = useRef();\n  const history = useHistory();\n  const { codeCountry } = useParams();\n\n  const [test, setTest] = useState(false);\n\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n  } = useInfiniteQuery(\n    [searchText, codeCountry, limit, test],\n    gettweetsScrolling,\n    {\n      getNextPageParam: (lastPage, pages) => {\n        if (lastPage.data.length === limit) return parseInt(lastPage.page) + 1;\n        return false;\n      },\n    }\n  );\n  useIntersectionObserver({\n    target: loadMoreButtonRef,\n    onIntersect: fetchNextPage,\n    enabled: hasNextPage,\n  });\n\n  return (\n    <>\n      <CountryHeader />\n      <div className=\"container\">\n        <h1 className=\"heading my-4\">\n          More\n          <span className=\"sub-heading\"> Tweets </span>\n        </h1>\n        <InputSearch\n          setSearchText={setSearchText}\n          searchText={searchText}\n          placeholder={`Search for Tweets`}\n        />\n\n        <div className=\"row\">\n          {data?.pages.map((group, i) => (\n            <React.Fragment key={i}>\n              {group.data.map((tweet, index) => (\n                <div\n                  key={index}\n                  className=\"col-12  p-2 col-lg-5 mx-auto mt-3 border\"\n                >\n                  <a\n                    style={{ textDecoration: \"none\" }}\n                    href={`https://twitter.com/${tweet?.twitter_username}/status/${tweet?.tweet_id}`}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    <Post\n                      displayName={tweet?.name}\n                      username={tweet?.twitter_username}\n                      verified={true}\n                      text={tweet?.body}\n                      avatar={tweet?.avatar_id}\n                      image={tweet?.photos?.length > 0 && tweet.photos[0]}\n                    />\n                  </a>\n                </div>\n              ))}\n            </React.Fragment>\n          ))}\n        </div>\n\n        <div style={{ marginTop: \"20px\" }}>\n          <button\n            ref={loadMoreButtonRef}\n            onClick={() => fetchNextPage()}\n            disabled={!hasNextPage || isFetchingNextPage}\n          >\n            {isFetchingNextPage\n              ? \"Loading more ....\"\n              : hasNextPage\n              ? \"Load More\"\n              : \"Nothing more to load\"}\n          </button>\n        </div>\n      </div>\n      <PublicFooter />\n    </>\n  );\n};\n\nexport default ViewMoreTweet;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/DetailsInterview.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/AddExpertArticle.js",["1061","1062","1063"],"import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Flag from \"react-world-flags\";\nimport { getCountryByCode } from \"apis/countryApi\";\n\nimport { Checkbox } from \"@material-ui/core\";\nimport {\n  addExpertArticle,\n  getOneExpertArticle,\n  updateExpertArticle,\n} from \"apis/ExpertArticleApi\";\nimport ProjectOfTheMontInterview from \"components/aidchannel/webmaster/ProjectOfTheMontInterview\";\nimport {\n  disabledExpertOfMonth,\n  enableExpertOfMonth,\n  getExpert,\n} from \"apis/userApi\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\n\nconst AddExpertArticle = () => {\n  const { codeCountry, idExpert } = useParams();\n\n  const editor = useRef(null);\n  const [articleContent, setArticleContent] = useState(\"\");\n  const [articleEditLoading, setArticleEditLoading] = useState(false);\n  const history = useHistory();\n  const [article, setArticle] = useState();\n  const [articleAddLoading, setArticleAddLoading] = useState(false);\n  const [test, setTest] = useState(false);\n  const [expertLogo, setExpetLogo] = useState();\n  const [expertLogoPreview, setExpetLogoPreview] = useState(null);\n\n  const [checked, setChecked] = useState(false);\n\n  const articleConfig = {\n    readonly: false,\n    placeholder: \"Expert's Article\",\n  };\n\n  const getDataFromApi = useCallback(async () => {\n    const article = await getOneExpertArticle(idExpert);\n    console.log(article);\n    if (article) {\n      setArticle(article);\n      setArticleContent(article?.article);\n      setExpetLogoPreview(urlImageAdapter(article?.articleImage));\n    }\n    const expert = await getExpert(idExpert);\n\n    if (expert) {\n      setChecked(expert?.expert_of_month);\n    }\n\n    if (article !== null) setArticleContent(article?.article);\n  }, [idExpert]);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi, test]);\n\n  const addArticle = async () => {\n    let formData = new FormData();\n    formData.append(\"article\", articleContent);\n    formData.append(\"expert\", idExpert);\n    formData.append(\"articleImage\", expertLogo);\n\n    setArticleAddLoading(true);\n    await addExpertArticle(formData);\n    setTest(!test);\n    setArticleAddLoading(false);\n  };\n\n  const editArticle = async () => {\n    let formData = new FormData();\n    formData.append(\"article\", articleContent);\n    if (expertLogo != undefined) formData.append(\"articleImage\", expertLogo);\n\n    setArticleEditLoading(true);\n    await updateExpertArticle(article?._id, formData);\n    setArticleEditLoading(false);\n  };\n\n  const handleChangeCheckbox = async () => {\n    setChecked(!checked);\n    if (checked === true) {\n      await disabledExpertOfMonth(idExpert);\n    } else {\n      await enableExpertOfMonth(idExpert);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      {codeCountry && (\n        <>\n          <h1>\n            <Flag\n              code={codeCountry}\n              height=\"70\"\n              width=\"70\"\n              style={{ marginRight: \"2px\" }}\n              className=\"flag\"\n            />{\" \"}\n            Add Expert's Article\n          </h1>{\" \"}\n          <hr />\n          <div className=\"form-check\">\n            <Checkbox\n              checked={checked}\n              onChange={handleChangeCheckbox}\n              inputProps={{ \"aria-label\": \"primary checkbox\" }}\n              style={{ color: \"blue\" }}\n            />\n\n            <label className=\"form-check-label\" for=\"defaultCheck1\">\n              Expert of the month\n            </label>\n          </div>\n          <div\n            className=\"my-5 p-3\"\n            style={{\n              border: \"1px solid #e6e6fa\",\n              boxShadow: \"rgba(100, 100, 111, 0.2) 0px 7px 29px 0px\",\n            }}\n          >\n            <ProjectOfTheMontInterview\n              imageLabel=\"Expert Interview Image\"\n              editorValue={articleContent}\n              editorRef={editor}\n              editorConfig={articleConfig}\n              setContent={setArticleContent}\n              projectInterview={article}\n              addLoading={articleAddLoading}\n              loading={articleEditLoading}\n              addLabel=\"Add article\"\n              editLabel=\"Edit article\"\n              editFunction={editArticle}\n              addFunction={addArticle}\n              logoPreview={expertLogoPreview}\n              logo={expertLogo}\n              setLogoPreview={setExpetLogoPreview}\n              setLogo={setExpetLogo}\n              inputId=\"copInterview\"\n            />\n          </div>\n          {/* </div> */}\n          <hr />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default AddExpertArticle;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/TwiterSearch.js",["1064"],"import React, { useState, useRef, useEffect } from \"react\";\nimport { useInfiniteQuery } from \"react-query\";\nimport { useParams } from \"react-router\";\nimport useIntersectionObserver from \"../../helpers/useIntersectionObserver\";\n\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\nimport YoutubeVideo from \"../../components/aidchannel/youtubeVideos/YoutubeVideo\";\nimport CountryHeader from \"../../components/layout/header/CountryHeader\";\nimport Post from \"../../components/aidchannel/tweets/Post\";\nimport { getTweetsByName } from \"apis/twitterApi\";\n\nconst TwiterSearch = () => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [limit] = useState(9);\n\n  const { codeCountry, search_text } = useParams();\n\n  const loadMoreButtonRef = useRef();\n\n  useEffect(() => {\n    setSearchText(search_text);\n  }, [search_text]);\n\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n  } = useInfiniteQuery(\n    [searchText, limit, codeCountry],\n    getTweetsByName,\n    {\n      getNextPageParam: (lastPage, pages) => {\n        if (lastPage.data.length === limit) return parseInt(lastPage.page) + 1;\n        return false;\n      },\n    }\n  );\n\n  useIntersectionObserver({\n    target: loadMoreButtonRef,\n    onIntersect: fetchNextPage,\n    enabled: hasNextPage,\n  });\n\n  return (\n    <>\n      <CountryHeader />\n      <div className=\"container\">\n        <h1 className=\"heading my-4\">\n         Tweets with the name\n          <span className=\"sub-heading\"> {searchText} </span>\n        </h1>\n\n        <div className=\"row\">\n          {data?.pages.map((group, i) => (\n            <React.Fragment key={i}>\n              {group.data.map((tweet, index) => (\n                <div\n                  key={index}\n                  className=\"col-12  p-2 col-lg-5 mx-auto mt-3 border\"\n                >\n                  <a\n                    style={{ textDecoration: \"none\" }}\n                    href={`https://twitter.com/${tweet?.twitter_username}/status/${tweet?.tweet_id}`}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    <Post\n                      displayName={tweet?.name}\n                      username={tweet?.twitter_username}\n                      verified={true}\n                      text={tweet?.body}\n                      avatar={tweet?.avatar_id}\n                      image={tweet?.photos?.length > 0 && tweet.photos[0]}\n                    />\n                  </a>\n                </div>\n              ))}\n            </React.Fragment>\n          ))}\n        </div>\n        <div style={{ marginTop: \"20px\" }}>\n          <button\n            ref={loadMoreButtonRef}\n            onClick={() => fetchNextPage()}\n            disabled={!hasNextPage || isFetchingNextPage}\n          >\n            {isFetchingNextPage\n              ? \"Loading more ....\"\n              : hasNextPage\n              ? \"Load More\"\n              : \"Nothing more to load\"}\n          </button>\n        </div>\n      </div>\n      <PublicFooter />\n    </>\n  );\n};\n\nexport default TwiterSearch;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/TechnicalDetails.js",["1065","1066","1067"],"import React from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Flag from \"react-world-flags\";\nimport AddTechnicalDetails from \"components/aidchannel/webmaster/AddTechnicalDetails\";\nimport TechnicalDetailsCanvas from \"components/aidchannel/webmaster/TechnicalDetailsCanvas\";\nimport ListProjects from \"./ListProjects\";\nimport ListProjectsValides from \"./ListProjectsValides\";\nimport MoreDetailsProject from \"./MoreDetailsProject\";\nconst TechnicalDetails = () => {\n  const { codeCountry, idProject, multimedia } = useParams();\n  return (\n    <div className=\"container\">\n      <>\n        <h1>\n          <Flag\n            code={codeCountry}\n            height=\"70\"\n            width=\"70\"\n            style={{ marginRight: \"2px\" }}\n            className=\"flag\"\n          />\n          Technical Details\n        </h1>\n        {/* <hr /> */}\n\n        <ul className=\"nav nav-tabs\">\n          <li className=\"nav-item\">\n            <Link\n              to={`/web-master/technicaldetails/${codeCountry}/${idProject}/graph`}\n              className={`nav-link ${multimedia === \"graph\" && \"active\"}`}\n            >\n              Graph\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              to={`/web-master/technicaldetails/${codeCountry}/${idProject}/details`}\n              className={`nav-link ${multimedia === \"details\" && \"active\"}`}\n            >\n              More details\n            </Link>\n          </li>\n        </ul>\n\n        {multimedia === \"graph\" && <TechnicalDetailsCanvas />}\n        {multimedia === \"details\" && <MoreDetailsProject />}\n\n        {/*<AddTechnicalDetails />*/}\n        {/* <TechnicalDetailsCanvas /> */}\n      </>\n    </div>\n  );\n};\n\nexport default TechnicalDetails;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/ListExperts.js",["1068","1069","1070","1071","1072","1073","1074"],"import {\n  enableExpertOfMonth,\n  disabledExpertOfMonth,\n  getExpert,\n} from \"apis/userApi\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Flag from \"react-world-flags\";\nimport { getCountryByCode } from \"../../apis/countryApi\";\nimport { deleteExpert, getAllExpertsByCountry } from \"apis/userApi\";\nimport MtableExpert from \"../../components/aidchannel/webmaster/MtableExpert\";\nimport TableExpert from \"components/aidchannel/webmaster/TableExpert\";\n\nconst ListExperts = () => {\n  const history = useHistory();\n  const { codeCountry, idExpert } = useParams();\n  const [country, setCountry] = useState();\n  const [experts, setExperts] = useState([]);\n\n  const getDataFromApi = useCallback(async () => {\n    const country = await getCountryByCode(codeCountry);\n    setCountry(country);\n    const expert = await getAllExpertsByCountry();\n    setExperts(expert?.reverse());\n  }, []);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const deleteExp = async (expert) => {\n    if (window.confirm(`Are you sure you wish to delete ${expert.name} ?`)) {\n      try {\n        await deleteExpert(expert._id);\n        const newExpertsList = experts.filter(function(item) {\n          if (item[\"_id\"] === expert?._id) return false;\n          return true;\n        });\n        setExperts(newExpertsList);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      {country && (\n        <>\n          <h1>\n            <Flag\n              code={codeCountry}\n              height=\"70\"\n              width=\"70\"\n              style={{ marginRight: \"2px\" }}\n              className=\"flag\"\n            />{\" \"}\n            Experts\n          </h1>\n          <hr />\n          <button\n            onClick={() =>\n              // history.push(`/web-master/add-webmaster/${codeCountry}`)\n              history.push(`/web-master/add-Expert/${codeCountry}`)\n            }\n            className=\"btn btn-primary ml-3 mt-2 mb-3 shadow-none border-none\"\n          >\n            Add\n          </button>\n          <TableExpert />\n          {/* <MtableExpert deleteRow={deleteExp} />*/}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ListExperts;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/ProjectOfMonth.js",["1075","1076","1077","1078","1079","1080"],"import {\n  disabledPojectOfMonth,\n  enablePojectOfMonth,\n  getProject2,\n  updateProject,\n} from \"apis/projectApi\";\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Flag from \"react-world-flags\";\nimport JoditEditor from \"jodit-react\";\nimport { getOneInterviewTypesByName } from \"apis/interviewTypeApi\";\nimport {\n  addInterview,\n  getInterviewByProjectAndType,\n  updateInterview,\n} from \"apis/interviewApi\";\nimport { getCountryByCode } from \"apis/countryApi\";\nimport ProjectOfTheMontInterview from \"components/aidchannel/webmaster/ProjectOfTheMontInterview\";\nimport fakeLogo from \"../../assets/images/fakeLogo.png\";\nimport { Checkbox } from \"@material-ui/core\";\nimport { AiFillFileAdd } from \"react-icons/ai\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\n\nconst ProjectOfMonth = () => {\n  const { codeCountry, idProject } = useParams();\n  const [checked, setChecked] = useState();\n\n  const editor = useRef(null);\n  const [copContent, setCopContent] = useState(\"\");\n  const [donorContent, setDonorContent] = useState(\"\");\n  const [beneficiaryContent, setBeneficiaryContent] = useState(\"\");\n  const [projectContent, setProjectContent] = useState(\"\");\n  const [copType, setCopType] = useState(null);\n  const [donorType, setDonorType] = useState();\n  const [beneficiaryType, setBeneficiaryType] = useState();\n  const [projectInterviewCop, setProjectInterviewCop] = useState();\n  const [projectInterviewDonor, setProjectInterviewDonor] = useState();\n  const [\n    projectInterviewBeneficiary,\n    setProjectInterviewBeneficiary,\n  ] = useState();\n  const [test, setTest] = useState(false);\n  const [copLoading, setCopLoading] = useState(false);\n  const [donorLoading, setdonorLoading] = useState(false);\n  const [beneficiaryLoading, setBeneficiaryLoading] = useState(false);\n  const [copAddLoading, setCopAddLoading] = useState(false);\n  const [donorAddLoading, setdonorAddLoading] = useState(false);\n  const [beneficiaryAddLoading, setBeneficiaryAddLoading] = useState(false);\n  const [projectEditLoading, setProjectEditLoading] = useState(false);\n\n  // logos state\n  const [copLogoPreview, setCopLogoPreview] = useState(null);\n  const [copLogo, setCopLogo] = useState();\n  const [donorLogoPreview, setDonorLogoPreview] = useState(null);\n  const [donorLogo, setDonorLogo] = useState();\n  const [beneficiaryLogoPreview, setBeneficiaryLogoPreview] = useState(null);\n  const [beneficiaryLogo, setBeneficiaryLogo] = useState();\n  const [country, setCountry] = useState();\n  const [projectLogoPreview, setProjectLogoPreview] = useState(null);\n  const [projectLogo, setProjectLogo] = useState();\n\n  const copConfig = {\n    readonly: false,\n    placeholder: \"COP Interview\",\n  };\n  const donorConfig = {\n    readonly: false,\n    placeholder: \"DONOR Interview\",\n  };\n  const beneficiaryConfig = {\n    readonly: false,\n    placeholder: \"Beneficiary Interview\",\n  };\n  const projectConfig = {\n    readonly: false,\n    placeholder: \"Project of the month description\",\n  };\n\n  const getDataFromApi = useCallback(async () => {\n    const country = await getCountryByCode(codeCountry);\n    setCountry(country);\n    const project = await getProject2(idProject);\n    setProjectLogoPreview(urlImageAdapter(project?.image_url));\n    setChecked(project?.project_of_month);\n    setProjectContent(project?.description);\n    const cop = await getOneInterviewTypesByName(\"COP\");\n    setCopType(cop);\n\n    const donor = await getOneInterviewTypesByName(\"DONOR\");\n    setDonorType(donor);\n    const beneficiary = await getOneInterviewTypesByName(\"BENEFICIARY\");\n    setBeneficiaryType(beneficiary);\n    const copInterview = await getInterviewByProjectAndType(\n      project?._id,\n      cop._id\n    );\n    setProjectInterviewCop(copInterview);\n    if (copInterview)\n      setCopLogoPreview(\n        `${process.env.REACT_APP_BACKEND}${copInterview?.interviewImage}`\n      );\n\n    const donorInterview = await getInterviewByProjectAndType(\n      project?._id,\n      donor._id\n    );\n    setProjectInterviewDonor(donorInterview);\n    if (donorInterview)\n      setDonorLogoPreview(\n        `${process.env.REACT_APP_BACKEND}${donorInterview?.interviewImage}`\n      );\n\n    const beneficiaryInterview = await getInterviewByProjectAndType(\n      project?._id,\n      beneficiary._id\n    );\n    setProjectInterviewBeneficiary(beneficiaryInterview);\n    if (beneficiaryInterview)\n      setBeneficiaryLogoPreview(\n        `${process.env.REACT_APP_BACKEND}${beneficiaryInterview?.interviewImage}`\n      );\n\n    if (copInterview !== null) setCopContent(copInterview?.interview);\n    if (donorInterview !== null) setDonorContent(donorInterview?.interview);\n    if (beneficiaryInterview !== null)\n      setBeneficiaryContent(beneficiaryInterview?.interview);\n    //alert(JSON.stringify(copInterview));\n  }, [idProject]);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi, test]);\n\n  const handleChangeCheckbox = async () => {\n    setChecked(!checked);\n    if (checked === true) {\n      await disabledPojectOfMonth(idProject);\n    } else {\n      await enablePojectOfMonth(idProject, codeCountry);\n    }\n  };\n\n  const addCop = async () => {\n    // initialiser les donnees\n\n    let formData = new FormData();\n    formData.append(\"interview\", copContent);\n    formData.append(\"type_interview\", copType?._id);\n    formData.append(\"project\", idProject);\n    formData.append(\"interviewImage\", copLogo);\n    formData.append(\"country\", country._id);\n    setCopAddLoading(true);\n    await addInterview(formData);\n    setTest(!test);\n    setCopAddLoading(false);\n  };\n\n  const addDonor = async () => {\n    // initialiser les donnees\n    const country = await getCountryByCode(codeCountry);\n    let formData = new FormData();\n    formData.append(\"interview\", donorContent);\n    formData.append(\"type_interview\", donorType?._id);\n    formData.append(\"project\", idProject);\n    formData.append(\"interviewImage\", donorLogo);\n    formData.append(\"country\", country._id);\n    setdonorAddLoading(true);\n    await addInterview(formData);\n    setTest(!test);\n    setdonorAddLoading(false);\n  };\n\n  const addBeneficiary = async () => {\n    // initialiser les donnees\n    const country = await getCountryByCode(codeCountry);\n    let formData = new FormData();\n    formData.append(\"interview\", beneficiaryContent);\n    formData.append(\"type_interview\", beneficiaryType?._id);\n    formData.append(\"project\", idProject);\n    formData.append(\"interviewImage\", beneficiaryLogo);\n    formData.append(\"country\", country._id);\n    setBeneficiaryAddLoading(true);\n    await addInterview(formData);\n    setTest(!test);\n    setBeneficiaryAddLoading(false);\n  };\n\n  const EditCop = async () => {\n    let formData = new FormData();\n    formData.append(\"interview\", copContent);\n    if (copLogo != undefined) formData.append(\"interviewImage\", copLogo);\n    setCopLoading(true);\n    await updateInterview(projectInterviewCop._id, formData);\n    setTest(!test);\n    setCopLoading(false);\n  };\n\n  const editDonor = async () => {\n    let formData = new FormData();\n    formData.append(\"interview\", donorContent);\n    if (donorLogo != undefined) formData.append(\"interviewImage\", donorLogo);\n    setdonorLoading(true);\n    await updateInterview(projectInterviewDonor._id, formData);\n    setTest(!test);\n    setdonorLoading(false);\n  };\n\n  const editBeneficiary = async () => {\n    let formData = new FormData();\n    formData.append(\"interview\", beneficiaryContent);\n    if (beneficiaryLogo != undefined)\n      formData.append(\"interviewImage\", beneficiaryLogo);\n    setBeneficiaryLoading(true);\n    await updateInterview(projectInterviewBeneficiary._id, formData);\n    setTest(!test);\n    setBeneficiaryLoading(false);\n  };\n\n  const editProject = async () => {\n    let formData = new FormData();\n    formData.append(\"description\", projectContent);\n    if (projectLogo != undefined) formData.append(\"projectImage\", projectLogo);\n    setProjectEditLoading(true);\n    await updateProject(idProject, formData);\n    setProjectEditLoading(false);\n  };\n  const imagePreview = (e) => {\n    setProjectLogoPreview(URL.createObjectURL(e.target.files[0]));\n    setProjectLogo(e.target.files[0]);\n  };\n  return (\n    <div className=\"container my-4\">\n      {codeCountry &&\n        projectInterviewCop !== undefined &&\n        projectInterviewDonor !== undefined &&\n        projectInterviewBeneficiary !== undefined && (\n          <>\n            <h1>\n              <Flag\n                code={codeCountry}\n                height=\"70\"\n                width=\"70\"\n                style={{ marginRight: \"2px\" }}\n                className=\"flag\"\n              />{\" \"}\n              Project Of The Month\n            </h1>\n            <hr />\n            <div className=\"form-check\">\n              <Checkbox\n                checked={checked}\n                onChange={handleChangeCheckbox}\n                inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                style={{ color: \"blue\" }}\n              />\n\n              <label className=\"form-check-label\" for=\"defaultCheck1\">\n                Project of the month\n              </label>\n            </div>\n            <div\n              className=\"my-5 p-3\"\n              style={{\n                border: \"1px solid #e6e6fa\",\n                boxShadow: \"rgba(100, 100, 111, 0.2) 0px 7px 29px 0px\",\n              }}\n            >\n              <div className=\"form-group m-auto\">\n                <label\n                  className=\"ml-4 logo-file d-inline\"\n                  htmlFor=\"projectLogo\"\n                >\n                  {projectLogoPreview && (\n                    <img\n                      src={projectLogoPreview}\n                      alt=\"avatar\"\n                      style={{ cursor: \"pointer\" }}\n                      width=\"15%\"\n                      height=\"15%\"\n                      className=\"avatar\"\n                    />\n                  )}\n                  {!projectLogoPreview && (\n                    <span style={{ cursor: \"pointer\" }}>\n                      Project of Month Image{\" \"}\n                      <AiFillFileAdd color=\"blue\" size={40} />\n                    </span>\n                  )}\n                </label>\n                <input\n                  type=\"file\"\n                  className=\"form-control-file ml-4 shadow-none logo-file d-none\"\n                  id=\"projectLogo\"\n                  name=\"projectLogo\"\n                  onChange={imagePreview}\n                  multiple={false}\n                />\n              </div>\n              <div className=\"mt-4\">\n                <JoditEditor\n                  ref={editor}\n                  value={projectContent}\n                  config={projectConfig}\n                  tabIndex={1}\n                  onBlur={(newContent) => setProjectContent(newContent)}\n                />\n                {!projectEditLoading ? (\n                  <button\n                    onClick={() => editProject()}\n                    className=\"btn btn-warning  mt-3  shadow-none\"\n                  >\n                    Edit\n                  </button>\n                ) : (\n                  <div className=\"spinner-border text-danger m-3\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                  </div>\n                )}\n              </div>\n            </div>\n            <div\n              className=\"my-5 p-3\"\n              style={{\n                border: \"1px solid #e6e6fa\",\n                boxShadow: \"rgba(100, 100, 111, 0.2) 0px 7px 29px 0px\",\n              }}\n            >\n              <ProjectOfTheMontInterview\n                imageLabel=\"COP Interview Image\"\n                editorValue={copContent}\n                editorRef={editor}\n                editorConfig={copConfig}\n                setContent={setCopContent}\n                projectInterview={projectInterviewCop}\n                addLoading={copAddLoading}\n                loading={copLoading}\n                addLabel=\"Add cop interview\"\n                editLabel=\"Edit cop interview\"\n                editFunction={EditCop}\n                addFunction={addCop}\n                logoPreview={copLogoPreview}\n                logo={copLogo}\n                setLogoPreview={setCopLogoPreview}\n                setLogo={setCopLogo}\n                inputId=\"copInterview\"\n              />\n            </div>\n            <div\n              className=\"my-5 p-3\"\n              style={{\n                border: \"1px solid #e6e6fa\",\n                boxShadow: \"rgba(100, 100, 111, 0.2) 0px 7px 29px 0px\",\n              }}\n            >\n              <ProjectOfTheMontInterview\n                imageLabel=\"DONOR Interview Image\"\n                editorValue={donorContent}\n                editorRef={editor}\n                editorConfig={donorConfig}\n                setContent={setDonorContent}\n                projectInterview={projectInterviewDonor}\n                addLoading={donorAddLoading}\n                loading={donorLoading}\n                addLabel=\"Add donor interview\"\n                editLabel=\"Edit donor interview\"\n                editFunction={editDonor}\n                addFunction={addDonor}\n                logoPreview={donorLogoPreview}\n                logo={donorLogo}\n                setLogoPreview={setDonorLogoPreview}\n                setLogo={setDonorLogo}\n                inputId=\"donorInterview\"\n              />\n            </div>{\" \"}\n            <div\n              className=\"my-5 p-3\"\n              style={{\n                border: \"1px solid #e6e6fa\",\n                boxShadow: \"rgba(100, 100, 111, 0.2) 0px 7px 29px 0px\",\n              }}\n            >\n              <ProjectOfTheMontInterview\n                imageLabel=\"Beneficiary Interview Image\"\n                editorValue={beneficiaryContent}\n                editorRef={editor}\n                editorConfig={beneficiaryConfig}\n                setContent={setBeneficiaryContent}\n                projectInterview={projectInterviewBeneficiary}\n                addLoading={beneficiaryAddLoading}\n                loading={beneficiaryLoading}\n                addLabel=\"Add beneficiary interview\"\n                editLabel=\"Edit beneficiary interview\"\n                editFunction={editBeneficiary}\n                addFunction={addBeneficiary}\n                logoPreview={beneficiaryLogoPreview}\n                logo={beneficiaryLogo}\n                setLogoPreview={setBeneficiaryLogoPreview}\n                setLogo={setBeneficiaryLogo}\n                inputId=\"beneficiaryInterview\"\n              />\n            </div>\n          </>\n        )}\n    </div>\n  );\n};\n\nexport default ProjectOfMonth;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/YoutubeSearch.js",["1081"],"import React, { useState, useRef, useEffect } from \"react\";\nimport { useInfiniteQuery } from \"react-query\";\nimport { useParams } from \"react-router\";\nimport useIntersectionObserver from \"../../helpers/useIntersectionObserver\";\nimport InputSearch from \"../../components/aidchannel/general/InputSearch\";\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\nimport YoutubeVideo from \"../../components/aidchannel/youtubeVideos/YoutubeVideo\";\nimport CountryHeader from \"../../components/layout/header/CountryHeader\";\nimport { getVideosbyChannelName } from \"apis/youtubeApi\";\n\nconst YoutubeSearch = () => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [limit] = useState(9);\n\n  const { codeCountry, search_text } = useParams();\n\n  const loadMoreButtonRef = useRef();\n\n  useEffect(() => {\n    setSearchText(search_text);\n  }, [search_text]);\n\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n  } = useInfiniteQuery(\n    [searchText, limit, codeCountry],\n    getVideosbyChannelName,\n    {\n      getNextPageParam: (lastPage, pages) => {\n        if (lastPage.data.length === limit) return parseInt(lastPage.page) + 1;\n        return false;\n      },\n    }\n  );\n\n  useIntersectionObserver({\n    target: loadMoreButtonRef,\n    onIntersect: fetchNextPage,\n    enabled: hasNextPage,\n  });\n\n  return (\n    <>\n      <CountryHeader />\n      <div className=\"container\">\n        <h1 className=\"heading my-4\">\n          Videos of \n          <span className=\"sub-heading\"> {searchText} </span>\n        </h1>\n\n        <div className=\"row\">\n          {data?.pages.map((group, i) => (\n            <React.Fragment key={i}>\n              {group.data.map((video, index) => (\n                <div key={index} className=\"mt-0 border p-3 m-2\">\n                  <YoutubeVideo url={video?.video_url} />\n                </div>\n              ))}\n            </React.Fragment>\n          ))}\n        </div>\n        <div style={{ marginTop: \"20px\" }}>\n          <button\n            ref={loadMoreButtonRef}\n            onClick={() => fetchNextPage()}\n            disabled={!hasNextPage || isFetchingNextPage}\n          >\n            {isFetchingNextPage\n              ? \"Loading more ....\"\n              : hasNextPage\n              ? \"Load More\"\n              : \"Nothing more to load\"}\n          </button>\n        </div>\n      </div>\n      <PublicFooter />\n    </>\n  );\n};\n\nexport default YoutubeSearch;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/AddExpert.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/superadmin/AddWebmaster.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/superadmin/Dashboard.js",["1082","1083","1084","1085","1086","1087"],"import { getNumberArticlesByCountry } from \"apis/articleApi\";\nimport { getNumberTweetsByCountry } from \"apis/twitterApi\";\nimport { getNumberVideosByCountry } from \"apis/youtubeApi\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Flag from \"react-world-flags\";\nimport { getNumberOrganizationsByCountry } from \"../../apis/organizationApi\";\nimport {\n  getNumberProjects,\n  getNumberProjectsByCountry,\n  getNumberProjectsByCountryNULL,\n} from \"../../apis/projectApi\";\nimport CounterDatavisualization from \"../../components/aidchannel/general/CounterDatavisualization\";\n\nimport Select from \"react-select\";\nimport { getDisabledCountries, getEnabledCountries } from \"apis/countryApi\";\n\nconst Dashboard = () => {\n  const [numberProjects, setNumberProjects] = useState();\n  const [numberallprojects, setnumberallprojects] = useState();\n  const [numberProjectsNull, setNumberProjectsNull] = useState();\n  const [numberOrganizations, setNumberOrganizations] = useState();\n  const [numberVideos, setNumberVideos] = useState();\n  const [numberTweets, setNumberTweets] = useState();\n  const [numberArticles, setnumberArticles] = useState();\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [optionsCountries, setOptionsCountries] = useState();\n  const [display, setDisplay] = useState(true);\n\n  const getDataFromApi = useCallback(async () => {\n    //  const numberallprojects = getNumberProjects();\n    //  setnumberallprojects(numberallprojects);\n    setDisplay(false);\n    const numberProj = await getNumberProjectsByCountry(selectedCountry?.value);\n    setNumberProjects(numberProj);\n    const numberProjNull = await getNumberProjectsByCountryNULL(\n      selectedCountry?.value\n    );\n    setNumberProjectsNull(numberProjNull);\n    const numberOrg = await getNumberOrganizationsByCountry(\n      selectedCountry?.value\n    );\n    setNumberOrganizations(numberOrg);\n   \n    const numberVideos = await getNumberVideosByCountry(selectedCountry?.value);\n    setNumberVideos(numberVideos);\n    const numberTweets = await getNumberTweetsByCountry(selectedCountry?.value);\n    setNumberTweets(numberTweets);\n    const numberArticles = await getNumberArticlesByCountry(\n      selectedCountry?.value\n    );\n    setnumberArticles(numberArticles);\n    \n    const enableCountries = await getEnabledCountries();\n    setOptionsCountries(\n      enableCountries\n        ?.map((country) => {\n          return {\n            value: country.code,\n            label: country.name,\n          };\n        })\n        .sort((country1, country2) =>\n          country1?.label?.localeCompare(country2?.label)\n        )\n    );\n    setDisplay(true);\n  }, [selectedCountry]);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi, selectedCountry]);\n\n  const handleChangeCountry = (selected) => {\n    setSelectedCountry(selected);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1> SuperAdmin's Dashboard</h1>\n\n      <hr />\n      \n      \n      \n      \n      \n      {/* <div className=\"row mt-5\">\n        <div className=\"col-12 col-sm-6 col-md-4 mt-3\">\n          <CounterDatavisualization\n            value={\"0\" + numberallprojects}\n            //route={`/web-master/projects/${codeCountry}`}\n            title=\"Projects\"\n            bgColor=\"#0069d9\"\n            textColor=\"white\"\n            duration=\"1\"\n          />\n        </div>\n        \n        <div className=\"col-12 col-sm-6 col-md-4 mt-3\">\n          <CounterDatavisualization\n            value={\"0\" + numberOrganizations}\n            // route={`/web-master/organizations/${codeCountry}`}\n            title=\"Sub organizations\"\n            bgColor=\"#0069d9\"\n            textColor=\"white\"\n            duration=\"1\"\n          />\n        </div>\n        <div className=\"col-12 col-sm-6 col-md-4 mt-3\">\n          <CounterDatavisualization\n            value={\"0\" + numberVideos}\n            //   route={`/web-master/validation/youtube/${codeCountry}`}\n            title=\"Youtube videos\"\n            bgColor=\"#0069d9\"\n            textColor=\"white\"\n            duration=\"1\"\n          />\n        </div>\n        <div className=\"col-12 col-sm-6 col-md-4 mt-3\">\n          <CounterDatavisualization\n            value={\"0\" + numberTweets}\n            // route={`/web-master/validation/twitter/${codeCountry}`}\n            title=\"Tweets\"\n            bgColor=\"#0069d9\"\n            textColor=\"white\"\n            duration=\"1\"\n          />\n        </div>\n        <div className=\"col-12 col-sm-6 col-md-4 mt-3\">\n          <CounterDatavisualization\n            value={\"0\" + numberArticles}\n            // route={`/web-master/validation/articles/${codeCountry}`}\n            title=\"Articles\"\n            bgColor=\"#0069d9\"\n            textColor=\"white\"\n            duration=\"1\"\n          />\n        </div>\n        <div className=\"col-12 col-sm-6 col-md-4 mt-3\">\n          <CounterDatavisualization\n            value={\"0\" + numberProjectsNull}\n            // route={`/web-master/projects/${codeCountry}`}\n            title=\"Projects Country NULL\"\n            bgColor=\"#0069d9\"\n            textColor=\"white\"\n            duration=\"1\"\n          />\n        </div>\n      </div> */}\n\n      <div className=\"row\">\n        <div className=\"col-12 col-md-4\">\n          <Select\n            placeholder=\"Choose Country\"\n            value={selectedCountry}\n            onChange={handleChangeCountry}\n            options={optionsCountries}\n          />\n        </div>\n      </div>\n      {display && selectedCountry && (\n        <div className=\"row mt-5\">\n          <div className=\"col-12 col-sm-6 col-md-4 mt-3\">\n            <CounterDatavisualization\n              value={\"0\" + numberProjects}\n              //route={`/web-master/projects/${codeCountry}`}\n              title=\"Projects\"\n              bgColor=\"#0069d9\"\n              textColor=\"white\"\n              duration=\"1\"\n            />\n          </div>\n          <div className=\"col-12 col-sm-6 col-md-4 mt-3\">\n            <CounterDatavisualization\n              value={\"0\" + numberOrganizations}\n              // route={`/web-master/organizations/${codeCountry}`}\n              title=\"Sub organizations\"\n              bgColor=\"#0069d9\"\n              textColor=\"white\"\n              duration=\"1\"\n            />\n          </div>\n          <div className=\"col-12 col-sm-6 col-md-4 mt-3\">\n            <CounterDatavisualization\n              value={\"0\" + numberVideos}\n              //   route={`/web-master/validation/youtube/${codeCountry}`}\n              title=\"Youtube videos\"\n              bgColor=\"#0069d9\"\n              textColor=\"white\"\n              duration=\"1\"\n            />\n          </div>\n          <div className=\"col-12 col-sm-6 col-md-4 mt-3\">\n            <CounterDatavisualization\n              value={\"0\" + numberTweets}\n              // route={`/web-master/validation/twitter/${codeCountry}`}\n              title=\"Tweets\"\n              bgColor=\"#0069d9\"\n              textColor=\"white\"\n              duration=\"1\"\n            />\n          </div>\n          <div className=\"col-12 col-sm-6 col-md-4 mt-3\">\n            <CounterDatavisualization\n              value={\"0\" + numberArticles}\n              // route={`/web-master/validation/articles/${codeCountry}`}\n              title=\"Articles\"\n              bgColor=\"#0069d9\"\n              textColor=\"white\"\n              duration=\"1\"\n            />\n          </div>\n          <div className=\"col-12 col-sm-6 col-md-4 mt-3\">\n            <CounterDatavisualization\n              value={\"0\" + numberProjectsNull}\n              // route={`/web-master/projects/${codeCountry}`}\n              title=\"Projects Country NULL\"\n              bgColor=\"#0069d9\"\n              textColor=\"white\"\n              duration=\"1\"\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/superadmin/ListProjectsGlobal.js",["1088","1089","1090"],"import Flag from \"react-world-flags\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport {\n  getAllProjectsByCountryNull,\n  deleteProject,\n} from \"../../apis/projectApi\";\nimport MTableProject from \"components/aidchannel/superadmin/MtableProject\";\n\nconst ListProjectsGlobal = () => {\n  const { codeCountry } = useParams();\n  const history = useHistory();\n  const [projects, setprojects] = useState([]);\n  const getDataFromApi = useCallback(async () => {\n    const project = await getAllProjectsByCountryNull(codeCountry);\n    setprojects(project?.reverse());\n  }, [codeCountry]);\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n  const deletePjt = async (project) => {\n    if (window.confirm(`Are you sure you wish to delete ${project.name} ?`)) {\n      try {\n        await deleteProject(project._id);\n        const newProjectList = projects.filter(function(item) {\n          if (item[\"_id\"] === project?._id) return false;\n          return true;\n        });\n        setprojects(newProjectList);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <>\n        <h1>Projects </h1>\n        <hr />\n\n        <MTableProject />\n      </>\n    </div>\n  );\n};\n\nexport default ListProjectsGlobal;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/superadmin/ListWebMasters.js",["1091","1092","1093","1094","1095"],"import { getAllwebmasters } from \"apis/userApi\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport TableWebmaster from \"../../components/aidchannel/superadmin/TableWebmaster\";\n\n\nconst ListWebMasters = () => {\n  const [webmaster, setWebmaster] = useState([]);\n\n  const history = useHistory();\n  // const [codeCountry, setCountry] = useState();\n  // const country = await getCountryByCode(codeCountry);\n\n\n  return (\n    <div className=\"container\">\n      <>\n        <h1>WebMasters</h1>\n        <hr />\n        <button\n          onClick={() => history.push(`/super-admin/add-webmaster`)}\n          className=\"btn btn-primary ml-3 mt-2 mb-3 shadow-none border-none\"\n          \n        >\n          Add\n        </button>\n\n        <TableWebmaster />\n      </>\n    </div>\n  );\n};\n\nexport default ListWebMasters;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/superadmin/DetailsProjectNull.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/YoutubeValides.js",["1096","1097"],"import React, { useState, useRef } from \"react\";\nimport { useInfiniteQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport { getVideoAccepted } from \"../../apis/youtubeApi\";\nimport YoutubeVideo from \"../../components/aidchannel/youtubeVideos/YoutubeVideo\";\nimport useIntersectionObserver from \"../../helpers/useIntersectionObserver\";\n\nconst YoutubeValid√©s = () => {\n  const [limit] = useState(16);\n  const { codeCountry } = useParams();\n  const loadMoreButtonRef = useRef();\n  const [test, setTest] = useState(false);\n\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n  } = useInfiniteQuery([codeCountry, limit, \"ValidYoutube\"], getVideoAccepted, {\n    getNextPageParam: (lastPage, pages) => {\n      if (lastPage.data.length === limit) return parseInt(lastPage.page) + 1;\n      return false;\n    },\n  });\n\n  console.log(data, \"data\");\n\n  useIntersectionObserver({\n    target: loadMoreButtonRef,\n    onIntersect: fetchNextPage,\n    enabled: hasNextPage,\n  });\n\n  return (\n    <>\n      <div className=\"row ml-5 mt-4 d-md-flex\">\n        {data?.pages.map((group, i) => (\n          <React.Fragment key={i}>\n            {group.data.map((video, index) => (\n              <div key={index} className=\"mt-0 border p-3 m-2\">\n                <YoutubeVideo url={video?.video_url} />\n              </div>\n            ))}\n          </React.Fragment>\n        ))}\n      </div>\n      <div style={{ marginTop: \"20px\" }}>\n        <button\n          ref={loadMoreButtonRef}\n          onClick={() => fetchNextPage()}\n          disabled={!hasNextPage || isFetchingNextPage}\n        >\n          {isFetchingNextPage\n            ? \"Loading more ....\"\n            : hasNextPage\n            ? \"Load More\"\n            : \"Nothing more to load\"}\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default YoutubeValid√©s;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/TweetsValid√©s.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/YoutubeValidation.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/TwitterValidation.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/layout/webmaster/WebMasterLayout.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/layout/superadmin/SuperAdminLayout.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/projectApi.js",["1098"],"import { getRequest, postRequest, deleteRequest, putRequest } from \"./index\";\n\n//projects from DATABASE  projectsByStatus\nexport const getProject = async ({ pageParam = 1, queryKey }) => {\n  const [search, limitPage] = queryKey;\n  const { data } = await getRequest(\n    `project/globalProjectsByKeyWord?searchText=${search}&limit=${limitPage}&page=${pageParam}`\n  );\n  return {\n    data: data.data,\n    page: pageParam,\n  };\n};\n// get projects by name and status\nexport const getProjectByStatus = async ({ pageParam = 1, queryKey }) => {\n  const [search, limitPage, searchStatus] = queryKey;\n  const { data } = await getRequest(\n    `project/projectsByStatus?searchText=${search}&limit=${limitPage}&page=${pageParam}&status_project=${searchStatus}`\n  );\n  return {\n    data: data.data,\n    page: pageParam,\n  };\n};\n//project of the month\nexport const getProjectsOfMonthApi = async (limit, page) => {\n  try {\n    const res = await postRequest(\n      `project/projectOfMonth?limit=${limit}&page=${page}`,\n      {\n        searchText: \"\",\n      }\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n  return [];\n};\n\nexport const getOneProjectOfMonthByCountryApi = async (codeCountry) => {\n  try {\n    const res = await getRequest(\n      `project/oneProjectOfMonthByCodeCountry/${codeCountry}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n  return [];\n};\n\nexport const getProjectOfMonthScrolling = async ({\n  pageParam = 1,\n  queryKey,\n}) => {\n  const [search, limitPage] = queryKey;\n  const { data } = await postRequest(\n    `project/projectOfMonth?limit=${limitPage}&page=${pageParam}`,\n    {\n      searchText: search,\n    }\n  );\n  return { data: data?.data, page: pageParam };\n};\n\nexport const getProjectByFunder = async (idFunder, limit, page) => {\n  try {\n    const res = await getRequest(\n      `project/byFunder/${idFunder}?limit=${limit}&page=${page}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getProjectsKeywordCountry = async ({\n  pageParam = 1,\n  queryKey,\n}) => {\n  const [search, limitPage, codeCountry] = queryKey;\n  const { data } = await postRequest(\n    `project/searchByKeyword?limit=${limitPage}&page=${pageParam}`,\n    {\n      searchText: search,\n      code: codeCountry,\n    }\n  );\n\n  return { data: data.data, page: pageParam };\n};\n\n// get project\nexport const getProject2 = async (project_id) => {\n  try {\n    const res = await getRequest(`project/projectDetailData/${project_id}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n  return [];\n};\n\nexport const getNumberProjectsByCountry = async (codeCountry) => {\n  try {\n    const res = await getRequest(\n      `project/numberProjectsbyCodeCountry/${codeCountry}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getNumberProjectsByCountryNULL = async (codeCountry) => {\n  try {\n    const res = await getRequest(\n      `project/numberProjectsbyCodeCountryNull/${codeCountry}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getNumberProjects = async () => {\n  try {\n    const res = await getRequest(`project/numberProjects`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const AddProject = async (project) => {\n  try {\n    const res = await postRequest(\"project\", project);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteProject = async (projectID) => {\n  try {\n    const res = await deleteRequest(`project/${projectID}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateProject = async (IdProject, project) => {\n  try {\n    const res = await putRequest(`project/${IdProject}`, project);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllHeadProjectsWithIdAndName = async () => {\n  try {\n    const res = await getRequest(\"project/headProjectWithIdAndName\");\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllProjectsByCountry = async (codeCountry) => {\n  try {\n    const res = await getRequest(`project/ByCodeCountry/${codeCountry}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getAllProjectsOfMonthByCountry = async (codeCountry) => {\n  try {\n    const res = await getRequest(\n      `project/projectsOfMonthByCodeCountry/${codeCountry}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const enablePojectOfMonth = async (projectId, codeCountry) => {\n  try {\n    const res = await putRequest(\n      `project/enabelProjectOfMonth/${projectId}/${codeCountry}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const disabledPojectOfMonth = async (projectId) => {\n  try {\n    const res = await putRequest(`project/disabledProjectOfMonth/${projectId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getAllProjectsByCountryNull = async (codeCountry) => {\n  try {\n    const res = await getRequest(`project/ByCodeCountryNull/${codeCountry}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const acceptProject = async (projectId) => {\n  try {\n    await putRequest(`project/acceptProject/${projectId}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const refuseProject = async (projectId) => {\n  try {\n    await putRequest(`project/refuseProject/${projectId}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllProjectsByCountryPagination = async ({\n  pageParam = 1,\n  queryKey,\n}) => {\n  const [codeCountry, limit] = queryKey;\n  try {\n    const { data } = await postRequest(\n      `project/byCodeCountryPagination/${codeCountry}?limit=${limit}&page=${pageParam}`\n    );\n    return { data: data.data, page: pageParam };\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getProjectsAccepted = async ({ pageParam = 1, queryKey }) => {\n  const [codeCountry, limit] = queryKey;\n  try {\n    const { data } = await postRequest(\n      `project/projectsAccepted/${codeCountry}`\n    );\n    return { data: data.data, page: pageParam };\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllProjectsOfMonthByThematic = async (id, codeCountry) => {\n  try {\n    const res = await getRequest(\n      `project/projectsOfMonthByThematic/${id}/${codeCountry}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllProjectsOfMonthByDonors = async (idOrg, codeCountry) => {\n  try {\n    const res = await getRequest(\n      `project/projectsOfMonthByDonors/${idOrg}/${codeCountry}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllProjectsOfMonthByImplementers = async (\n  idOrg,\n  codeCountry\n) => {\n  try {\n    const res = await getRequest(\n      `project/projectsOfMonthByImplementers/${idOrg}/${codeCountry}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/youtubeApi.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/countryApi.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/twitterApi.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/interviewApi.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/general/CardInfo.js",["1099","1100"],"import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport \"./CardInfo.css\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { useHistory } from \"react-router-dom\";\nimport parse from \"html-react-parser\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\n\nconst CardInfo = ({ data, index, url }) => {\n  const history = useHistory();\n  const { codeCountry } = useParams();\n\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-device-width: 700px)\",\n  });\n\n  return (\n    <div className=\"container my-5 box-shadow-card-info p-4\">\n      {data && (\n        <>\n          {isDesktopOrLaptop ? (\n            index % 2 === 0 ? (\n              <>\n                <div className=\"row \">\n                  <div className=\"col-4\">\n                    <img\n                      className=\"project-month-img\"\n                      alt=\"project of the month\"\n                      src={urlImageAdapter(data?.image_url)}\n                    />\n                  </div>\n                  <div className=\"col-8\">\n                    <h1 className=\"title-project-month\">{data?.name}</h1>\n                    <p className=\"project-details text-justify\">\n                      {parse(data?.description?.substring(0, 400) + \" ....\")}\n                    </p>\n                    {url && (\n                      <Link to={url}>\n                        <button className=\"btn-view-more\">More Details</button>\n                      </Link>\n                    )}\n                  </div>\n                </div>\n              </>\n            ) : (\n              <>\n                <div className=\"row \">\n                  <div className=\"col-8\">\n                    <h1 className=\"title-project-month\">{data?.name}</h1>\n                    <p className=\"project-details text-justify\">\n                      {parse(data?.description?.substring(0, 400) + \" ....\")}\n                    </p>\n                    <div className=\"row\">\n                      {/* <div className=\"col-6\">\n                        <button\n                          onClick={() =>\n                            history.push(\n                              `/country/${codeCountry}/learn-more-article`\n                            )\n                          }\n                          type=\"button\"\n                          className=\"btn btn-view-more\"\n                        >\n                          More Details\n                        </button>{\" \"}\n                      </div> */}\n                      <div className=\"col-12 mt-2\">\n                        {url && (\n                          <Link to={url}>\n                            <button className=\"btn-view-more\">\n                              More Details\n                            </button>\n                          </Link>\n                        )}\n                      </div>\n                    </div>{\" \"}\n                  </div>\n                  <div className=\"col-4\">\n                    <img\n                      className=\"project-month-img\"\n                      alt=\"project of the month\"\n                      src={urlImageAdapter(data?.image_url)}\n                    />\n                  </div>\n                </div>\n              </>\n            )\n          ) : (\n            <>\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <h1 className=\"title-project-month\">{data?.name}</h1>\n                </div>\n                <div className=\"col-12 mt-3\">\n                  <img\n                    className=\"project-month-img\"\n                    alt=\"project of the month\"\n                    src={urlImageAdapter(data?.image_url)}\n                  />\n                </div>\n                <div className=\"col-12 mt-4\">\n                  <p className=\"project-details text-justify\">\n                    {parse(data?.description?.substring(0, 400) + \" ....\")}\n                  </p>\n                </div>\n                <div className=\"col-12 mt-2\">\n                  {url && (\n                    <Link to={url}>\n                      <button className=\"btn-view-more\">More Details</button>\n                    </Link>\n                  )}\n                </div>\n              </div>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default CardInfo;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/layout/header/CountryHeader.js",["1101","1102"],"import React, { useState, useEffect } from \"react\";\nimport Flag from \"react-world-flags\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport \"./CountryHeader.css\";\nimport { getThematiques } from \"../../../apis/thematiqueApi\";\n\nimport { getDonorsApi, getImplementersApi } from \"apis/organizationApi\";\n\nconst CountryHeader = () => {\n  const [thematics, setThematics] = useState([]);\n  const [donors, setDonors] = useState([]);\n  const [implementers, setImplementers] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n\n  const { codeCountry, id } = useParams();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [codeCountry]);\n\n  const getDataFromApi = async () => {\n    const thematic = await getThematiques();\n    setThematics(thematic);\n    const donor = await getDonorsApi(codeCountry);\n    setDonors(donor);\n    const implementer = await getImplementersApi(codeCountry);\n    setImplementers(implementer);\n  };\n  console.log(donors);\n  return (\n    <div className=\"nav-border\">\n      <div className=\"container\">\n        <nav className=\"navbar navbar-expand-lg navbar-light backgroud-color\">\n          <Link to={`/country/${codeCountry}`} className=\"navbar-brand\">\n            <Flag\n              code={codeCountry}\n              height=\"40\"\n              style={{ marginRight: \"2px\" }}\n              className=\"flag\"\n            />\n            <img\n              alt=\"logo\"\n              src=\"/assets/logo.png\"\n              width=\"80px\"\n              className=\"logo-country\"\n            />\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item dropdown\">\n                <Link\n                  to=\"/\"\n                  className=\"nav-link dropdown-toggle\"\n                  id=\"navbarDropdown\"\n                  role=\"button\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  By Thematics\n                </Link>\n                <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                  {thematics?.map((thematic, index) => (\n                    <Link\n                      key={index}\n                      to={`/projectsbyThematic/${thematic._id}/${codeCountry}`}\n                      className=\"dropdown-item\"\n                    >\n                      {thematic.name}\n                    </Link>\n                  ))}\n                </div>\n              </li>\n              <li className=\"nav-item dropdown\">\n                <Link\n                  to=\"/\"\n                  className=\"nav-link dropdown-toggle\"\n                  id=\"navbarDropdown\"\n                  role=\"button\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  By Donors\n                </Link>\n                <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                  {donors?.map((donor, index) => {\n                    return (\n                      <Link\n                        key={index}\n                        to={`/projectsByDonors/${donor._id}/${codeCountry}`}\n                        className=\"dropdown-item\"\n                      >\n                        {donor.name}\n                      </Link>\n                    );\n                  })}\n                </div>\n                \n              </li>\n              <li className=\"nav-item dropdown\">\n                <Link\n                  to=\"/\"\n                  className=\"nav-link dropdown-toggle\"\n                  id=\"navbarDropdown\"\n                  role=\"button\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  By Implementers\n                </Link>\n                <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                  {implementers?.map((implementer, index) => (\n                    <Link\n                      key={index}\n                      to={`/projectsByImplementers/${implementer._id}/${codeCountry}`}\n                      className=\"dropdown-item\"\n                    >\n                      {implementer.name}\n                    </Link>\n                  ))}\n                </div>\n              </li>\n            </ul>\n            <form\n              onSubmit={() =>\n                history.push(`/projects/${codeCountry}/${searchText}`)\n              }\n              className=\"form-inline my-2 my-lg-0  mx-2 form-search-country\"\n            >\n              <div className=\"form-group has-search div-form-country\">\n                <span className=\"fa fa-search form-control-feedback\"></span>\n                <input\n                  onChange={(e) => setSearchText(e.target.value)}\n                  value={searchText}\n                  type=\"text\"\n                  className=\"form-control input-search-country\"\n                  placeholder=\"Search for the project\"\n                  style={{ width: \"100%\" }}\n                />\n              </div>\n            </form>\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/login\">\n                  <button className=\"btn-login\">Login</button>\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    </div>\n  );\n};\nexport default CountryHeader;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/general/CardInfo2.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/general/CardSmall.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/general/InputSearch.js",["1103"],"import React, { useState, useEffect } from \"react\";\nimport \"./InputSearch.css\";\n\nconst InputSearch = ({ setSearchText, searchText, placeholder }) => {\n  const [tempText, settempText] = useState(\"\");\n  useEffect(() => {\n    settempText(searchText);\n  },[]);\n  return (\n    <form\n      className=\"form-inline my-2 my-lg-0 w-100 h-100\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        setSearchText(tempText);\n      }}\n    >\n      <div className=\"form-group has-search  w-md-50 w-xs-100\">\n        <span className=\"fa fa-search form-control-feedback\"></span>\n        <input\n          onChange={(e) => settempText(e.target.value)}\n          value={tempText}\n          type=\"text\"\n          className=\"form-control input-search \"\n          placeholder={placeholder}\n          style={{\n            width: \"100%\",\n            border: \"none\",\n            boxShadow: \"rgba(0, 0, 0, 0.24) 0px 3px 8px\",\n          }}\n        />\n      </div>\n    </form>\n  );\n};\n\nexport default InputSearch;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/general/CardInfoDetails.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/layout/header/PublicHeader.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/layout/footer/PublicFooter.js",["1104","1105"],"import React, { useState, useEffect } from \"react\";\n\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport \"./PublicFooter.css\";\n\n\nimport { getThematiques } from \"../../../apis/thematiqueApi\";\n\nimport { getDonorsApi, getImplementersApi } from \"apis/organizationApi\";\nconst PublicFooter = () => {\n  const [thematics, setThematics] = useState([]);\n  const [donors, setDonors] = useState([]);\n  const [implementers, setImplementers] = useState([]);\n  const { codeCountry } = useParams();\n\n  const history = useHistory();\n  useEffect(() => {\n    getDataFromApi();\n  }, [codeCountry]);\n\n  const getDataFromApi = async () => {\n    const thematic = await getThematiques();\n    setThematics(thematic);\n    const donor = await getDonorsApi(codeCountry);\n    setDonors(donor);\n    const implementer = await getImplementersApi(codeCountry);\n    setImplementers(implementer);\n  };\n  return (\n    <div className=\"public-footer\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 col-md-2 \"></div>\n          <div className=\"col-md-4\">\n            <ul className=\"list\">\n              <li\n                className=\"mb-4\"\n                style={{ fontSize: \"20px\", color: \"#f9b934\" }}\n              >\n                By Thematics\n              </li>\n\n              {thematics?.map((thematic, index) => (\n                <li key={index}>\n                  <Link\n                    className=\"items\"\n                    style={{ color: \"#cccccc\", textDecoration: \"none\" }}\n                    to={`/projectsbyThematic/${thematic._id}/${codeCountry}`}\n                  >\n                    {thematic.name}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          <div className=\"col-12 col-md-3\">\n            <ul className=\"list\">\n              <li\n                className=\"mb-4\"\n                style={{ fontSize: \"20px\", color: \"#f9b934\" }}\n              >\n                By Donors\n              </li>\n\n              {donors?.map((donor, index) => (\n                <li key={index}>\n                  <Link\n                    className=\"items\"\n                    style={{ color: \"#cccccc\", textDecoration: \"none\" }}\n                    to={`/projectsByDonors/${donor._id}/${codeCountry}`}\n                  >\n                    {donor.name}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          <div className=\"col-12 col-md-3\">\n            <ul className=\"list\">\n              <li\n                className=\"mb-4\"\n                style={{ fontSize: \"20px\", color: \"#f9b934\" }}\n              >\n                By Implementers\n              </li>\n\n              {implementers?.map((implementer, index) => (\n                <li key={index}>\n                  <Link\n                    className=\"items\"\n                    style={{ color: \"#cccccc\", textDecoration: \"none\" }}\n                    to={`/projectsByImplementers/${implementer._id}/${codeCountry}`}\n                  >\n                    {implementer.name}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PublicFooter;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/helpers/useIntersectionObserver.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/ProjectForm.js",["1106","1107","1108","1109","1110","1111","1112"],"import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport JoditEditor from \"jodit-react\";\nimport moment from \"moment\";\nimport { AiFillFileAdd } from \"react-icons/ai\";\nimport Select from \"react-select\";\nimport { getCountryByCode } from \"../../../apis/countryApi\";\nimport {\n  AddProject,\n  getProject2,\n  updateProject,\n} from \"../../../apis/projectApi\";\nimport \"./OrganizationForm.css\";\nimport { getThematiques } from \"apis/thematiqueApi\";\nimport { getStatus } from \"apis/statusApi\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Row, FormGroup, FormLabel, Col } from \"react-bootstrap\";\nimport \"./ProjectForm.css\";\nimport { getOrganizationByType } from \"apis/organizationApi\";\nimport { getAllCops, getAllUsers } from \"apis/userApi\";\n\n\nconst AddProjectForm = () => {\n  const history = useHistory();\n  const { codeCountry, idProject } = useParams();\n  const editor = useRef(null);\n  const ObjEditor = useRef(null);\n  const [content, setContent] = useState(\"\");\n  const [objectives, setObjectives] = useState(\"\");\n  const [thematiquesOptions, setThematiquesOptions] = useState();\n  const [fundersOptions, setFundersOptions] = useState();\n  const [selectedFunder, setSelectedFunder] = useState(null);\n  const [subFundersOptions, setSubFundersOptions] = useState();\n  const [selectedSubFunder, setSelectedSubFunder] = useState(null);\n  const [implementersOptions, setImplementersOptions] = useState();\n  const [selectedImplementer, setSelectedImplementer] = useState(null);\n  const [subImplementersOptions, setSubImplementersOptions] = useState();\n  const [selectedSubImplementer, setSelectedSubImplementer] = useState(null);\n\n  const [statusOptions, setStatusOptions] = useState();\n  const [copOptions, setCopOptions] = useState();\n  const [selectedCop, setSelectedCop] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [selectedStatus, setSelectedStatus] = useState(null);\n  const [status, setStatus] = useState(null);\n  const [project, setProject] = useState();\n  const [country, setCountry] = useState();\n  const [projectLogoPreview, setProjectLogoPreview] = useState(null);\n  const [projectLogo, setProjectLogo] = useState();\n  const [approvalDate, setApprovalDate] = useState();\n  const [actualStart, setActualStart] = useState();\n  const [plannedEnd, setPlannedEnd] = useState();\n  const [actualEnd, setActualEnd] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const config = {\n    readonly: false,\n    placeholder: \"Description of the project\",\n  };\n  const configObj = {\n    readonly: false,\n    placeholder: \"Ojectives of the project\",\n  };\n\n  const { register, handleSubmit, setValue } = useForm();\n\n  const getDataFromApi = useCallback(async () => {\n    const thematiques = await getThematiques();\n    setThematiquesOptions(\n      thematiques?.map((thematique) => {\n        return {\n          value: thematique._id,\n          label: thematique.name,\n        };\n      })\n    );\n    const funders = await getOrganizationByType(\"Funding Agencies\");\n    const subfund = funders?.map((funder) => {\n      return {\n        value: funder._id,\n        label: funder.name,\n      };\n    });\n    setFundersOptions(subfund);\n    setSubFundersOptions(subfund);\n\n    const implementers = await getOrganizationByType(\"Implementing NGO\");\n    const subImpl = implementers?.map((implementer) => {\n      return {\n        value: implementer._id,\n        label: implementer.name,\n      };\n    });\n    setImplementersOptions(subImpl);\n    setSubImplementersOptions(subImpl);\n\n    const status = await getStatus();\n    setStatus(status);\n    setStatusOptions(\n      status?.map((sta) => {\n        return {\n          value: sta?._id,\n          label: sta?.name,\n        };\n      })\n    );\n    const country = await getCountryByCode(codeCountry);\n    setCountry(country);\n\n    const cops = await getAllUsers();\n    setCopOptions(\n      cops?.map((cop) => {\n        return {\n          value: cop?._id,\n          label: cop?.fullname,\n        };\n      })\n    );\n\n    if (idProject !== undefined) {\n      const project = await getProject2(idProject);\n      setProject(project);\n      setProjectLogoPreview(urlImageAdapter(project?.image_url));\n      if (project.thematique)\n        setSelectedOption({\n          value: project?.thematique?._id,\n          label: project?.thematique?.name,\n        });\n      if (project.status)\n        setSelectedStatus({\n          value: project?.status?._id,\n          label: project?.status?.name,\n        });\n      if (project.funder)\n        setSelectedFunder({\n          value: project?.funder?._id,\n          label: project?.funder?.name,\n        });\n      if (project.sub_funder)\n        setSelectedSubFunder({\n          value: project?.sub_funder[0]?._id,\n          label: project?.sub_funder[0]?.name,\n        });\n      if (project.implementer)\n        setSelectedImplementer({\n          value: project?.implementer?._id,\n          label: project?.implementer?.name,\n        });\n      if (project.sub_implementer)\n        setSelectedSubImplementer({\n          value: project?.sub_implementer[0]?._id,\n          label: project?.sub_implementer[0]?.name,\n        });\n      if (project.task_manager)\n        setSelectedCop({\n          value: project?.task_manager?._id,\n          label: project?.task_manager?.fullname,\n        });\n      if (project.description) setContent(project?.description);\n      if (project.objectives) setObjectives(project?.objectives);\n      if (project.approval_date)\n        setApprovalDate(moment(project?.approval_date).toDate());\n      if (project.actual_start)\n        setActualStart(moment(project?.actual_start).toDate());\n      if (project.actual_end)\n        setActualEnd(moment(project?.actual_end).toDate());\n      if (project.planned_end)\n        setPlannedEnd(moment(project?.planned_end).toDate());\n\n      //setContent(project?.task_manager);\n      if (project.name) setValue(\"name\", project?.name);\n      if (project.total_cost) setValue(\"total_cost\", project?.total_cost);\n      if (project.budget) setValue(\"budget\", project?.budget);\n      if (project.task_manager) setValue(\"task_manager\", project?.task_manager);\n      if (project.image_url) setValue(\"image_url\", project?.image_url);\n      if (project.row_data_org) setValue(\"row_data_org\", project?.row_data_org);\n    }\n  }, [idProject, setValue]);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const onSubmit = async (data) => {\n    //const project = await getProject2(selectedOption?.value);\n    let formData = new FormData();\n    formData.append(\"namefr\", \"\");\n    formData.append(\"country\", country?._id);\n\n    if (selectedOption) formData.append(\"thematique\", selectedOption?.value);\n\n    if (selectedStatus) formData.append(\"status\", selectedStatus?.value);\n\n    if (selectedFunder) formData.append(\"funder\", selectedFunder?.value);\n\n    if (selectedSubFunder)\n      formData.append(\"sub_funder\", [selectedSubFunder?.value]);\n\n    if (selectedImplementer)\n      formData.append(\"implementer\", selectedImplementer?.value);\n\n    if (selectedSubImplementer)\n      formData.append(\"sub_implementer\", [selectedSubImplementer?.value]);\n\n    if (data.total_cost !== \"\") formData.append(\"total_cost\", data.total_cost);\n    // if (data.budget === \"\") formData.append(\"budget\", null);\n    //else formData.append(\"budget\", data.budget);\n\n    if (approvalDate) formData.append(\"approval_date\", approvalDate);\n\n    if (actualStart) formData.append(\"actual_start\", actualStart);\n\n    if (actualEnd) formData.append(\"actual_end\", actualEnd);\n\n    if (plannedEnd) formData.append(\"planned_end\", plannedEnd);\n\n    if (selectedCop) formData.append(\"task_manager\", selectedCop?.value);\n\n    formData.append(\"name\", data.name);\n\n    formData.append(\"description\", content);\n    formData.append(\"objectives\", objectives);\n    if (projectLogo != undefined) formData.append(\"projectImage\", projectLogo);\n\n    if (idProject !== undefined) {\n      setLoading(true);\n      await updateProject(idProject, formData);\n      setLoading(false);\n    } else {\n      formData.append(\"validation\", 1);\n      await AddProject(formData);\n      history.push(`/web-master/validationProjects/projectsV/${codeCountry}`);\n    }\n  };\n\n  const handleThematiqueChange = (selected) => {\n    setSelectedOption(selected);\n  };\n\n  const handleChangeStatus = (selected) => {\n    setSelectedStatus(selected);\n  };\n  const imagePreview = (e) => {\n    setProjectLogoPreview(URL.createObjectURL(e.target.files[0]));\n    setProjectLogo(e.target.files[0]);\n  };\n  return (\n    <div className=\"container\">\n      <form>\n        <div className=\"row\">\n          {/* {idProject !== undefined ? \"Save Modifications\" : \"Add Project\"} */}\n          <div className=\"centralize mt-4 col-12 col-lg-6\">\n            <div className=\"input-block\">\n              <input\n                className=\"input-org-form\"\n                type=\"text\"\n                id=\"name\"\n                spellCheck=\"false\"\n                {...register(\"name\", {\n                  required: \"Name required\",\n                })}\n              />\n              <span className=\"placeholder\" style={{ color: \"black\" }}>\n                Name\n              </span>\n            </div>\n          </div>\n          <div className=\"form-group m-auto\">\n            <label className=\"ml-4 logo-file d-inline\" htmlFor=\"projectLogo\">\n              {projectLogoPreview && (\n                <img\n                  src={projectLogoPreview}\n                  alt=\"avatar\"\n                  style={{ cursor: \"pointer\" }}\n                  width=\"15%\"\n                  height=\"15%\"\n                  className=\"avatar\"\n                />\n              )}\n              {!projectLogoPreview && (\n                <span style={{ cursor: \"pointer\" }}>\n                  <AiFillFileAdd color=\"blue\" size={40} />\n                </span>\n              )}\n            </label>\n            <input\n              type=\"file\"\n              className=\"form-control-file ml-4 shadow-none logo-file d-none\"\n              id=\"projectLogo\"\n              name=\"projectLogo\"\n              onChange={imagePreview}\n              multiple={false}\n            />\n          </div>\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <div className=\"input-block\">\n              <input\n                className=\"input-org-form\"\n                type=\"text\"\n                id=\"total_cost\"\n                spellCheck=\"false\"\n                {...register(\"total_cost\")}\n              />\n              <span className=\"placeholder\" style={{ color: \"black\" }}>\n                Total Cost\n              </span>\n            </div>\n          </div>\n          <div className=\"col-12 col-lg-6 centralize \">\n            <FormLabel className=\"label__form\">COP</FormLabel>\n            <Select\n              placeholder=\"Select COP \"\n              value={selectedCop}\n              onChange={(selected) => setSelectedCop(selected)}\n              options={copOptions}\n            />\n          </div>{\" \"}\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Thematic</FormLabel>\n            <Select\n              placeholder=\"Select the thematic \"\n              value={selectedOption}\n              onChange={handleThematiqueChange}\n              options={thematiquesOptions}\n            />\n          </div>{\" \"}\n          <div className=\"col-12 col-lg-6  centralize mt-4\">\n            <FormLabel className=\"label__form\">Status</FormLabel>\n            <Select\n              placeholder=\"Select the Status \"\n              value={selectedStatus}\n              onChange={handleChangeStatus}\n              options={statusOptions}\n            />\n          </div>\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Funder</FormLabel>\n            <Select\n              placeholder=\"Select the funder \"\n              value={selectedFunder}\n              onChange={(selected) => setSelectedFunder(selected)}\n              options={fundersOptions}\n            />\n          </div>{\" \"}\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Sub-funder</FormLabel>\n            <Select\n              placeholder=\"Select the Sub-funder \"\n              value={selectedSubFunder}\n              onChange={(selected) => setSelectedSubFunder(selected)}\n              options={subFundersOptions}\n            />\n          </div>{\" \"}\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Implementer</FormLabel>\n            <Select\n              placeholder=\"Select the Implementer \"\n              value={selectedImplementer}\n              onChange={(selected) => setSelectedImplementer(selected)}\n              options={implementersOptions}\n            />\n          </div>{\" \"}\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Sub-Implementer</FormLabel>\n            <Select\n              placeholder=\"Select the Sub-Implementer \"\n              value={selectedSubImplementer}\n              onChange={(selected) => setSelectedSubImplementer(selected)}\n              options={subImplementersOptions}\n            />\n          </div>{\" \"}\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Approval Date</FormLabel>\n\n            <DatePicker\n              className=\"input-org-form\"\n              selected={approvalDate}\n              onChange={(date) => setApprovalDate(date)}\n            />\n          </div>\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Actual Start</FormLabel>\n            <FormGroup>\n              <DatePicker\n                className=\"input-org-form\"\n                selected={actualStart}\n                onChange={(date) => setActualStart(date)}\n              />\n            </FormGroup>\n          </div>\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Actual End</FormLabel>{\" \"}\n            <FormGroup>\n              <DatePicker\n                className=\"input-org-form\"\n                selected={actualEnd}\n                onChange={(date) => setActualEnd(date)}\n              />{\" \"}\n            </FormGroup>\n          </div>\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Planned End</FormLabel>{\" \"}\n            <FormGroup>\n              <DatePicker\n                className=\"input-org-form\"\n                placeholder=\"Placeholder\"\n                selected={plannedEnd}\n                onChange={(date) => setPlannedEnd(date)}\n              />{\" \"}\n            </FormGroup>\n          </div>\n          <div className=\"col-12 mt-4\">\n            <FormLabel className=\"label__form\">Description</FormLabel>\n            <JoditEditor\n              ref={editor}\n              value={content}\n              config={config}\n              tabIndex={1}\n              onBlur={(newContent) => setContent(newContent)}\n            />\n          </div>{\" \"}\n          <div className=\"col-12 mt-4\">\n            <FormLabel className=\"label__form\">Objectives</FormLabel>{\" \"}\n            <JoditEditor\n              ref={ObjEditor}\n              value={objectives}\n              config={configObj}\n              tabIndex={1}\n              onBlur={(newContent) => setObjectives(newContent)}\n            />\n          </div>{\" \"}\n          {/* {project && (\n            <div className=\"container my-5 box-shadow-card-info p-4\">\n              <FormLabel className=\"label__form\">\n                Informations Related{\" \"}\n              </FormLabel>{\" \"}\n              <ReactJson src={project?.raw_data_org} />{\" \"}\n            </div>\n          )} */}\n          {!loading ? (\n            <button\n              onClick={handleSubmit(onSubmit)}\n              type=\"submit\"\n              className={\n                idProject !== undefined\n                  ? `btn btn-warning w-100 h-25 shadow-none my-3`\n                  : `btn btn-primary w-100 h-25 shadow-none my-3`\n              }\n            >\n              {idProject !== undefined ? \"Save Modifications\" : \"Add Project\"}\n            </button>\n          ) : (\n            <div className=\"spinner-border text-warning m-auto\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          )}\n        </div>\n      </form>\n     \n    </div>\n  );\n};\n\nexport default AddProjectForm;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/youtubeVideos/YoutubeVideo.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/tweets/Post.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/project/SearchWithStatus.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/tweets/Tweets.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/InterviewForm.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/project/ProjectCard.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/MTableProject.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/MTableInterview.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/OrganizationForm.js",["1113","1114"],"import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport JoditEditor from \"jodit-react\";\nimport Select from \"react-select\";\nimport { getCountryByCode } from \"../../../apis/countryApi\";\nimport {\n  AddOrganization,\n  getAllHeadOrganizationsWithIdAndName,\n  getOrganization,\n  updateOrganization,\n} from \"../../../apis/organizationApi\";\nimport \"./OrganizationForm.css\";\nimport fakeLogo from \"../../../assets/images/fakeLogo.png\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\n\nconst AddOrganizationForm = () => {\n  const history = useHistory();\n  const { codeCountry, idSubOrganization } = useParams();\n  const editor = useRef(null);\n  const [content, setContent] = useState(\"\");\n  const [options, setOptions] = useState();\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [suborganization, setSubOrganization] = useState();\n  const [isResResData, setIsResData] = useState(false);\n  const [logoPreview, setLogoPreview] = useState(null);\n  const [logo, setLogo] = useState();\n\n  const config = {\n    readonly: false,\n    placeholder: \"Write Organization description\",\n  };\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    //formState: { errors },\n  } = useForm();\n\n  const getDataFromApi = useCallback(async () => {\n    const organizations = await getAllHeadOrganizationsWithIdAndName();\n    setOptions(\n      organizations?.map((org) => {\n        return {\n          value: org._id,\n          label: org.name,\n        };\n      })\n    );\n    if (idSubOrganization !== undefined) {\n      const subOrg = await getOrganization(idSubOrganization);\n      setSubOrganization(subOrg);\n      setLogoPreview(suborganization?.logo);\n\n      setSelectedOption({\n        value: subOrg?.head_office_id?._id,\n        label: subOrg?.head_office_id?.name,\n      });\n\n      setContent(subOrg?.description);\n      setValue(\"name\", subOrg?.name);\n      setValue(\"organization_size\", subOrg?.organization_size);\n      setValue(\"youtube_url\", subOrg?.youtube_url);\n\n      if (subOrg.twitter_username) {\n        setValue(\n          \"twitter_username\",\n          `https://twitter.com/${subOrg?.twitter_username}`\n        );\n      }\n    } else {\n      setLogoPreview(fakeLogo);\n    }\n    setIsResData(true);\n  }, [idSubOrganization, setValue, isResResData]);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const onSubmit = async (data) => {\n    const country = await getCountryByCode(codeCountry);\n    const headOffice = await getOrganization(selectedOption?.value);\n\n    let formData = new FormData();\n\n    formData.append(\"head_office_id\", headOffice?._id);\n\n    formData.append(\n      \"organization_types\",\n      JSON.stringify(headOffice?.organization_types)\n    );\n    //  f\n\n    if (data.twitter_username === \"\") formData.append(\"twitter_username\", null);\n    else\n      formData.append(\n        \"twitter_username\",\n        data?.twitter_username?.substring(20)\n      );\n\n    if (data.youtube_url === \"\") formData.append(\"youtube_url\", null);\n    else formData.append(\"youtube_url\", data.youtube_url);\n    if (data.organization_size === \"\")\n      formData.append(\"organization_size\", null);\n    else formData.append(\"organization_size\", data.organization_size);\n    if (content === \"\") formData.append(\"description\", null);\n    else formData.append(\"description\", content);\n    if (logo != undefined) formData.append(\"logoOrg\", logo);\n\n    formData.append(\"name\", data.name);\n    formData.append(\"country\", country._id);\n    console.log(formData);\n    if (idSubOrganization !== undefined) {\n      await updateOrganization(idSubOrganization, formData);\n    } else {\n      await AddOrganization(formData);\n    }\n\n    history.push(`/web-master/organizations/${codeCountry}`);\n  };\n\n  const handleChange = (selectedOption) => {\n    setSelectedOption(selectedOption);\n  };\n\n  const imagePreview = (e) => {\n    setLogoPreview(URL.createObjectURL(e.target.files[0]));\n    setLogo(e.target.files[0]);\n  };\n\n  return (\n    <div className=\"container\">\n      {\n        /*isResResData === true && logoPreview && */ <form>\n          <div className=\"row pb-5\">\n            <div className=\"centralize mt-4 col-12 col-lg-6\">\n              <div className=\"input-block\">\n                <input\n                  className=\"input-org-form\"\n                  type=\"text\"\n                  id=\"name\"\n                  spellCheck=\"false\"\n                  {...register(\"name\", {\n                    required: \"Name required\",\n                  })}\n                />\n                <span className=\"placeholder\">Name</span>\n              </div>\n            </div>\n            <div className=\"form-group m-auto\">\n              <label className=\"ml-4 logo-file d-inline\" htmlFor=\"logoOrg\">\n                {logoPreview && (\n                  <img\n                    src={urlImageAdapter(logoPreview)}\n                    alt=\"avatar\"\n                    width=\"6%\"\n                    className=\"avatar\"\n                  />\n                )}\n              </label>\n              <input\n                type=\"file\"\n                className=\"form-control-file ml-4 shadow-none logo-file d-none\"\n                id=\"logoOrg\"\n                name=\"logoOrg\"\n                onChange={imagePreview}\n                multiple={false}\n              />\n            </div>\n\n            <div className=\"col-12 col-lg-6 centralize mt-4\">\n              <div className=\"input-block\">\n                <input\n                  className=\"input-org-form\"\n                  type=\"text\"\n                  id=\"organization_size\"\n                  spellCheck=\"false\"\n                  {...register(\"organization_size\")}\n                />\n                <span className=\"placeholder\">Organization Size</span>\n              </div>\n            </div>\n            <div className=\"col-12 col-lg-6 centralize mt-4\">\n              <Select\n                placeholder=\"Select head office\"\n                value={selectedOption}\n                onChange={handleChange}\n                options={options}\n              />\n            </div>\n\n            <div className=\"col-12 col-lg-6 centralize mt-4\">\n              <div className=\"input-block\">\n                <input\n                  className=\"input-org-form\"\n                  type=\"text\"\n                  id=\"youtube_url\"\n                  spellCheck=\"false\"\n                  {...register(\"youtube_url\")}\n                />\n                <span className=\"placeholder\">Youtube Channel URL</span>\n              </div>\n            </div>\n            <div className=\"col-12 col-lg-6 centralize mt-4\">\n              <div className=\"input-block\">\n                <input\n                  className=\"input-org-form\"\n                  type=\"text\"\n                  id=\"twitter_username\"\n                  spellCheck=\"false\"\n                  {...register(\"twitter_username\")}\n                />\n                <span className=\"placeholder\">Twitter URL</span>\n              </div>\n            </div>\n            <div className=\"col-12 mt-4\">\n              <JoditEditor\n                ref={editor}\n                value={content}\n                config={config}\n                tabIndex={1}\n                onBlur={(newContent) => setContent(newContent)}\n              />\n            </div>\n\n            <button\n              onClick={handleSubmit(onSubmit)}\n              type=\"submit\"\n              className=\"btn btn-primary w-100 h-25 submit-login my-5 \"\n            >\n              {idSubOrganization !== undefined\n                ? \"Save Modifications\"\n                : \"Add Local organizations office\"}\n            </button>\n          </div>\n        </form>\n      }\n    </div>\n  );\n};\n\nexport default AddOrganizationForm;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/MTableOrganization.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/general/CounterDatavisualization.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/organizationApi.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/project/ProjectDetailHeader.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/userApi.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/project/ProjectDetailSide.js",["1115","1116","1117","1118","1119","1120","1121"],"import React from \"react\";\nimport \"./ProjectDetailSide.css\";\nimport parse from \"html-react-parser\";\nimport { NO_DATA_AVALAIBLE } from \"helpers/constants\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport {\n  FcMoneyTransfer,\n  FcBullish,\n  FcGlobe,\n  FcRightUp,\n  FcRightDown,\n} from \"react-icons/fc\";\n\nconst ProjectDetailSide = ({ project }) => {\n  return (\n    <>\n      {project && (\n        <div className=\"row\">\n          <div className=\"col-12 col-md-8 \">\n            <p className=\"project-details text-justify\">\n              {parse(String(project?.description ? project?.description : \"\"))}\n            </p>\n            {project.image_url && (\n              <img\n                className=\"footer-img\"\n                alt=\"profile\"\n                src={urlImageAdapter(project.image_url)}\n              />\n            )}\n            <p className=\"project-details text-justify\">\n              {parse(String(project?.objectives ? project?.objectives : \"\"))}\n            </p>\n          </div>\n          <div className=\"col-12 col-md-3 ml-md-5 \">\n            <div className=\"side-card\">\n              <h1\n                className=\"section-title mb-4\"\n                style={{\n                  color: \"#3f51b5\",\n                  fontSize: \"23.9888px\",\n                  lineHeight: \"32.0011px\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Budget\n              </h1>\n              <ul className=\"list-unstyled\">\n                <li>\n                  <FcMoneyTransfer size={25} />\n                  <span className=\"ml-4\">\n                    {\" \"}\n                    {project.total_cost\n                      ? project.total_cost\n                      : NO_DATA_AVALAIBLE}\n                  </span>\n                </li>\n              </ul>\n              <h1\n                className=\"section-title mb-4\"\n                style={{\n                  color: \"#3f51b5\",\n                  fontSize: \"23.9888px\",\n                  lineHeight: \"32.0011px\",\n                  fontWeight: \"bold\",\n                }}\n                className=\"bold-title\"\n              >\n                Status\n              </h1>\n              <ul className=\"list-unstyled\">\n                <li>\n                  <FcBullish size={25} />\n                  <span className=\"ml-4\">\n                    {\" \"}\n                    {project?.status?.name\n                      ? project?.status?.name\n                      : NO_DATA_AVALAIBLE}\n                  </span>\n                </li>\n              </ul>\n              <h1\n                className=\"bold-title\"\n                className=\"section-title mb-4\"\n                style={{\n                  color: \"#3f51b5\",\n                  fontSize: \"23.9888px\",\n                  lineHeight: \"32.0011px\",\n                  fontWeight: \"bold\",\n                }}\n                className=\"bold-title\"\n              >\n                Actual Start\n              </h1>\n              <ul className=\"list-unstyled\">\n                <li>\n                  <FcRightUp size={25} />\n\n                  <span className=\"ml-4\">\n                    {\" \"}\n                    {project?.actual_start\n                      ? project?.actual_start?.split(\"T\")[0]\n                      : NO_DATA_AVALAIBLE}\n                  </span>\n                </li>\n              </ul>\n              <h1\n                className=\"bold-title\"\n                className=\"section-title mb-4\"\n                style={{\n                  color: \"#3f51b5\",\n                  fontSize: \"23.9888px\",\n                  lineHeight: \"32.0011px\",\n                  fontWeight: \"bold\",\n                }}\n                className=\"bold-title\"\n              >\n                Actual end\n              </h1>{\" \"}\n              <ul className=\"list-unstyled\">\n                <li>\n                  <FcRightDown size={25} />\n\n                  <span className=\"ml-4\">\n                    {\" \"}\n                    {project?.actual_end\n                      ? project?.actual_end?.split(\"T\")[0]\n                      : NO_DATA_AVALAIBLE}\n                  </span>\n                </li>\n              </ul>\n              <h1\n                className=\"bold-title\"\n                className=\"section-title mb-4\"\n                style={{\n                  color: \"#3f51b5\",\n                  fontSize: \"23.9888px\",\n                  lineHeight: \"32.0011px\",\n                  fontWeight: \"bold\",\n                }}\n                className=\"bold-title\"\n              >\n                Country\n              </h1>{\" \"}\n              <ul className=\"list-unstyled\">\n                <li>\n                  <FcGlobe size={25} />\n\n                  <span className=\"ml-4\">\n                    {\" \"}\n                    {project?.country?.name\n                      ? project?.country?.name\n                      : NO_DATA_AVALAIBLE}\n                  </span>\n                </li>\n              </ul>\n            </div>\n          </div>{\" \"}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ProjectDetailSide;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/expert/ExpertCard.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/authentication/SideImage.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/authentication/LoginForm.js",["1122"],"import \"./authentication.css\";\nimport \"./authentication.css\";\nimport toastr from \"toastr\";\nimport { Link } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport \"toastr/build/toastr.css\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst LoginForm = () => {\n  const history = useHistory();\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (e) => {\n    setUser({ ...user, [e.target.id]: e.target.value });\n  };\n\n  const submitSignIn = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await axios.post(\"http://localhost:3010/auth/signin\", user);\n      alert(JSON.stringify(res));\n      console.log(res, \"res\");\n      localStorage.setItem(\"jwt_info\", JSON.stringify(res.data));\n      toastr.info(\"Welcome among us \", {\n        positionClass: \"toast-bottom-left\",\n      });\n      history.push(\"/\");\n    } catch (error) {\n      console.log(error);\n      toastr.warning(\"Please check your informations!\", {\n        positionClass: \"toast-bottom-left\",\n      });\n    }\n  };\n\n  return (\n    <form onSubmit={submitSignIn}>\n      <div className=\"centralize\">\n        <div className=\"input-block\">\n          <input\n            onChange={handleChange}\n            className=\"input\"\n            type=\"text\"\n            id=\"email\"\n            spellCheck=\"false\"\n            required\n          />\n          <span className=\"placeholder\">Email address</span>\n        </div>\n      </div>\n      <div className=\"centralize mt-4\">\n        <div className=\"input-block\">\n          <input\n            onChange={handleChange}\n            className=\"input\"\n            type=\"password\"\n            id=\"password\"\n            spellCheck=\"false\"\n            required\n          />\n          <span className=\"placeholder\">Password</span>\n        </div>\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"btn btn-primary form-control submit-login mt-4\"\n      >\n        SIGN IN\n      </button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/expert/ExpertDetailHeader.js",[],["1123","1124"],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/organization/OrganizationCard.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/expert/ExpertDetailBody.js",["1125","1126","1127","1128","1129","1130","1131","1132","1133"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./ExpertDetailBody.css\";\nimport ReactDOM from \"react-dom\";\nimport \"./ExpertDetailHeader.css\";\nimport { CgWorkAlt } from \"react-icons/cg\";\nimport SimpleMap from \"./SimpleMap\";\nimport CardInfoExpert from \"../general/CardInfoExpert\";\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { getExpertArticleByIdExpert } from \"../../../../src/apis/ExpertArticleApi\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\n\nconst ExpertDetailBody = ({ expert }) => {\n  // const { expert_id } = useParams();\n\n  // const [article, setArticle] = useState({});\n\n  // const getDataFromApi = useCallback(async () => {\n  //   const article = await getExpertArticleByIdExpert(expert_id);\n  //   setArticle(article);\n  // }, [article]);\n\n  // useEffect(() => {\n  //   getDataFromApi();\n  // }, [getDataFromApi]);\n\n  return (\n    <>\n      {expert && (\n        <div className=\"mt-5\">\n          <div className=\"row\">\n            <div className=\"col-12 col-sm-6 justify-content-end\">\n              <h5\n                style={{\n                  color: \"#3f51b5\",\n                  fontSize: \"30px\",\n                  lineHeight: \"150px\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                {expert?.fullname}\n              </h5>\n            </div>\n\n            <img\n              className=\"rounded-circle img-top\"\n              src={urlImageAdapter(expert?.image_url)}\n              alt=\"Card cap\"\n            />\n          </div>\n          <div className=\"my-1 box-shadow-card-info p-1 row\">\n            <div className=\" col-12 col-sm-6 \">\n              <ul className=\"list-unstyled\">\n                <li\n                  style={{\n                    marginTop: \"50px\",\n                  }}\n                >\n                  <img\n                    style={{\n                      width: \"34px\",\n                    }}\n                    alt=\"yellow icon\"\n                    src=\"/assets/icons/contact-icon-phone.png\"\n                  />{\" \"}\n                  <span className=\"ml-4\">{expert?.phone}</span>\n                </li>\n                <li\n                  style={{\n                    marginTop: \"20px\",\n                  }}\n                >\n                  <img\n                    style={{\n                      width: \"34px\",\n                    }}\n                    alt=\"yellow icon\"\n                    src=\"/assets/icons/contact-icon-mail.png\"\n                  />{\" \"}\n                  <span className=\"ml-4\">{expert?.email}</span>\n                </li>\n                <li\n                  style={{\n                    marginTop: \"20px\",\n                  }}\n                >\n                  <CgWorkAlt color=\"yellow\" size=\"35\" />\n                  <span className=\"ml-4\">{expert?.job_title}</span>\n                </li>\n              </ul>\n            </div>{\" \"}\n            <div className=\"col-12 col-sm-6 \">\n              <ul className=\"list-unstyled\">\n                <li\n                  style={{\n                    marginTop: \"50px\",\n                  }}\n                >\n                  <img\n                    style={{\n                      width: \"34px\",\n                    }}\n                    alt=\"yellow icon\"\n                    src=\"/assets/icons/contact-icon-pin.png\"\n                  />{\" \"}\n                  <span className=\"ml-4\">{`${expert?.country?.name}, ${expert?.adress}`}</span>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ExpertDetailBody;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/organization/OrganizationDetailsBody.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/expert/ExpertContact.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/authentication/RegistrationForm.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/organization/OrganizationDetailsHeader.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/Details.js",["1134","1135","1136","1137"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useMediaQuery } from \"react-responsive\";\nimport parse from \"html-react-parser\";\nimport \"./OrganizationForm.css\";\n\nimport { getOneInterview } from \"apis/interviewApi\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\n\nconst Details = () => {\n  const { idInterview } = useParams();\n  const [interview, setInterview] = useState();\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-device-width: 700px)\",\n  });\n  const getDataFromApi = useCallback(async () => {\n    const interview = await getOneInterview(idInterview);\n    setInterview(interview);\n    console.log(interview);\n  }, []);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const index = 1;\n\n  return (\n    <div className=\"container\">\n      <div className=\"row pb-5\">\n        <div className=\"container my-5 box-shadow-card-info p-4\">\n          {interview && (\n            <>\n              <div className=\"row\">\n                <div className=\"col-12 mt-3\">\n                  <img\n                    className=\"rounded mx-auto d-block\"\n                  //  width=\"75%\"\n                    alt=\"project of the month\"\n                    src={`${process.env.REACT_APP_BACKEND}${interview?.interviewImage}`}\n                  />\n                </div>\n                <div className=\"col-12 mt-4\">\n                  <p className=\"project-details text-justify\">\n                    {parse(interview?.interview)}\n                  </p>\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Details;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/MtableExpert.js",["1138","1139","1140","1141","1142","1143","1144"],"import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport {\n  enableExpertOfMonth,\n  disabledExpertOfMonth,\n  getExpert,\n  getAllExpertsByCountry,\n} from \"apis/userApi\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Avatar,\n  Grid,\n  Typography,\n  TablePagination,\n  TableFooter,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { getCountryByCode } from \"apis/countryApi\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    // minWidth: 650,\n  },\n  tableContainer: {\n    borderRadius: 15,\n    margin: \"10px 10px\",\n    // maxWidth: 950,\n  },\n  tableHeaderCell: {\n    width: \"25%\",\n    fontWeight: \"bold\",\n    backgroundColor: \"black\",\n    color: theme.palette.getContrastText(theme.palette.primary.dark),\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.getContrastText(theme.palette.primary.light),\n  },\n  name: {\n    fontWeight: \"bold\",\n    color: theme.palette.secondary.dark,\n  },\n  status: {\n    fontWeight: \"bold\",\n    fontSize: \"0.75rem\",\n    color: \"white\",\n    backgroundColor: \"grey\",\n    borderRadius: 8,\n    padding: \"3px 10px\",\n    display: \"inline-block\",\n  },\n}));\n\nconst MTableExpert = ({ deleteRow }) => {\n  const [checked, setChecked] = useState(false);\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const { codeCountry, idExpert } = useParams();\n  const [country, setCountry] = useState();\n  const [experts, setExperts] = useState([]);\n\n  const getDataFromApi = useCallback(async () => {\n    const country = await getCountryByCode(codeCountry);\n    setCountry(country);\n    const expert = await getAllExpertsByCountry(codeCountry);\n    setExperts(expert?.reverse());\n  }, []);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi, checked]);\n\n  const history = useHistory();\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const handleChangeCheckbox = async (expert) => {\n    if (expert.expert_of_month === true) {\n      await disabledExpertOfMonth(expert._id);\n    } else {\n      await enableExpertOfMonth(expert._id);\n    }\n    setChecked(!checked);\n  };\n  return (\n    <TableContainer component={Paper} className={classes.tableContainer}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell\n              className={classes.tableHeaderCell}\n              style={{ width: \"25%\" }}\n            >\n              FullName\n            </TableCell>\n            <TableCell\n              className={classes.tableHeaderCell}\n              style={{ width: \"15%\" }}\n            >\n              Email\n            </TableCell>\n            <TableCell\n              className={classes.tableHeaderCell}\n              style={{ width: \"10%\" }}\n            >\n              Phone\n            </TableCell>\n            <TableCell\n              className={classes.tableHeaderCell}\n              style={{ width: \"10%\" }}\n            >\n              Expert of the month\n            </TableCell>\n            <TableCell\n              className={classes.tableHeaderCell}\n              style={{ width: \"15%\" }}\n            >\n              {\" \"}\n              Expert's Article\n            </TableCell>{\" \"}\n            <TableCell\n              className={classes.tableHeaderCell}\n              style={{ width: \"10%\" }}\n            >\n              {\" \"}\n              Delete\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {experts\n            ?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            ?.map((row) => (\n              <TableRow key={row.name}>\n                <TableCell>\n                  <Grid container>\n                    <Grid item lg={2}>\n                      <Avatar\n                        alt={row.name}\n                        src={row.logo}\n                        className={classes.avatar}\n                      />\n                    </Grid>\n                    <Grid item lg={10}>\n                      <Typography className={classes.name}>\n                        {row.fullname}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"subtitle2\">\n                    {row?.email}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"textSecondary\" variant=\"body2\">\n                    {row?.phone}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <button\n                    className={\n                      row?.expert_of_month === true\n                        ? \"btn btn-success shadow-none\"\n                        : \"btn btn-primary shadow-none\"\n                    }\n                    onClick={() => handleChangeCheckbox(row)}\n                  >\n                    {row?.expert_of_month === true ? \"Yes\" : \"No\"}\n                  </button>\n                </TableCell>\n                <TableCell>\n                  <button\n                    onClick={() =>\n                      history.push(\n                        `/web-master/add-expert-article/${codeCountry}/${row._id}`\n                      )\n                    }\n                    className=\"btn btn-warning  mt-3  shadow-none\"\n                  >\n                    Add / Edit Article\n                  </button>\n                </TableCell>{\" \"}\n                <TableCell>\n                  <button\n                    className=\"btn btn-danger shadow-none\"\n                    onClick={() => deleteRow(row)}\n                  >\n                    Delete\n                  </button>\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n        <TableFooter>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 15]}\n            count={experts.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default MTableExpert;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/TableProject.js",["1145","1146","1147","1148","1149","1150"],"import React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { AiFillDelete, AiFillEdit } from \"react-icons/ai\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { FcCalendar } from \"react-icons/fc\";\nimport { CgDetailsMore } from \"react-icons/cg\";\nimport { BiShow } from \"react-icons/bi\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport axios from \"axios\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport { deleteProject } from \"apis/projectApi\";\n\nconst TableProject = () => {\n  const tableRef = React.createRef();\n  const history = useHistory();\n  const { codeCountry } = useParams();\n\n  const reloadTableData = () => {\n    tableRef.current.onQueryChange();\n  };\n\n  return (\n    <div className=\"mt-4\">\n      <MaterialTable\n        tableRef={tableRef}\n        title=\"List of Projects\"\n        columns={[\n          {\n            field: \"image_url\",\n            title: \"Image\",\n            render: (rowData) => (\n              <img\n                className=\"img-fluid\"\n                src={urlImageAdapter(rowData.image_url)}\n                style={{\n                  verticalAlign: \"middle\",\n                  width: \"50px\",\n                  height: \"50px\",\n                  borderRadius: \"50%\",\n                }}\n              />\n            ),\n            cellStyle: {\n              width: \"10%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Name\",\n            field: \"name\",\n            cellStyle: {\n              width: \"40%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Thematique\",\n            field: \"thematique.name\",\n            cellStyle: {\n              width: \"20%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Total Cost\",\n            field: \"total_cost\",\n            type: \"numeric\",\n            cellStyle: {\n              width: \"15%\",\n              textAlign: \"center\",\n            },\n          },\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) => {\n            let url = `${process.env.REACT_APP_BACKEND}project/byCodeCountryPagination/${codeCountry}?`;\n            url += \"limit=\" + query.pageSize;\n            url += \"&page=\" + (query.page + 1);\n            axios\n              .post(url, {\n                searchText: query.search,\n              })\n              .then((result) => {\n                resolve({\n                  data: result.data.data,\n                  page: result.data.page - 1,\n                  totalCount: result.data.totalCount,\n                });\n              });\n          })\n        }\n        options={{\n          filtering: false,\n          search: true,\n          sorting: false,\n          headerStyle: {\n            backgroundColor: \"#0069d9\",\n            textAlign: \"center\",\n            color: \"white\",\n          },\n          actionsColumnIndex: -1,\n        }}\n        actions={[\n          {\n            icon: \"refresh\",\n            tooltip: \"Refresh Data\",\n            isFreeAction: true,\n            onClick: () => tableRef.current && tableRef.current.onQueryChange(),\n          },\n          {\n            icon: () => <FaRegEdit size={30} color=\"#ffc107\" />,\n            tooltip: \"Edit Project\",\n            onClick: (event, project) => {\n              history.push(\n                `/web-master/edit-project/${codeCountry}/${project?._id}`\n              );\n            },\n          },\n\n          {\n            icon: () => <BiShow size={30} />,\n            tooltip: \"Show in Browser\",\n            onClick: (event, project) => {\n              window.open(\n                `${process.env.REACT_APP_FRONT}projectdetails/${project._id}`,\n                \"_blank\"\n              );\n            },\n          },\n\n          {\n            icon: () => <AiFillDelete size={30} color=\"red\" />,\n            tooltip: \"Delete Project\",\n            onClick: async (event, project) => {\n              if (\n                window.confirm(\n                  `Are you sure you wish to delete ${project.name} ?`\n                )\n              ) {\n                try {\n                  await deleteProject(project._id);\n                  reloadTableData();\n                } catch (error) {\n                  console.log(error);\n                }\n              }\n            },\n          },\n        ]}\n      />\n    </div>\n  );\n};\n\nexport default TableProject;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/general/SideBarAdmin.js",["1151"],"import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport SideNav, { NavItem, NavIcon, NavText } from \"@trendmicro/react-sidenav\";\nimport \"@trendmicro/react-sidenav/dist/react-sidenav.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst SideBarAdmin = ({ sideBarItems }) => {\n  const history = useHistory();\n\n  return (\n    <SideNav\n      onSelect={(selected) => {\n        history.push(selected);\n        // else history.push(`${selected}/${codeCountry}`);\n      }}\n      style={{\n        backgroundColor: \"#3f51b5\",\n        position: \"fixed\",\n      }}\n    >\n      <SideNav.Toggle expanded={true} />\n      <SideNav.Nav defaultSelected=\"home\">\n        {sideBarItems.map((item, index) => (\n          <NavItem key={index} eventKey={item.eventKey}>\n            <NavIcon>{item.icon}</NavIcon>\n            <NavText>{item.title}</NavText>\n          </NavItem>\n        ))}\n      </SideNav.Nav>\n    </SideNav>\n  );\n};\n\nexport default SideBarAdmin;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/index.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/organisationType.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/thematiqueApi.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/general/InputRadio.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/interviewTypeApi.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/TableInterview.js",["1152","1153","1154","1155","1156"],"import React from \"react\";\nimport MaterialTable from \"material-table\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport axios from \"axios\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport { deleteOrganization } from \"apis/organizationApi\";\n\nconst TableInterview = () => {\n  const orgTableRef = React.createRef();\n  const history = useHistory();\n  const { codeCountry } = useParams();\n\n  const reloadTableData = () => {\n    orgTableRef.current.onQueryChange();\n  };\n\n  return (\n    <div>\n      <MaterialTable\n        tableRef={orgTableRef}\n        title=\"List of old interviews\"\n        columns={[\n          {\n            field: \"interviewImage\",\n            title: \"Image\",\n            render: (rowData) => (\n              <img\n                className=\"img-fluid\"\n                src={urlImageAdapter(rowData?.interviewImage)}\n                style={{\n                  verticalAlign: \"middle\",\n                  width: \"50px\",\n                  height: \"50px\",\n                  borderRadius: \"50%\",\n                }}\n              />\n            ),\n            cellStyle: {\n              width: \"30%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Project\",\n            field: \"project.name\",\n            cellStyle: {\n              width: \"35%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Interview Type\",\n            field: \"type_interview.name\",\n            cellStyle: {\n              width: \"35%\",\n              textAlign: \"center\",\n            },\n          },\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) => {\n            let url = `${process.env.REACT_APP_BACKEND}interview/ByCodeCountryPagination/${codeCountry}?`;\n            url += \"limit=\" + query.pageSize;\n            url += \"&page=\" + (query.page + 1);\n            axios\n              .post(url, {\n                searchText: query.search,\n              })\n              .then((result) => {\n                resolve({\n                  data: result.data.data,\n                  page: result.data.page - 1,\n                  totalCount: result.data.totalCount,\n                });\n              });\n          })\n        }\n        options={{\n          filtering: false,\n          search: false,\n          sorting: false,\n          headerStyle: {\n            backgroundColor: \"#0069d9\",\n            textAlign: \"center\",\n            color: \"white\",\n          },\n          actionsColumnIndex: -1,\n        }}\n        actions={[\n          {\n            icon: \"refresh\",\n            tooltip: \"Refresh Data\",\n            isFreeAction: true,\n            onClick: () =>\n              orgTableRef.current && orgTableRef.current.onQueryChange(),\n          },\n          {\n            icon: () => (\n              <button className=\"btn btn-warning border-none shadow-none\">\n                Details\n              </button>\n            ),\n            tooltip: \"See Details\",\n            onClick: (event, interview) => {\n              history.push(\n                `/web-master/details-interview/${codeCountry}/${interview?._id}`\n              );\n            },\n          },\n        ]}\n      />\n    </div>\n  );\n};\n\nexport default TableInterview;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/general/SideBar.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/TableOrganization.js",["1157","1158","1159"],"import React from \"react\";\nimport MaterialTable from \"material-table\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport axios from \"axios\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport { deleteOrganization } from \"apis/organizationApi\";\n\nconst TableOrganization = () => {\n  const orgTableRef = React.createRef();\n  const history = useHistory();\n  const { codeCountry } = useParams();\n\n  const reloadTableData = () => {\n    orgTableRef.current.onQueryChange();\n  };\n\n  return (\n    <div>\n      <MaterialTable\n        tableRef={orgTableRef}\n        title=\"List of local organizations office\"\n        columns={[\n          {\n            field: \"logo\",\n            title: \"Logo\",\n            render: (rowData) => (\n              <img\n                className=\"img-fluid\"\n                src={urlImageAdapter(rowData?.logo)}\n                style={{\n                  verticalAlign: \"middle\",\n                  width: \"50px\",\n                  height: \"50px\",\n                  borderRadius: \"50%\",\n                }}\n              />\n            ),\n            cellStyle: {\n              width: \"10%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Name\",\n            field: \"name\",\n            cellStyle: {\n              width: \"40%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Head Office\",\n            field: \"head_office_id.name\",\n            cellStyle: {\n              width: \"20%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Youtube\",\n            field: \"youtube_url\",\n            render: (rowData) => (\n              <a\n                href={rowData?.youtube_url}\n                target=\"_blank\"\n                style={{ textDecoration: \"none\" }}\n              >\n                Youtube\n              </a>\n            ),\n            cellStyle: {\n              width: \"15%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Twitter\",\n            field: \"twitter_username\",\n            render: (rowData) => (\n              <a\n                href={\n                  rowData.twitter_username &&\n                  `https://twitter.com/${rowData.twitter_username}`\n                }\n                target=\"_blank\"\n                style={{ textDecoration: \"none\" }}\n              >\n                Twitter\n              </a>\n            ),\n            cellStyle: {\n              width: \"15%\",\n              textAlign: \"center\",\n            },\n          },\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) => {\n            let url = `${process.env.REACT_APP_BACKEND}organization/byCodeCountryPagination/${codeCountry}?`;\n            url += \"limit=\" + query.pageSize;\n            url += \"&page=\" + (query.page + 1);\n            axios\n              .post(url, {\n                searchText: query.search,\n              })\n              .then((result) => {\n                resolve({\n                  data: result.data.data,\n                  page: result.data.page - 1,\n                  totalCount: result.data.totalCount,\n                });\n              });\n          })\n        }\n        options={{\n          filtering: false,\n          search: true,\n          sorting: false,\n          headerStyle: {\n            backgroundColor: \"#0069d9\",\n            textAlign: \"center\",\n            color: \"white\",\n          },\n          actionsColumnIndex: -1,\n        }}\n        actions={[\n          {\n            icon: \"refresh\",\n            tooltip: \"Refresh Data\",\n            isFreeAction: true,\n            onClick: () =>\n              orgTableRef.current && orgTableRef.current.onQueryChange(),\n          },\n          {\n            icon: () => <FaRegEdit size={30} color=\"#ffc107\" />,\n            tooltip: \"Edit Organization\",\n            onClick: (event, organization) => {\n              history.push(\n                `/web-master/edit-organization/${codeCountry}/${organization?._id}`\n              );\n            },\n          },\n          {\n            icon: () => <AiFillDelete size={30} color=\"red\" />,\n            tooltip: \"Delete Organization\",\n            onClick: async (event, organization) => {\n              if (\n                window.confirm(\n                  `Are you sure you wish to delete ${organization.name} ?`\n                )\n              ) {\n                try {\n                  await deleteOrganization(organization._id);\n                  reloadTableData();\n                } catch (error) {\n                  console.log(error);\n                }\n              }\n            },\n          },\n        ]}\n      />\n    </div>\n  );\n};\n\nexport default TableOrganization;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/helpers/sideBarWebMasterData.js",["1160"],"import {\n  AiOutlineLogout,\n  AiFillDashboard,\n  AiOutlineProject,\n  AiFillWechat,\n  AiOutlineUsergroupDelete,\n  AiOutlineCluster,\n} from \"react-icons/ai\";\nimport { RiCommunityFill } from \"react-icons/ri\";\nimport { FcApproval } from \"react-icons/fc\";\nimport { HiUserAdd } from \"react-icons/hi\";\n\nconst sideBarWebMasterData = [\n  {\n    eventKey: \"/web-master\",\n    icon: <AiFillDashboard size={25} />,\n    title: \"Dashboard\",\n  },\n  {\n    eventKey: \"/web-master/organizations\",\n    icon: <RiCommunityFill size={25} />,\n    title: \"Sub organizations\",\n  },\n  {\n    eventKey: \"/web-master/validationProjects/projectsNv\",\n    icon: <AiOutlineProject size={25} />,\n    title: \"Projects\",\n  },\n  {\n    eventKey: \"/web-master/validation/youtube\",\n    icon: <FcApproval size={25} />,\n    title: \"Validation\",\n  },\n  {\n    eventKey: \"/web-master/interview\",\n    icon: <AiFillWechat size={25} />,\n    title: \"Interviews\",\n  },\n  {\n    eventKey: \"/web-master/experts\",\n    icon: <AiOutlineUsergroupDelete size={25} />,\n    title: \"Experts\",\n  },\n  {\n    eventKey: \"/web-master/users/addUser\",\n    icon: <HiUserAdd size={25} />,\n    title: \"Users\",\n  },\n\n  {\n    eventKey: \"/\",\n    icon: <AiOutlineLogout size={25} />,\n    title: \"Logout\",\n  },\n];\n\nexport default sideBarWebMasterData;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/project/ShowMoreDetails.js",["1161","1162"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport { getExpectedResultByProjectApi } from \"apis/expectedResultApi\";\nimport { getKeyExpertsByProjectApi } from \"apis/KeyExpertsApi\";\nimport { getKpisByProjectApi } from \"apis/kpisApi\";\nimport { getMainBeneficiaryByProjectApi } from \"apis/MainBeneficiaryApi\";\nimport { getProject2 } from \"apis/projectApi\";\nimport { getLocalizationsByProjectApi } from \"apis/localizationApi\";\n\nconst ShowMoreDetails = () => {\n  const [expectedResults, setExpectedResults] = useState([]);\n  const [mainBeneficiaries, setMainBeneficiaries] = useState([]);\n  const [keysExperts, setKeysExperts] = useState([]);\n  const [kpis, setKpis] = useState([]);\n  const [localizations, setLocalisations] = useState([]);\n  const [project, setProject] = useState();\n\n  const { idProject } = useParams();\n\n  const getDataFromApi = useCallback(async () => {\n    const expectedResults = await getExpectedResultByProjectApi(idProject);\n    setExpectedResults(expectedResults);\n    const mainBeneficiaries = await getMainBeneficiaryByProjectApi(idProject);\n    setMainBeneficiaries(mainBeneficiaries);\n    const keyExperts = await getKeyExpertsByProjectApi(idProject);\n    setKeysExperts(keyExperts);\n    const kpis = await getKpisByProjectApi(idProject);\n    setKpis(kpis);\n    const localizations = await getLocalizationsByProjectApi(idProject);\n    setLocalisations(localizations);\n    const project = await getProject2(idProject);\n    setProject(project);\n  }, [idProject]);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n  return (\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-sm-8 my-3 \">\n          <h2 style={{ backgroundColor: \"#f1f6f9\", alignSelf: \"flex-start\" }}>\n            Expected Results\n          </h2>\n          {expectedResults?.map((result) => (\n            <div class=\"card my-3\">\n              <div class=\"card-body\">\n                <p class=\"card-text\"> {result?.result} </p>\n              </div>\n            </div>\n          ))}\n        </div>\n        <div class=\"col-sm-4 my-3 \">\n          <h2 style={{ backgroundColor: \"#f1f6f9\", alignSelf: \"flex-start\" }}>\n            Main Beneficiaries\n          </h2>\n          {mainBeneficiaries?.map((beneficiary) => (\n            <div class=\"card my-3\">\n              <div class=\"card-body\">\n                <p class=\"card-text\"> {beneficiary?.beneficiary} </p>\n              </div>\n            </div>\n          ))}\n        </div>\n        <div class=\"col-sm-8 my-3\">\n          <h2 style={{ backgroundColor: \"#f1f6f9\", alignSelf: \"flex-start\" }}>\n            Key Experts\n          </h2>\n          {keysExperts?.map((expert) => (\n            <div class=\"card my-3\">\n              <div class=\"card-body\">\n                <p class=\"card-text\"> {expert?.key_expert} </p>\n              </div>\n            </div>\n          ))}\n        </div>\n        <div class=\"col-sm-4 my-3\">\n          <h2 style={{ backgroundColor: \"#f1f6f9\", alignSelf: \"flex-start\" }}>\n            Kpis\n          </h2>\n          {kpis?.map((kpi) => (\n            <div class=\"card my-3\">\n              <div class=\"card-body\">\n                <p class=\"card-text\"> {kpi?.kpi} </p>\n              </div>\n            </div>\n          ))}\n        </div>\n        <div class=\"col-sm-8 my-3\">\n          <h2 style={{ backgroundColor: \"#f1f6f9\", alignSelf: \"flex-start\" }}>\n            Localization\n          </h2>\n          {localizations?.map((localization) => (\n            <div class=\"card my-3\">\n              <div class=\"card-body\">\n                <p class=\"card-text\"> {localization?.localization} </p>\n              </div>\n            </div>\n          ))}\n        </div>\n        <div class=\"col-sm-4 my-3\">\n          <h2 style={{ backgroundColor: \"#f1f6f9\", alignSelf: \"flex-start\" }}>\n            Thematic\n          </h2>\n          <div class=\"card my-3\">\n            <div class=\"card-body\">\n              <p class=\"card-text\">{project?.thematique?.name}</p>\n            </div>\n          </div>\n        </div>\n        {/* <div class=\"col-sm-4 my-3\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">KPIs</h5>\n              <p class=\"card-text\">{data.kpi}</p>\n            </div>\n          </div>\n        </div>  */}\n      </div>\n    </div>\n  );\n};\nexport default ShowMoreDetails;\n//   <a href=\"#\" class=\"btn btn-primary\">\n//   <a href=\"#\" class=\"card-link\"> Another link </a>;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/ProjectOfTheMontInterview.js",["1163"],"import React from \"react\";\nimport JoditEditor from \"jodit-react\";\nimport { AiFillFileAdd } from \"react-icons/ai\";\n\nconst ProjectOfTheMontInterview = (props) => {\n  const {\n    imageLabel,\n    editorValue,\n    editorRef,\n    editorConfig,\n    setContent,\n    projectInterview,\n    addLoading,\n    loading,\n    addLabel,\n    editLabel,\n    editFunction,\n    addFunction,\n    logoPreview,\n    logo,\n    setLogoPreview,\n    setLogo,\n    inputId,\n  } = props;\n\n  const imagePreview = (e) => {\n    setLogoPreview(URL.createObjectURL(e.target.files[0]));\n    setLogo(e.target.files[0]);\n  };\n\n  return (\n    <div>\n      <div className=\"my-3\">\n        <div className=\"form-group m-auto\">\n          <label className=\"ml-4 logo-file d-inline\" htmlFor={inputId}>\n            {logoPreview && (\n              <img\n                src={logoPreview}\n                alt=\"avatar\"\n                style={{ cursor: \"pointer\" }}\n                width=\"15%\"\n                height=\"15%\"\n                className=\"avatar\"\n              />\n            )}\n            {!logoPreview && (\n              <span style={{ cursor: \"pointer\" }}>\n                {\" \"}\n                {imageLabel + \" : \"}\n                <AiFillFileAdd color=\"blue\" size={40} />\n              </span>\n            )}\n          </label>\n          <input\n            type=\"file\"\n            className=\"form-control-file ml-4 shadow-none logo-file d-none\"\n            id={inputId}\n            name={inputId}\n            onChange={imagePreview}\n            multiple={false}\n          />\n        </div>\n        <div className=\"mt-4\">\n          <JoditEditor\n            ref={editorRef}\n            value={editorValue}\n            config={editorConfig}\n            tabIndex={1}\n            onBlur={(newContent) => {\n              setContent(newContent);\n            }}\n          />\n          {!projectInterview ? (\n            !addLoading ? (\n              <button\n                onClick={() => addFunction()}\n                className=\"btn btn-secondary mt-3  shadow-none\"\n              >\n                {addLabel}\n              </button>\n            ) : (\n              <div className=\"spinner-border text-danger m-3\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </div>\n            )\n          ) : !loading ? (\n            <button\n              onClick={() => editFunction()}\n              className=\"btn btn-warning mt-3  shadow-none\"\n            >\n              {editLabel}\n            </button>\n          ) : (\n            <div className=\"spinner-border text-danger m-3\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectOfTheMontInterview;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/TableExpert.js",["1164"],"import React from \"react\";\nimport MaterialTable from \"material-table\";\nimport { FcCalendar } from \"react-icons/fc\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport { deleteExpert } from \"apis/userApi\";\n\nconst TableExpert = () => {\n  const orgTableRef = React.createRef();\n  const history = useHistory();\n  const { codeCountry } = useParams();\n\n  const reloadTableData = () => {\n    orgTableRef.current.onQueryChange();\n  };\n\n  return (\n    <div>\n      <MaterialTable\n        tableRef={orgTableRef}\n        title=\"List of experts\"\n        columns={[\n          {\n            field: \"image_url\",\n            title: \"Profil\",\n            render: (rowData) => (\n              <img\n                className=\"img-fluid\"\n                src={urlImageAdapter(rowData?.image_url)}\n                style={{\n                  verticalAlign: \"middle\",\n                  width: \"50px\",\n                  height: \"50px\",\n                  borderRadius: \"50%\",\n                }}\n              />\n            ),\n            cellStyle: {\n              width: \"15%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Full Name\",\n            field: \"fullname\",\n            cellStyle: {\n              width: \"25%\",\n\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Email\",\n            field: \"email\",\n            cellStyle: {\n              width: \"25%\",\n\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Phone\",\n            field: \"phone\",\n            cellStyle: {\n              width: \"25%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Expert of the month\",\n            field: \"expert_of_month\",\n            cellStyle: {\n              width: \"25%\",\n              textAlign: \"center\",\n            },\n          },\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) => {\n            let url = `${process.env.REACT_APP_BACKEND}user/expertsByCodeCountryPagination?`;\n            url += \"limit=\" + query.pageSize;\n            url += \"&page=\" + (query.page + 1);\n            axios\n              .post(url, {\n                searchText: query.search,\n              })\n              .then((result) => {\n                resolve({\n                  data: result.data.data,\n                  page: result.data.page - 1,\n                  totalCount: result.data.totalCount,\n                });\n              });\n          })\n        }\n        options={{\n          filtering: false,\n          search: true,\n          sorting: false,\n          headerStyle: {\n            backgroundColor: \"#0069d9\",\n            textAlign: \"center\",\n            color: \"white\",\n          },\n          actionsColumnIndex: -1,\n        }}\n        actions={[\n          {\n            icon: \"refresh\",\n            tooltip: \"Refresh Data\",\n            isFreeAction: true,\n            onClick: () =>\n              orgTableRef.current && orgTableRef.current.onQueryChange(),\n          },\n\n          {\n            icon: () => <FaRegEdit size={30} color=\"#ffc107\" />,\n            tooltip: \"Edit Expert\",\n            onClick: (event, expert) => {\n              history.push(\n                `/web-master/edit-Expert/${codeCountry}/${expert?._id}`\n              );\n            },\n          },\n          {\n            icon: () => <FcCalendar size={30} />,\n            tooltip: \"Expert of the month\",\n            onClick: (event, interview) => {\n              history.push(\n                `/web-master/add-expert-article/${codeCountry}/${interview?._id}`\n              );\n            },\n          },\n          {\n            icon: () => (\n              <button className=\"btn btn-danger border-none shadow-none\">\n                Delete\n              </button>\n            ),\n            onClick: async (event, user) => {\n              if (\n                window.confirm(\n                  `Are you sure you wish to delete ${user.fullname} ?`\n                )\n              ) {\n                try {\n                  await deleteExpert(user?._id);\n                  reloadTableData();\n                  reloadTableData();\n                } catch (error) {\n                  console.log(error);\n                }\n              }\n            },\n          },\n        ]}\n      />\n    </div>\n  );\n};\n\nexport default TableExpert;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/helpers/urlImageAdapter.js",["1165","1166"],"const urlImageAdapter = (url) => {\n  if (url?.split(\"/\")[0] == \"uploads\") {\n    console.log(process.env.REACT_APP_BACKEND + url);\n    return process.env.REACT_APP_BACKEND + url;\n  } else if (url?.length != 0) return url;\n  return null;\n};\n\nexport default urlImageAdapter;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/ExpertForm.js",["1167"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { AiFillFileAdd } from \"react-icons/ai\";\nimport { getCountryByCode } from \"../../../apis/countryApi\";\nimport \"./OrganizationForm.css\";\nimport {\n  AddExpert,\n  getAllHeadExpertsWithIdAndName,\n  getExpert,\n  updateExpert,\n} from \"../../../apis/userApi\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\n\nconst ExpertForm = () => {\n  const history = useHistory();\n  const { codeCountry, idExpert } = useParams();\n  const [expertImagePreview, setExpertImagePreview] = useState(null);\n  const [expertImage, setExpertImage] = useState();\n  const { register, handleSubmit, setValue } = useForm();\n\n  const getDataFromApi = useCallback(async () => {\n    if (idExpert !== undefined) {\n      const expert = await getExpert(idExpert);\n      setValue(\"fullname\", expert?.fullname);\n      setValue(\"email\", expert?.email);\n      setValue(\"adress\", expert?.adress);\n      setValue(\"job_title\", expert?.job_title);\n      setValue(\"phone\", expert?.phone);\n      setExpertImagePreview(urlImageAdapter(expert?.image_url));\n    }\n  }, [idExpert, setValue]);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const onSubmit = async (data) => {\n    console.log(data);\n    const country = await getCountryByCode(codeCountry);\n    //const expert = await getExpert(idExpert);\n    let formData = new FormData();\n    formData.append(\"adress\", data.adress);\n    formData.append(\"country\", country._id);\n    formData.append(\"role\", 3);\n    formData.append(\"email\", data.email);\n    formData.append(\"fullname\", data.fullname);\n    formData.append(\"job_title\", data.job_title);\n    formData.append(\"phone\", data.phone);\n    if (expertImage !== undefined) formData.append(\"image_url\", expertImage);\n\n    if (idExpert !== undefined) {\n      await updateExpert(idExpert, formData);\n    } else {\n      await AddExpert(formData);\n    }\n\n    history.push(`/web-master/experts/${codeCountry}`);\n  };\n\n  const imagePreview = (e) => {\n    setExpertImagePreview(URL.createObjectURL(e.target.files[0]));\n    setExpertImage(e.target.files[0]);\n  };\n\n  return (\n    <div className=\"container\">\n      <form>\n        <div className=\"row pb-5\">\n          <div className=\"centralize mt-4 col-12 col-lg-6\">\n            <div className=\"input-block\">\n              <input\n                className=\"input-org-form\"\n                type=\"text\"\n                id=\"fullname\"\n                spellCheck=\"false\"\n                {...register(\"fullname\", {\n                  required: \"Name required\",\n                })}\n              />\n              <span className=\"placeholder\">Full Name</span>\n            </div>\n          </div>\n          <div className=\"form-group m-auto\">\n            <label className=\"ml-4 logo-file d-inline\" htmlFor=\"expertImage\">\n              {expertImagePreview && (\n                <img\n                  src={expertImagePreview}\n                  alt=\"avatar\"\n                  style={{ cursor: \"pointer\" }}\n                  width=\"15%\"\n                  height=\"15%\"\n                  className=\"avatar\"\n                />\n              )}\n              {!expertImagePreview && (\n                <span style={{ cursor: \"pointer\" }}>\n                  <AiFillFileAdd color=\"blue\" size={40} />\n                </span>\n              )}\n            </label>\n            <input\n              type=\"file\"\n              className=\"form-control-file ml-4 shadow-none logo-file d-none\"\n              id=\"expertImage\"\n              name=\"expertImage\"\n              onChange={imagePreview}\n              multiple={false}\n            />\n          </div>\n\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <div className=\"input-block\">\n              <input\n                className=\"input-org-form\"\n                type=\"text\"\n                id=\"email\"\n                spellCheck=\"false\"\n                {...register(\"email\", {\n                  required: \"Email Required\",\n                  pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                })}\n              />\n              <span className=\"placeholder\">Email</span>\n            </div>\n          </div>\n\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <div className=\"input-block\">\n              <input\n                className=\"input-org-form\"\n                type=\"text\"\n                id=\"adress\"\n                spellCheck=\"false\"\n                {...register(\"adress\")}\n              />\n              <span className=\"placeholder\">Address</span>\n            </div>\n          </div>\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <div className=\"input-block\">\n              {\" \"}\n              <input\n                className=\"input-org-form\"\n                type=\"text\"\n                id=\"job_title\"\n                spellCheck=\"false\"\n                {...register(\"job_title\")}\n              />\n              <span className=\"placeholder\">Job of the expert</span>\n            </div>\n          </div>\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <div className=\"input-block\">\n              {\" \"}\n              <input\n                className=\"input-org-form\"\n                type=\"text\"\n                id=\"phone\"\n                spellCheck=\"false\"\n                {...register(\"phone\")}\n              />\n              <span className=\"placeholder\">Phone</span>\n            </div>\n          </div>\n          <button\n            onClick={handleSubmit(onSubmit)}\n            type=\"submit\"\n            className={\n              idExpert !== undefined\n                ? \"btn btn-warning w-100 h-25  py-3 my-5\"\n                : \"btn btn-primary w-100 h-25 py-3 my-5\"\n            }\n          >\n            {idExpert !== undefined ? \"Edit Expert\" : \"Add Expert\"}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ExpertForm;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/superadmin/DetailsProject.js",["1168","1169","1170","1171","1172","1173","1174","1175","1176","1177","1178","1179","1180","1181","1182","1183","1184","1185","1186"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport {\n  getCountryByCode,\n  getEnabledCountries,\n} from \"../../../apis/countryApi\";\nimport \"../../../components/aidchannel/webmaster/OrganizationForm\";\nimport { AddExpert } from \"apis/userApi\";\nimport AddWebmaster from \"pages/superadmin/AddWebmaster\";\n\nconst DetailsProject = () => {\n  const history = useHistory();\n  const { codeCountry, idInterview } = useParams();\n  const [content, setContent] = useState(\"\");\n  const [country, setCountry] = useState(null);\n\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [optionscountry, setOptionscountry] = useState();\n\n  const { register, handleSubmit, setValue } = useForm();\n\n  const getDataFromApi = useCallback(async () => {});\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  return (\n    <div className=\"container\">\n      <form>\n        <div className=\"row pb-5\">\n          <div className=\"centralize mt-4 col-12 \">\n            <div className=\"input-block\">\n              <input\n                className=\"input-org-form\"\n                type=\"text\"\n                id=\"fullname\"\n                spellCheck=\"false\"\n                {...register(\"fullname\", {\n                  required: \"Name required\",\n                })}\n                // disabled={disabled}\n              />\n\n              <span className=\"placeholder\">Full Name</span>\n            </div>\n          </div>\n\n          <button\n            // onClick={handleSubmit(onSubmit)}\n            type=\"submit\"\n            className=\"btn btn-primary w-100 h-25 submit-login my-5 \"\n          >\n            Update Country\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default DetailsProject;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/superadmin/MtableProject.js",["1187","1188","1189","1190","1191","1192","1193","1194","1195"],"import React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { AiFillDelete, AiFillEdit, AiOutlineProfile } from \"react-icons/ai\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { FcCalendar } from \"react-icons/fc\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport { deleteProject } from \"apis/projectApi\";\n\nconst MTableProject = () => {\n  const tableRef = React.createRef();\n  const history = useHistory();\n  const { codeCountry } = useParams();\n\n  const reloadTableData = () => {\n    tableRef.current.onQueryChange();\n  };\n\n  return (\n    <div>\n      <MaterialTable\n        tableRef={tableRef}\n        title=\"List of Global Projects\"\n        columns={[\n          {\n            field: \"image_url\",\n            title: \"Image\",\n            render: (rowData) => (\n              <img\n                className=\"img-fluid\"\n                src={urlImageAdapter(rowData.image_url)}\n                style={{\n                  verticalAlign: \"middle\",\n                  width: \"50px\",\n                  height: \"50px\",\n                  borderRadius: \"50%\",\n                }}\n              />\n            ),\n            cellStyle: {\n              width: \"10%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Name\",\n            field: \"name\",\n            render: (rowData) => {\n              {\n                const name = rowData?.name;\n                // ? rowData\n                // : \"The name does not exist\";\n                return <p>{name}</p>;\n              }\n            },\n            cellStyle: {\n              width: \"80%\",\n              textAlign: \"center\",\n            },\n          },\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) => {\n            let url = `${process.env.REACT_APP_BACKEND}project/getAllProjectsByCountryNull?`;\n            url += \"limit=\" + query.pageSize;\n            url += \"&page=\" + (query.page + 1);\n            axios\n              .get(url, {\n                searchText: query.search,\n              })\n              .then((result) => {\n                resolve({\n                  data: result.data.data,\n                  page: result.data.page - 1,\n                  totalCount: result.data.totalCount,\n                });\n              });\n          })\n        }\n        options={{\n          filtering: false,\n          search: true,\n          sorting: false,\n          headerStyle: {\n            backgroundColor: \"#0069d9\",\n            textAlign: \"center\",\n            color: \"white\",\n          },\n          actionsColumnIndex: -1,\n        }}\n        actions={[\n          {\n            icon: \"refresh\",\n            tooltip: \"Refresh Data\",\n            isFreeAction: true,\n            onClick: () => tableRef.current && tableRef.current.onQueryChange(),\n          },\n          {\n            icon: () => <FaRegEdit size={30} color=\"#ffc107\" />,\n            tooltip: \"Edit Project\",\n            onClick: (event, project) => {\n              history.push(`/super-admin/details-project-null/${project?._id}`);\n            },\n          },\n          {\n            icon: () => (\n              <button className=\"btn btn-danger border-none shadow-none\">\n                Delete\n              </button>\n            ),\n            onClick: async (event, project) => {\n              if (\n                window.confirm(`Are you sure you wish to delete this project ?`)\n              ) {\n                try {\n                  await deleteProject(project._id);\n                  reloadTableData();\n                } catch (error) {\n                  console.log(error);\n                }\n              }\n            },\n          },\n        ]}\n      />\n    </div>\n  );\n};\n\nexport default MTableProject;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/superadmin/WebmasterForm.js",["1196","1197","1198","1199"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { AiFillFileAdd } from \"react-icons/ai\";\nimport Select from \"react-select\";\nimport {\n  getOneWebmaster,\n  AddWebmaster,\n  updateWebmaster,\n} from \"../../../apis/userApi\";\nimport {\n  getCountryByCode,\n  getEnabledCountries,\n} from \"../../../apis/countryApi\";\nimport \"../../../components/aidchannel/webmaster/OrganizationForm\";\n// import AddWebmaster from \"pages/superadmin/AddWebmaster\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\n\nconst AddWebmasterForm = () => {\n  const history = useHistory();\n  const { codeCountry, idWebmaster } = useParams();\n  const [webmasterImagePreview, setwebmasterImagePreview] = useState(null);\n  const [webmasterImage, setwebmasterImage] = useState();\n  const [country, setCountry] = useState(null);\n  const { register, handleSubmit, setValue } = useForm();\n\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [optionscountry, setOptionscountry] = useState();\n\n  const getDataFromApi = useCallback(async () => {\n    if (idWebmaster !== undefined) {\n      const webmaster = await getOneWebmaster(idWebmaster);\n      setValue(\"fullname\", webmaster?.fullname);\n      setValue(\"email\", webmaster?.email);\n      setValue(\"phone\", webmaster?.phone);\n      setwebmasterImagePreview(urlImageAdapter(webmaster?.image_url));\n    }\n\n    const country = await getEnabledCountries(codeCountry);\n    setOptionscountry(\n      country?.map((country) => {\n        return {\n          value: country._id,\n          label: country.name,\n        };\n      })\n    );\n  }, [idWebmaster, setValue]);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const onSubmit = async (data) => {\n    let formData = new FormData();\n    data.country = selectedOption?.value;\n    formData.append(\"role\", 1);\n    formData.append(\"email\", data.email);\n    formData.append(\"fullname\", data.fullname);\n    formData.append(\"phone\", data.phone);\n    //formData.append(\"country\", country._id);\n    if (webmasterImage !== undefined)\n      formData.append(\"image_url\", webmasterImage);\n\n    if (idWebmaster !== undefined) {\n      await updateWebmaster(idWebmaster, formData);\n    } else {\n      await AddWebmaster(formData);\n    }\n\n    history.push(`/super-admin/webMaster`);\n  };\n\n  const imagePreview = (e) => {\n    setwebmasterImagePreview(URL.createObjectURL(e.target.files[0]));\n    setwebmasterImage(e.target.files[0]);\n  };\n\n  const handleChangecountry = (selected) => {\n    setSelectedOption(selected);\n  };\n\n  return (\n    <div className=\"container\">\n      <form>\n        <div className=\"row pb-5\">\n          <div className=\"form-group m-auto\">\n            <label className=\"logo-file d-inline\" htmlFor=\"webMasterImage\">\n              {webmasterImagePreview && (\n                <img\n                  src={webmasterImagePreview}\n                  alt=\"avatar\"\n                  style={{ cursor: \"pointer\" }}\n                  width=\"15%\"\n                  height=\"15%\"\n                  className=\"avatar\"\n                />\n              )}\n              {!webmasterImagePreview && (\n                <span style={{ cursor: \"pointer\" }}>\n                  <AiFillFileAdd color=\"blue\" size={40} />\n                </span>\n              )}\n            </label>\n            <input\n              type=\"file\"\n              className=\"form-control-file ml-4 shadow-none logo-file d-none\"\n              id=\"webMasterImage\"\n              name=\"webMasterImage\"\n              onChange={imagePreview}\n              multiple={false}\n            />\n          </div>\n          <div className=\"centralize mt-4 col-12 \">\n            <div className=\"input-block\">\n              <input\n                className=\"input-org-form\"\n                type=\"text\"\n                id=\"fullname\"\n                spellCheck=\"false\"\n                {...register(\"fullname\", {\n                  required: \"Name required\",\n                })}\n              />\n              <span className=\"placeholder\">Full Name</span>\n            </div>\n          </div>\n\n          <div className=\"col-12  centralize mt-4\">\n            <div className=\"input-block\">\n              <input\n                className=\"input-org-form\"\n                type=\"text\"\n                id=\"email\"\n                spellCheck=\"false\"\n                {...register(\"email\", {\n                  required: \"Email Required\",\n                  pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                })}\n              />\n              <span className=\"placeholder\">Email</span>\n            </div>\n          </div>\n\n          <div className=\"col-12  centralize mt-4\">\n            <div className=\"input-block\">\n              <input\n                className=\"input-org-form\"\n                type=\"text\"\n                id=\"phone\"\n                spellCheck=\"false\"\n                {...register(\"phone\")}\n              />\n              <span className=\"placeholder\">Phone</span>\n            </div>\n          </div>\n          <div className=\"col-12  centralize mt-4\">\n            <Select\n              placeholder=\"Select the Country\"\n              value={selectedOption}\n              onChange={handleChangecountry}\n              options={optionscountry}\n            />\n          </div>\n          <button\n            onClick={handleSubmit(onSubmit)}\n            type=\"submit\"\n            className={\n              idWebmaster !== undefined\n                ? \"btn btn-warning w-100 h-25  py-3 my-5\"\n                : \"btn btn-primary w-100 h-25 py-3 my-5\"\n            }\n          >\n            {idWebmaster !== undefined ? \"Edit WebMaster\" : \"Add WebMaster\"}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default AddWebmasterForm;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/expert/SimpleMap.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/statusApi.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/helpers/sideBarSuperAdminData.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/ExpertArticleApi.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ExpertArticleDetails.js",["1200","1201"],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CardInfoDetails from \"../../components/aidchannel/general/CardInfoDetails\";\nimport { Link } from \"react-router-dom\";\nimport CountryHeader from \"../../components/layout/header/CountryHeader\";\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\n\nconst ExpertArticleDetails = (props) => {\n  const { codeCountry } = useParams();\n\n  const article = {\n    name: \"WOMEN ACHIEVING THEIR DREAMS\",\n    description:\n      \"PARTNERSHIPS AND PROJECTS Family Planning: Partnerships Partnerships The U.S. Agency for International Development (USAID) works with a wide range of public and private partners to accelerate development  and ensure we are using resources efficiently. USAID‚Äôs partnerships promote PARTNERSHIPS AND PROJECTS Family Planning: Partnerships Partnerships The U.S. Agency for International Development (USAID) works with a wide range of public and private partners to accelerate development  and ensure we are using resources efficiently. USAID‚Äôs partnerships promote PARTNERSHIPS AND PROJECTS Family Planning: Partnerships Partnerships The U.S. Agency for International Development (USAID) works with a wide range of public and private partners to accelerate development  and ensure we are using resources efficiently. USAID‚Äôs partnerships promote PARTNERSHIPS AND PROJECTS Family Planning: Partnerships Partnerships The U.S. Agency for International Development (USAID) works with a wide range of public and private partners to accelerate development  and ensure we are using resources efficiently. USAID‚Äôs partnerships promote PARTNERSHIPS AND PROJECTS Family Planning: Partnerships Partnerships The U.S. Agency for International Development (USAID) works with a wide range of public and private partners to accelerate development  and ensure we are using resources efficiently. USAID‚Äôs partnerships promote ...\",\n    image_url:\n      \"https://share.america.gov/wp-content/uploads/2021/03/USAID-Women-Leaders-Climate-Crisis-49534646426_44e4a8da7c_o.jpg\",\n  };\n\n  return (\n    <>\n      <CountryHeader />\n      <div className=\"container\">\n        <h1 className=\"heading_background  mt-5 mb-5 pb-3 pt-3\">\n          Expert's Article<span className=\"sub-heading\"> details</span>\n        </h1>\n        <CardInfoDetails data={article} />\n      </div>\n      <div className=\"row\">\n        <Link to={`/country/${codeCountry}`}>\n          <button className=\"btn-view-more\">Go Back</button>\n        </Link>\n      </div>\n      <PublicFooter />\n    </>\n  );\n};\n\nexport default ExpertArticleDetails;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ViewMoreExpertArticle.js",["1202","1203"],"import React, { useState, useRef } from \"react\";\nimport { useInfiniteQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport InputSearch from \"../../components/aidchannel/general/InputSearch\";\nimport PublicHeader from \"../../components/layout/header/PublicHeader\";\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\nimport { getAllTweetsByCountryPagination } from \"../../apis/twitterApi\";\nimport useIntersectionObserver from \"../../helpers/useIntersectionObserver\";\n\nimport CardInfo from \"../../components/aidchannel/general/CardInfo\";\n\nconst ViewMoreExpertArticle = () => {\n  const [searchText, setSearchText] = useState(\"\");\n  const { codeCountry } = useParams();\n  const [limit] = useState(9);\n  const loadMoreButtonRef = useRef();\n  const [test, setTest] = useState(false);\n\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n  } = useInfiniteQuery(\n    [codeCountry, limit, test],\n    getAllTweetsByCountryPagination,\n    {\n      getNextPageParam: (lastPage, pages) => {\n        if (lastPage.data.length === limit) return parseInt(lastPage.page) + 1;\n        return false;\n      },\n    }\n  );\n  useIntersectionObserver({\n    target: loadMoreButtonRef,\n    onIntersect: fetchNextPage,\n    enabled: hasNextPage,\n  });\n\n  const article = [\n    {\n      name: \"PARTNERSHIPS AND PROJECTS\",\n      description:\n        \"PARTNERSHIPS AND PROJECTS Family Planning: Partnerships Partnerships The U.S. Agency for International Development (USAID) works with a wide range of public and private partners to accelerate development  and ensure we are using resources efficiently. USAID‚Äôs partnerships promote ...\",\n      image_url:\n        \"https://assets.maccarianagency.com/the-front/photos/coworking/place3.jpg\",\n    },\n  ];\n\n  return (\n    <>\n      <PublicHeader />\n      <div className=\"container\">\n        <h1 className=\"heading my-4\">\n          More\n          <span className=\"sub-heading\"> Experts's Articles </span>\n        </h1>\n        <InputSearch\n          setSearchText={setSearchText}\n          searchText={searchText}\n          placeholder={`Search for expert's articles`}\n        />\n        <div className=\"row\">\n          {article.map((item, index) => (\n            <CardInfo key={index} data={item} index={index} />\n          ))}\n        </div>\n\n        <div style={{ marginTop: \"20px\" }}>\n          <button\n            ref={loadMoreButtonRef}\n            onClick={() => fetchNextPage()}\n            disabled={!hasNextPage || isFetchingNextPage}\n          >\n            {isFetchingNextPage\n              ? \"Loading more ....\"\n              : hasNextPage\n              ? \"Load More\"\n              : \"Nothing more to load\"}\n          </button>\n        </div>\n      </div>\n      <PublicFooter />\n    </>\n  );\n};\n\nexport default ViewMoreExpertArticle;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/RoadMap.js",["1204","1205","1206","1207"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Flag from \"react-world-flags\";\nimport { getCountryByCode } from \"../../apis/countryApi\";\nimport MtableExpert from \"../../components/aidchannel/webmaster/MtableExpert\";\n\nconst RoadMap = () => {\n  const history = useHistory();\n  const { codeCountry, idExpert } = useParams();\n  const [country, setCountry] = useState();\n\n  const getDataFromApi = useCallback(async () => {\n    const country = await getCountryByCode(codeCountry);\n    setCountry(country);\n  }, []);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  return (\n    <div className=\"container\">\n      {country && (\n        <>\n          <h1>\n            <Flag\n              code={codeCountry}\n              height=\"70\"\n              width=\"70\"\n              style={{ marginRight: \"2px\" }}\n              className=\"flag\"\n            />{\" \"}\n            Road Map\n          </h1>\n          <hr />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default RoadMap;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/AddTechnicalDetails.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/ImpactAccordion.js",["1208","1209"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel,\n} from \"react-accessible-accordion\";\nimport { useParams } from \"react-router-dom\";\n\n// Demo styles, see 'Styles' section below for some notes on use.\nimport \"react-accessible-accordion/dist/fancy-example.css\";\nimport {\n  addImpactApi,\n  getImpactsByProject,\n  getProjectImpactsAllData,\n} from \"apis/impactApi\";\nimport OutComeAccordion from \"./OutComeAccordion\";\n\nconst ImpactAccordion = ({ outcomes, outputs, activities }) => {\n  const { idProject } = useParams();\n  const [impacts, setImpacts] = useState([]);\n  const [impactContent, setImpactContent] = useState(\"\");\n\n  const getDataFromApi = useCallback(async () => {\n    const impacts = await getProjectImpactsAllData(idProject);\n    setImpacts(impacts);\n  }, []);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const addImpact = async (e) => {\n    e.preventDefault();\n    if (impactContent !== \"\") {\n      const newImpact = { content: impactContent, project: idProject };\n      const imp = await addImpactApi(newImpact);\n      setImpacts([...impacts, imp]);\n      setImpactContent(\"\");\n    }\n  };\n\n  return (\n    <>\n      {impacts && (\n        <Accordion>\n          <form className=\"form-inline m-3\">\n            <div className=\"form-group mb-2\"></div>\n            <div className=\"form-group mx-sm-3 mb-2\">\n              <input\n                value={impactContent}\n                onChange={(e) => setImpactContent(e.target.value)}\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                placeholder=\"Enter Impact\"\n              />\n            </div>\n            <button\n              onClick={addImpact}\n              className=\"btn btn-primary mb-2 shadow-none\"\n            >\n              Add impact\n            </button>\n          </form>\n          {impacts?.map((impact, index) => (\n            <AccordionItem key={index}>\n              <AccordionItemHeading>\n                <AccordionItemButton>{impact?.content}</AccordionItemButton>\n              </AccordionItemHeading>\n              <AccordionItemPanel>\n                <OutComeAccordion impact={impact} />\n              </AccordionItemPanel>\n            </AccordionItem>\n          ))}\n        </Accordion>\n      )}\n    </>\n  );\n};\n\nexport default ImpactAccordion;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/OutComeAccordion.js",["1210"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel,\n} from \"react-accessible-accordion\";\n\n// Demo styles, see 'Styles' section below for some notes on use.\nimport \"react-accessible-accordion/dist/fancy-example.css\";\nimport OutPutAccordion from \"./OutPutAccordion\";\nimport { addOutComeApi } from \"apis/outComeApi\";\n\nconst OutComeAccordion = ({ impact }) => {\n  const [outComeContent, setOutComeContent] = useState(\"\");\n  const [outcomes, setOutcomes] = useState([]);\n\n  useEffect(() => {\n    if (impact.outcomes !== undefined) setOutcomes(impact?.outcomes);\n  }, []);\n\n  const addOutCome = async (e) => {\n    e.preventDefault();\n    if (outComeContent !== \"\") {\n      const newOutcome = { content: outComeContent, impact: impact?._id };\n      const outcom = await addOutComeApi(newOutcome);\n      setOutcomes([...outcomes, outcom]);\n      setOutComeContent(\"\");\n    }\n  };\n  return (\n    <div>\n      <Accordion>\n        <form className=\"form-inline m-3\">\n          <div className=\"form-group mb-2\"></div>\n          <div className=\"form-group mx-sm-3 mb-2\">\n            <input\n              value={outComeContent}\n              onChange={(e) => setOutComeContent(e.target.value)}\n              placeholder=\"Enter Outcome\"\n              type=\"text\"\n              className=\"form-control shadow-none\"\n            />\n          </div>\n          <button\n            onClick={addOutCome}\n            className=\"btn btn-warning mb-2 shadow-none\"\n          >\n            Add OutCome\n          </button>\n        </form>\n\n        {outcomes?.map((outcome, index) => (\n          <AccordionItem key={index}>\n            <AccordionItemHeading>\n              <AccordionItemButton>{outcome?.content}</AccordionItemButton>\n            </AccordionItemHeading>\n            <AccordionItemPanel>\n              <OutPutAccordion outcome={outcome} />\n            </AccordionItemPanel>\n          </AccordionItem>\n        ))}\n      </Accordion>\n    </div>\n  );\n};\n\nexport default OutComeAccordion;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/impactApi.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/OutPutAccordion.js",["1211"],"import { addOutPutApi } from \"apis/outPutApi\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel,\n} from \"react-accessible-accordion\";\n\n// Demo styles, see 'Styles' section below for some notes on use.\nimport \"react-accessible-accordion/dist/fancy-example.css\";\nimport ActivityAccordion from \"./ActivityAccordion\";\n\nconst OutPutAccordion = ({ outcome }) => {\n  const [outPutContent, setOutPutContent] = useState(\"\");\n  const [outputs, setOutputs] = useState([]);\n\n  useEffect(() => {\n    if (outcome?.outputs !== undefined) setOutputs(outcome?.outputs);\n  }, []);\n\n  const addOutPut = async (e) => {\n    e.preventDefault();\n    if (outPutContent !== \"\") {\n      const newOutput = { content: outPutContent, outCome: outcome?._id };\n      const output = await addOutPutApi(newOutput);\n      setOutputs([...outputs, output]);\n      setOutPutContent(\"\");\n    }\n  };\n\n  return (\n    <div>\n      <Accordion>\n        <form className=\"form-inline m-3\">\n          <div className=\"form-group mb-2\"></div>\n          <div className=\"form-group mx-sm-3 mb-2\">\n            <input\n              value={outPutContent}\n              onChange={(e) => setOutPutContent(e.target.value)}\n              placeholder=\"Enter OutPut\"\n              type=\"text\"\n              className=\"form-control shadow-none\"\n            />\n          </div>\n          <button\n            onClick={addOutPut}\n            className=\"btn btn-danger mb-2 shadow-none\"\n          >\n            Add OutPut\n          </button>\n        </form>\n\n        {outputs?.map((output, index) => (\n          <AccordionItem key={index}>\n            <AccordionItemHeading>\n              <AccordionItemButton>{output?.content}</AccordionItemButton>\n            </AccordionItemHeading>\n            <AccordionItemPanel>\n              <ActivityAccordion output={output} />\n            </AccordionItemPanel>\n          </AccordionItem>\n        ))}\n      </Accordion>\n    </div>\n  );\n};\n\nexport default OutPutAccordion;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/outComeApi.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/ActivityAccordion.js",["1212"],"import React, { useState, useEffect } from \"react\";\nimport { addActivityApi } from \"apis/activityApi\";\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel,\n} from \"react-accessible-accordion\";\n\n// Demo styles, see 'Styles' section below for some notes on use.\nimport \"react-accessible-accordion/dist/fancy-example.css\";\n\nconst ActivityAccordion = ({ output }) => {\n  const [activityContent, setActivityContent] = useState(\"\");\n  const [activities, setActivities] = useState([]);\n\n  useEffect(() => {\n    if (output?.activities !== undefined) setActivities(output?.activities);\n  }, []);\n\n  const addActivity = async (e) => {\n    e.preventDefault();\n    if (activityContent !== \"\") {\n      const newActivity = { content: activityContent, outPut: output?._id };\n      const activity = await addActivityApi(newActivity);\n      setActivities([...activities, activity]);\n      setActivityContent(\"\");\n    }\n  };\n  return (\n    <div>\n      <Accordion>\n        <form className=\"form-inline m-3\">\n          <div className=\"form-group mb-2\"></div>\n          <div className=\"form-group mx-sm-3 mb-2\">\n            <input\n              value={activityContent}\n              onChange={(e) => setActivityContent(e.target.value)}\n              placeholder=\"Enter Activity\"\n              type=\"text\"\n              className=\"form-control shadow-none\"\n            />\n          </div>\n          <button\n            onClick={addActivity}\n            className=\"btn btn-success mb-2 shadow-none\"\n          >\n            Add Activity\n          </button>\n        </form>\n\n        {activities?.map((activity) => (\n          <AccordionItem>\n            <AccordionItemHeading>\n              <AccordionItemButton>{activity?.content}</AccordionItemButton>\n            </AccordionItemHeading>\n            <AccordionItemPanel>\n              {/*  <input placeholder=\"text\" type=\"text\" />\n             <button>Edit Activity</button>*/}\n            </AccordionItemPanel>\n          </AccordionItem>\n        ))}\n      </Accordion>\n    </div>\n  );\n};\n\nexport default ActivityAccordion;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/outPutApi.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/EditTechnicalDetails.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/ValidationProjects.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/ListProjectsValides.js",["1213","1214","1215","1216","1217"],"import Flag from \"react-world-flags\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport MTableProject from \"../../components/aidchannel/webmaster/MTableProject\";\nimport { getAllProjectsByCountry } from \"../../apis/projectApi\";\n\nimport TableProjectAccepted from \"components/aidchannel/webmaster/TableProjectAccepted\";\n\nconst ListProjectsValides = () => {\n  const { codeCountry, multimedia } = useParams();\n  const history = useHistory();\n  const [projects, setprojects] = useState([]);\n  const getDataFromApi = useCallback(async () => {\n    const project = await getAllProjectsByCountry(codeCountry);\n    setprojects(project?.reverse());\n  }, [codeCountry]);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  return (\n    <div className=\"container\">\n      <>\n        <button\n          onClick={() => history.push(`/web-master/add-project/${codeCountry}`)}\n          className=\"btn btn-primary ml-3 my-3 shadow-none border-none\"\n        >\n          Add\n        </button>\n        <TableProjectAccepted />\n      </>\n    </div>\n  );\n};\n\nexport default ListProjectsValides;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/TableProjectAccepted.js",["1218","1219","1220","1221","1222"],"import React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { AiFillDelete, AiFillEdit } from \"react-icons/ai\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { FcCalendar } from \"react-icons/fc\";\nimport { CgDetailsMore } from \"react-icons/cg\";\nimport { BiShow } from \"react-icons/bi\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport axios from \"axios\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport { deleteProject } from \"apis/projectApi\";\n\nconst TableProjectAccepted = () => {\n  const tableRef = React.createRef();\n  const history = useHistory();\n  const { codeCountry, multimedia1 } = useParams();\n\n  const reloadTableData = () => {\n    tableRef.current.onQueryChange();\n  };\n\n  return (\n    <div>\n      <MaterialTable\n        tableRef={tableRef}\n        title=\"List of Projects Accepted\"\n        columns={[\n          {\n            field: \"image_url\",\n            title: \"Image\",\n            render: (rowData) => (\n              <img\n                className=\"img-fluid\"\n                src={urlImageAdapter(rowData.image_url)}\n                style={{\n                  verticalAlign: \"middle\",\n                  width: \"50px\",\n                  height: \"50px\",\n                  borderRadius: \"50%\",\n                }}\n              />\n            ),\n            cellStyle: {\n              width: \"10%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Name\",\n            field: \"name\",\n            cellStyle: {\n              width: \"40%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Thematique\",\n            field: \"thematique.name\",\n            cellStyle: {\n              width: \"20%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Total Cost\",\n            field: \"total_cost\",\n            type: \"numeric\",\n            cellStyle: {\n              width: \"15%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Project of the month\",\n            field: \"project_of_month\",\n            cellStyle: {\n              width: \"15%\",\n              textAlign: \"center\",\n            },\n          },\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) => {\n            let url = `${process.env.REACT_APP_BACKEND}project/projectsAccepted/${codeCountry}?`;\n            url += \"limit=\" + query.pageSize;\n            url += \"&page=\" + (query.page + 1);\n            axios\n              .post(url, {\n                searchText: query.search,\n              })\n              .then((result) => {\n                resolve({\n                  data: result.data.data,\n                  page: result.data.page - 1,\n                  totalCount: result.data.totalCount,\n                });\n              });\n          })\n        }\n        options={{\n          filtering: false,\n          search: true,\n          sorting: false,\n          headerStyle: {\n            backgroundColor: \"#0069d9\",\n            textAlign: \"center\",\n            color: \"white\",\n          },\n          actionsColumnIndex: -1,\n        }}\n        actions={[\n          {\n            icon: \"refresh\",\n            tooltip: \"Refresh Data\",\n            isFreeAction: true,\n            onClick: () => tableRef.current && tableRef.current.onQueryChange(),\n          },\n          {\n            icon: () => <FaRegEdit size={30} color=\"#ffc107\" />,\n            tooltip: \"Edit Project\",\n            onClick: (event, project) => {\n              history.push(\n                `/web-master/edit-project/${codeCountry}/${project?._id}`\n                // `/web-master/edit-project/${multimedia1}/${codeCountry}/${project?._id}`\n              );\n            },\n          },\n\n          {\n            icon: () => <FcCalendar size={30} />,\n            tooltip: \"Project of the month\",\n            onClick: (event, project) => {\n              history.push(\n                `/web-master/projectofthemonth/${codeCountry}/${project._id}`\n              );\n            },\n          },\n          {\n            icon: () => <CgDetailsMore size={30} />,\n            tooltip: \"Technical details\",\n            onClick: (event, project) => {\n              history.push(\n                `/web-master/technicaldetails/${codeCountry}/${project._id}/graph`\n              );\n            },\n          },\n          {\n            icon: () => <BiShow size={30} />,\n            tooltip: \"Show in Browser\",\n            onClick: (event, project) => {\n              window.open(\n                `${process.env.REACT_APP_FRONT}projectdetails/${project._id}`,\n                \"_blank\"\n              );\n            },\n          },\n          {\n            icon: () => <AiFillDelete size={30} color=\"red\" />,\n            tooltip: \"Delete Project\",\n            onClick: async (event, project) => {\n              if (\n                window.confirm(\n                  `Are you sure you wish to delete ${project.name} ?`\n                )\n              ) {\n                try {\n                  await deleteProject(project._id);\n                  reloadTableData();\n                } catch (error) {\n                  console.log(error);\n                }\n              }\n            },\n          },\n        ]}\n      />\n    </div>\n  );\n};\n\nexport default TableProjectAccepted;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ArticleSearch.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/ArticlesValides.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/ValidationArticles.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/articles/ArticleCard.js",["1223"],"import React from \"react\";\n\n\nimport \"./ArticleCard.css\";\n\nconst ArticleCard = ({ article }) => {\n  return (\n    <div >\n      {article && (\n        < >\n          <h2 className=\"font-bold text-2xl mb-2\">{article?.article_title}</h2>\n          <a href={article?.article_url} target=\"_blank\">\n            Click to See more Details\n          </a>\n        </>\n      )}\n    </div>\n  );\n};\nexport default ArticleCard;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/articleApi.js",["1224"],"import { getRequest, putRequest, postRequest } from \".\";\n\nexport const getAllArticlesByCountryPagination = async ({\n  pageParam = 1,\n  queryKey,\n}) => {\n  const [codeCountry, limit] = queryKey;\n  try {\n    const { data } = await getRequest(\n      `article/articlesByCountry/${codeCountry}?limit=${limit}&page=${pageParam}`\n    );\n    return { data: data.data, page: pageParam };\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getArticlesByCountry = async (codeCountry, limit, page) => {\n  try {\n    const { data } = await getRequest(\n      `article/articlesByCountry/${codeCountry}?limit=${limit}&page=${page}`\n    );\n    return data?.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const acceptArticle = async (articleId) => {\n  try {\n    await putRequest(`article/acceptArticle/${articleId}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const refuseArticle = async (articleId) => {\n  try {\n    await putRequest(`article/refuseArticle/${articleId}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getArticlesAccepted = async ({ pageParam = 1, queryKey }) => {\n  const [codeCountry, limit] = queryKey;\n  try {\n    const { data } = await getRequest(\n      `article/ArticlesAccepted/${codeCountry}`\n    );\n    return { data: data.data, page: pageParam };\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getArticlesbyKeyword = async ({ pageParam = 1, queryKey }) => {\n  const [search, limitPage, codeCountry] = queryKey;\n  const { data } = await postRequest(\n    `article/searchByKeyword?limit=${limitPage}&page=${pageParam}`,\n    {\n      searchText: search,\n      code: codeCountry,\n    }\n  );\n\n  return { data: data.data, page: pageParam };\n};\nexport const getArticleAcceptedByCountry = async (codeCountry, limit, page) => {\n  try {\n    const { data } = await getRequest(\n      `article/ArticlesAccepted/${codeCountry}?limit=${limit}&page=${page}`\n    );\n    return data?.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getNumberArticlesByCountry = async (codeCountry) => {\n  try {\n    const res = await getRequest(`article/numberByCodeCountry/${codeCountry}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getarticlesScrolling = async ({ pageParam = 1, queryKey }) => {\n  const [search, codeCountry, limitPage] = queryKey;\n  const {\n    data,\n  } = await postRequest(\n    `article/articlesOfCountry?limit=${limitPage}&page=${pageParam}`,\n    { code: codeCountry, searchText: search }\n  );\n  return { data: data?.data, page: pageParam };\n};\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/EditGraphTechnicalDetails.js",["1225","1226","1227","1228","1229","1230"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Tree from \"react-tree-graph\";\nimport Modal from \"react-modal\";\nimport { getProjectImpactsAllData } from \"apis/impactApi\";\nimport \"react-tree-graph/dist/style.css\";\nimport \"./EditGraphTechnicalDetails.css\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\nModal.setAppElement(\"#root\");\n\nconst EditGraphTechnicalDetails = () => {\n  const { idProject } = useParams();\n  const [impacts, setImpacts] = useState([]);\n  const [data, setData] = useState({});\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [selectedNode, setSelectedNode] = useState();\n\n  const getDataFromApi = useCallback(async () => {\n    const impacts = await getProjectImpactsAllData(idProject);\n    const head = impacts[0];\n    //head.outcomes.outputs.children = head?.outcomes?.outputs?.activities;\n    //  head.outcomes.children = head?.outcomes?.outputs;\n    if (head !== undefined) {\n      head.children = head?.outcomes;\n      head.textProps = { x: 0, y: 50 };\n      head.children.map((item) => {\n        item.children = item.outputs;\n        item.textProps = { x: -25, y: 25 };\n      });\n      head.children.map((item) => {\n        item.children.map((act) => {\n          act.children = act.activities;\n          act.textProps = { x: -25, y: 25 };\n        });\n      });\n      setData(head);\n    }\n  }, []);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  function handleClick(event, node) {\n    console.log(event, \"event\");\n    setSelectedNode(node);\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n  return (\n    <>\n      <div>\n        <Tree\n          gProps={{\n            className: \"node\",\n            onClick: handleClick,\n          }}\n          animated={true}\n          keyProp=\"_id\"\n          labelProp=\"content\"\n          nodeProps={{\n            r: 10,\n          }}\n          //   getChildren={(node) => console.log(node.children)}\n          data={data}\n          height={500}\n          width={900}\n          nodeShape=\"circle\"\n          svgProps={{\n            className: \"custom\",\n          }}\n        />\n      </div>\n      <div>\n        <Modal\n          isOpen={modalIsOpen}\n          onRequestClose={closeModal}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n          <h2>Edit</h2>\n          <h4>id:{selectedNode}</h4>\n          <input type=\"text\" placeholder=\"Name\" />\n          <button>Edit</button>\n          <button onClick={closeModal}>close</button>\n        </Modal>\n      </div>\n    </>\n  );\n};\n\nexport default EditGraphTechnicalDetails;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/superadmin/ListCountryEnabled.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/layout/superadmin/CountryEnabled.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/superadmin/ListCountryDisabled.js",["1231","1232"],"import {\n  disableCountryApi,\n  enableCountryAPi,\n  getDisabledCountries,\n  getEnabledCountries,\n} from \"apis/countryApi\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\n// import ListCountryDisabled from \"./ListCountryDisabled\";\nimport Select from \"react-select\";\n\nconst ListCountryDisabled = (props) => {\n  const [selectedEnableCountry, setSelectedEnableCountry] = useState(null);\n  const [selectedDisableCountry, setSelectedDisableCountry] = useState(null);\n  const [optionsEnabledcountries, setOptionsEnabledcountries] = useState();\n  const [optionsDisabledcountries, setOptionsDisabledcountries] = useState();\n  const [refresh, setRefresh] = useState(false);\n\n  const getDataFromApi = useCallback(async () => {\n    const enabledCountries = await getEnabledCountries();\n    setOptionsDisabledcountries(\n      enabledCountries\n        ?.map((country) => {\n          return {\n            value: country._id,\n            label: country.name,\n          };\n        })\n        .sort((country1, country2) =>\n          country1?.label?.localeCompare(country2?.label)\n        )\n    );\n    const disabledCountries = await getDisabledCountries();\n    setOptionsEnabledcountries(\n      disabledCountries\n        ?.map((country) => {\n          return {\n            value: country._id,\n            label: country.name,\n          };\n        })\n        .sort((country1, country2) =>\n          country1?.label?.localeCompare(country2?.label)\n        )\n    );\n  }, []);\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi, refresh]);\n\n  const handleChangeEnableCountry = (selected) => {\n    setSelectedEnableCountry(selected);\n  };\n  const handleChangeDisableCountry = (selected) => {\n    setSelectedDisableCountry(selected);\n  };\n\n  const enableCountry = async () => {\n    await enableCountryAPi(selectedEnableCountry?.value);\n    setSelectedEnableCountry(null);\n    setRefresh(!refresh);\n  };\n  const disableCountry = async () => {\n    await disableCountryApi(selectedDisableCountry?.value);\n    setRefresh(!refresh);\n    setSelectedDisableCountry(null);\n  };\n  return (\n    <div>\n      <div className=\"container\">\n        <>\n          <h1>Countries</h1>\n        </>\n        <div className=\"row mt-5\">\n          <div className=\"col-12 col-md-8 mb-3\">\n            <Select\n              placeholder=\"Choice Country\"\n              value={selectedEnableCountry}\n              onChange={handleChangeEnableCountry}\n              options={optionsEnabledcountries}\n            />\n          </div>\n          <div className=\"col-12 col-md-4\">\n            <button\n              className=\"btn btn-success shadow-none\"\n              onClick={enableCountry}\n            >\n              Enable\n            </button>\n          </div>\n        </div>\n        <div className=\"row mt-5\">\n          <div className=\"col-12 col-md-8 mb-3\">\n            <Select\n              placeholder=\"Choice Country\"\n              value={selectedDisableCountry}\n              onChange={handleChangeDisableCountry}\n              options={optionsDisabledcountries}\n            />\n          </div>\n          <div className=\"col-12 col-md-4\">\n            <button\n              className=\"btn btn-danger shadow-none\"\n              onClick={disableCountry}\n            >\n              Disable\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ListCountryDisabled;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/activityApi.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/helpers/constants.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/TechnicalDetailsCanvas.js",["1233","1234","1235","1236","1237","1238","1239","1240","1241","1242","1243","1244","1245","1246","1247","1248","1249","1250","1251","1252","1253","1254","1255"],"import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport {\n  addImpactApi,\n  deleteGraphApi,\n  deleteImpactApi,\n  getImpactsByProject,\n  updateImpactApi,\n} from \"apis/impactApi\";\nimport MultiSelectGraph from \"pages/webmaster/MultiSelectGraph\";\nimport Graph from \"react-graph-vis\";\nimport Modal from \"react-modal\";\nimport Select from \"react-select\";\nimport { useParams } from \"react-router-dom\";\nimport { useMediaQuery } from \"react-responsive\";\nimport {\n  addOutComeApi,\n  deleteOutComeApi,\n  getOutComeApi,\n  updateOutcomeApi,\n} from \"apis/outComeApi\";\nimport {\n  addOutPutApi,\n  deleteOutPutApi,\n  getOutPutApi,\n  updateOutputApi,\n} from \"apis/outPutApi\";\nimport {\n  addActivityApi,\n  deleteActivityApi,\n  getActivityApi,\n  updateActivityApi,\n} from \"apis/activityApi\";\n\nModal.setAppElement(\"#root\");\n\nfunction TechnicalDetailsCanvas() {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [editModalIsOpen, setEditModalIsOpen] = useState(false);\n  const [selectedType, setSelectedType] = useState(null);\n  const [displayNodeType, setDisplayNodeType] = useState(null);\n  const [parentNode, setParantNode] = useState([]);\n  const [count, setCount] = useState(200);\n  const [name, setName] = useState(\"\");\n  const [selectedParents, setSelectedParents] = useState(\"\");\n  const [selectedNode, setSelectedNode] = useState();\n  const [refresh, setRefresh] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [eventNodes, setEventNode] = useState();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [graph, setGraph] = useState({\n    nodes: [],\n    edges: [],\n  });\n\n  const divRef = useRef(null);\n\n  const sm = useMediaQuery({\n    query: \"(max-width: 700px)\",\n  });\n\n  const customStyles = {\n    content: {\n      top: \"50%\",\n      left: \"50%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      marginRight: \"-50%\",\n      transform: \"translate(-50%, -50%)\",\n      width: sm ? \"75%\" : \"60%\",\n      height: \"75%\",\n    },\n  };\n\n  const { idProject } = useParams();\n\n  const getDataFromApi = useCallback(async () => {\n    const { impacts } = await getImpactsByProject(idProject);\n    const impactsIds = impacts?.map((impact) => impact?._id);\n    const { outcomes } = await getOutComeApi(impactsIds);\n    const outcomesIds = outcomes?.map((outcome) => outcome?._id);\n    const { outputs } = await getOutPutApi(outcomesIds);\n    const outputsIds = outputs?.map((output) => output?._id);\n    const { activities } = await getActivityApi(outputsIds);\n\n    let nodes = [];\n    let edges = [];\n    impacts?.map((impact) => {\n      nodes.push({\n        ...impact,\n        ...{\n          id: impact?._id,\n          level: 0,\n          margin: 20,\n          shape: \"box\",\n          color: \"#34495E\",\n          font: {\n            color: \"white\",\n          },\n        },\n      });\n    });\n    outcomes?.map((outcome) => {\n      nodes.push({\n        ...outcome,\n        ...{\n          id: outcome?._id,\n          level: 1,\n          margin: 20,\n          shape: \"box\",\n          color: \"#3f51b5\",\n          font: {\n            color: \"white\",\n          },\n        },\n      });\n    });\n\n    outcomes?.map((outcome) => {\n      outcome?.impacts?.map((impactId) => {\n        edges.push({ from: impactId, to: outcome?._id });\n      });\n    });\n\n    outputs?.map((output) => {\n      nodes.push({\n        ...output,\n        ...{\n          id: output?._id,\n          level: 2,\n          margin: 20,\n          shape: \"box\",\n          color: \"#1ABC9C\",\n          font: {\n            color: \"white\",\n          },\n        },\n      });\n    });\n\n    outputs?.map((output) => {\n      output?.outComes?.map((outcomeId) => {\n        edges.push({ from: outcomeId, to: output?._id });\n      });\n    });\n    console.log(activities, \"activities\");\n    activities?.map((activity) => {\n      nodes.push({\n        ...activity,\n        ...{\n          id: activity?._id,\n          level: 3,\n          margin: 20,\n          shape: \"box\",\n          color: \"#DC7633\",\n          font: {\n            color: \"white\",\n          },\n        },\n      });\n    });\n\n    activities?.map((activity) => {\n      activity?.outPuts?.map((outputId) => {\n        edges.push({ from: outputId, to: activity?._id });\n      });\n    });\n    setGraph({\n      ...graph,\n      nodes: nodes,\n      edges: edges,\n    });\n  }, []);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi, refresh]);\n\n  const options = {\n    layout: {\n      hierarchical: true,\n    },\n    edges: {\n      color: \"#000000\",\n    },\n    interaction: {\n      zoomView: false,\n    },\n    physics: {\n      forceAtlas2Based: {\n        gravitationalConstant: -26,\n        centralGravity: 0.005,\n        springLength: 230,\n        springConstant: 0.18,\n      },\n      maxVelocity: 146,\n      solver: \"forceAtlas2Based\",\n      timestep: 0.35,\n      stabilization: {\n        enabled: true,\n        iterations: 2000,\n        updateInterval: 25,\n      },\n    },\n\n    height: \"500px\",\n  };\n\n  const initialiseGraph = () => {\n    setGraph({\n      nodes: [],\n      edges: [],\n    });\n  };\n\n  const events = {\n    select: (event) => {\n      var { nodes, edges } = event;\n      const selected = graph.nodes?.filter((node) => {\n        if (node?.id == nodes) return true;\n        return false;\n      });\n      setSelectedNode(selected[0]);\n      setOpenDialog(true);\n      divRef.current.style.position = \"absolute\";\n      divRef.current.style.left = event.pointer.DOM.x + 60 + \"px\";\n      divRef.current.style.top = event.pointer.DOM.y + 125 + \"px\";\n\n      setEventNode(nodes);\n    },\n  };\n  const deleteNode = async () => {\n    setOpenDialog(false);\n    if (\n      window.confirm(`Are you sure you wish to delete ${selectedNode?.label} ?`)\n    ) {\n      if (selectedNode?.type === \"impact\")\n        await deleteImpactApi(selectedNode?.id);\n      else if (selectedNode?.type === \"outcome\")\n        await deleteOutComeApi(selectedNode?.id);\n      else if (selectedNode?.type === \"output\")\n        await deleteOutPutApi(selectedNode?.id);\n      else if (selectedNode?.type === \"activity\")\n        await deleteActivityApi(selectedNode?.id);\n      setRefresh(!refresh);\n    }\n  };\n  const editNode = () => {\n    var nodes = eventNodes;\n    setOpenDialog(false);\n    setEditModalIsOpen(true);\n\n    setName(selectedNode?.label);\n    const selectType = typeOptions.filter((type) => {\n      if (type?.value === selectedNode?.type) return true;\n      return false;\n    });\n    setSelectedType(selectType[0]);\n    if (selectedNode?.type !== \"impact\") {\n      let parents = [];\n      if (selectedNode?.type === \"outcome\") {\n        parents = graph?.nodes\n          .filter((node) => {\n            if (\n              selectedNode?.impacts?.includes(node?.id) === true &&\n              node?.type === \"impact\"\n            )\n              return true;\n            return false;\n          })\n          .map((node) => {\n            return { value: node?.id, label: node?.label };\n          });\n      } else if (selectedNode?.type === \"output\") {\n        parents = graph?.nodes\n          .filter((node) => {\n            if (\n              selectedNode?.outComes?.includes(node?.id) === true &&\n              node?.type === \"outcome\"\n            )\n              return true;\n            return false;\n          })\n          .map((node) => {\n            return { value: node?.id, label: node?.label };\n          });\n      } else if (selectedNode?.type === \"activity\") {\n        parents = graph?.nodes\n          .filter((node) => {\n            if (\n              selectedNode?.outPuts?.includes(node?.id) === true &&\n              node?.type === \"output\"\n            )\n              return true;\n            return false;\n          })\n          .map((node) => {\n            return { value: node?.id, label: node?.label };\n          });\n      }\n\n      setSelectedParents(parents);\n    }\n    setEdit(true);\n    setModalIsOpen(true);\n  };\n\n  function closeModal() {\n    setModalIsOpen(false);\n    setEdit(false);\n    setName(\"\");\n    setSelectedType(null);\n    setSelectedParents([]);\n  }\n  function closeEditModal() {\n    setEditModalIsOpen(false);\n  }\n  const typeOptions = [\n    { value: \"impact\", label: \"Impact\" },\n    { value: \"outcome\", label: \"OutCome\" },\n    { value: \"output\", label: \"OutPut\" },\n    { value: \"activity\", label: \"Activity\" },\n  ];\n\n  const handleTypeChange = (selectedOption) => {\n    setSelectedType(selectedOption);\n  };\n\n  const filtredTypes = (typenode) => {\n    let type;\n    if (typenode === \"outcome\") type = \"impact\";\n    if (typenode === \"output\") type = \"outcome\";\n    if (typenode === \"activity\") type = \"output\";\n    const nodeType = graph?.nodes?.filter((node) => {\n      if (node?.type === type) return true;\n      return false;\n    });\n    return nodeType.map((nodetyp) => {\n      return {\n        value: nodetyp?.id,\n        label: nodetyp?.label,\n      };\n    });\n  };\n\n  const addNode = async (parents) => {\n    let level = 4;\n    let color = \"black\";\n    let node = {};\n    // if (edit) {\n    //   if (selectedNode?.type === \"impact\") {\n    //     await deleteImpactApi(selectedNode?.id);\n    //   }\n    // }\n    if (selectedType?.value === \"impact\") {\n      level = 0;\n      color = \"#34495E\";\n      const impact = { label: name, project: idProject };\n      //initialiseGraph();\n      if (edit) {\n        node = await updateImpactApi(selectedNode?.id, impact);\n      } else {\n        node = await addImpactApi(impact);\n      }\n\n      //setRefresh(!refresh);\n    } else if (selectedType?.value === \"outcome\") {\n      level = 1;\n      color = \"#3f51b5\";\n      const impacts = selectedParents?.map((parent) => parent?.value);\n      const outcome = { label: name, impacts };\n      //initialiseGraph();\n      if (edit) {\n        node = await updateOutcomeApi(selectedNode?.id, outcome);\n      } else {\n        node = await addOutComeApi(outcome);\n      }\n\n      //setRefresh(!refresh);\n    }\n    if (selectedType?.value === \"output\") {\n      level = 2;\n      color = \"#1ABC9C\";\n      const outComes = selectedParents?.map((parent) => parent?.value);\n      const output = { label: name, outComes };\n      //initialiseGraph();\n      if (edit) {\n        node = await updateOutputApi(selectedNode?.id, output);\n      } else {\n        node = await addOutPutApi(output);\n      }\n\n      //setRefresh(!refresh);\n    }\n    if (selectedType?.value === \"activity\") {\n      level = 3;\n      color = \"#DC7633\";\n      const outPuts = selectedParents?.map((parent) => parent?.value);\n      const activity = { label: name, outPuts };\n      //initialiseGraph();\n      if (edit) {\n        node = await updateActivityApi(selectedNode?.id, activity);\n      } else {\n        node = await addActivityApi(activity);\n      }\n\n      //setRefresh(!refresh);\n    }\n    let edges = [];\n    if (selectedType?.value !== \"impact\") {\n      edges = selectedParents?.map((parent) => {\n        return { from: parent?.value, to: node?._id };\n      });\n    }\n    if (edit) {\n      const newNodes = graph?.nodes?.filter((node) => {\n        if (node?.id === selectedNode?.id) return false;\n        return true;\n      });\n      let newEdges = graph?.edges;\n      if (selectedNode?.type !== \"impact\") {\n        newEdges = graph?.edges?.filter((edge) => {\n          if (edge?.to === selectedNode?.id) return false;\n          return true;\n        });\n      }\n\n      setGraph({\n        ...graph,\n        nodes: [\n          ...newNodes,\n          {\n            id: node?._id,\n            level: level,\n            label: name,\n            type: selectedType?.value,\n            title: \"node 4 tootip text\",\n            margin: 20,\n            shape: \"box\",\n            color: color,\n            font: {\n              color: \"white\",\n            },\n            ...node,\n          },\n        ],\n        edges: [...newEdges, ...edges],\n      });\n    } else {\n      setGraph({\n        ...graph,\n        nodes: [\n          ...graph?.nodes,\n          {\n            id: node?._id,\n            level: level,\n            label: name,\n            type: selectedType?.value,\n            title: \"node 4 tootip text\",\n            margin: 20,\n            shape: \"box\",\n            color: color,\n            font: {\n              color: \"white\",\n            },\n            ...node,\n          },\n        ],\n        edges: [...graph?.edges, ...edges],\n      });\n    }\n  };\n  const resetGraph = async () => {\n    if (window.confirm(`Are you sure you wish to reset the graph`)) {\n      setGraph({\n        nodes: [],\n        edges: [],\n      });\n      await deleteGraphApi(idProject);\n    }\n  };\n\n  return (\n    <div className=\"container mt-3\">\n      <button\n        className=\"btn btn-success shadow-none\"\n        onClick={() => setModalIsOpen(true)}\n      >\n        Add Node\n      </button>\n      {graph?.nodes?.length > 0 && (\n        <button\n          className=\"btn btn-danger shadow-none mx-2\"\n          onClick={resetGraph}\n        >\n          Reset\n        </button>\n      )}\n      {openDialog && (\n        <div\n          ref={divRef}\n          style={{\n            zIndex: \"2\",\n            padding: \"20px\",\n            backgroundColor: \"white\",\n          }}\n          className=\"border\"\n        >\n          <button\n            onClick={deleteNode}\n            className=\"btn btn-danger border shadow-none my-1 w-100\"\n          >\n            Delete {selectedNode?.label}\n          </button>\n          <button\n            className=\"btn btn-warning border shadow-none w-100\"\n            onClick={editNode}\n          >\n            Edit {selectedNode?.label}\n          </button>\n          <button\n            className=\"btn border shadow-none w-100 my-1\"\n            onClick={() => setOpenDialog(false)}\n          >\n            Close\n          </button>\n        </div>\n      )}\n\n      <Graph\n        key={Math.random()}\n        graph={graph}\n        options={options}\n        events={events}\n        getNetwork={(network) => {\n          //  if you want access to vis.js network api you can set the state in a parent component using this property\n        }}\n      />\n\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Example Modal\"\n      >\n        <div className=\"container my-auto\">\n          <h2> {edit ? \"Edit Node\" : \"Add Node\"}</h2>\n          <div className=\"mt-3\">\n            <label className=\"mb-2\">Node Name</label>\n            <input\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"Node Name\"\n            />\n          </div>\n          {!edit && (\n            <div className=\"mt-3\">\n              <label className=\"mb-2\">Node Type</label>\n              <Select\n                value={selectedType}\n                onChange={handleTypeChange}\n                options={typeOptions}\n              />\n            </div>\n          )}\n          {selectedType?.value !== undefined &&\n            selectedType?.value !== \"impact\" && (\n              <div className=\"mt-3\">\n                <label className=\"mb-2\">Parent Nodes</label>\n                <MultiSelectGraph\n                  selectedValues={selectedParents}\n                  higherLevelNode={filtredTypes(selectedType?.value)}\n                  addNode={addNode}\n                  setModalIsOpen={setModalIsOpen}\n                  setSelectedParents={setSelectedParents}\n                />\n              </div>\n            )}\n\n          <div className=\"mt-3\">\n            {edit ? (\n              <button\n                className=\"btn btn-success mx-3\"\n                onClick={() => {\n                  addNode(selectedParents);\n                  setModalIsOpen(false);\n                  setName(\"\");\n                  setSelectedType(undefined);\n                  setSelectedParents(undefined);\n                }}\n              >\n                Edit Node\n              </button>\n            ) : (\n              <button\n                className=\"btn btn-success shadow-none mx-3\"\n                onClick={() => {\n                  addNode(selectedParents);\n                  setModalIsOpen(false);\n                  setName(\"\");\n                  setSelectedType(undefined);\n                  setSelectedParents(undefined);\n                }}\n              >\n                Add Node\n              </button>\n            )}\n\n            <button\n              className=\"btn btn-secondary shadow-none\"\n              onClick={closeModal}\n            >\n              close\n            </button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nexport default TechnicalDetailsCanvas;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/MultiSelectGraph.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/InterviewDetails.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ProjectsByThematic.js",["1256"],"import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  getAllProjectsOfMonthByThematic,\n\n} from \"../../apis/projectApi\";\nimport InputSearch from \"../../components/aidchannel/general/InputSearch\";\nimport ProjectCard from \"../../components/aidchannel/project/ProjectCard\";\n\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\nimport CountryHeader from \"components/layout/header/CountryHeader\";\n\nconst ProjectsByThematic = () => {\n  const [projects, setProjects] = useState();\n  const { id, codeCountry } = useParams();\n const [searchText, setSearchText] = useState(\"\");\n  const getDataFromApi = useCallback(async () => {\n    const proj = await getAllProjectsOfMonthByThematic(id, codeCountry);\n    setProjects(proj);\n  }, [id, codeCountry]);\n  useEffect(() => {\n    getDataFromApi();\n  }, [id, codeCountry, getDataFromApi]);\n  return (\n    <>\n      <CountryHeader />\n      <div style={{ minHeight: \"100vh\" }}>\n        <div className=\"container my-5\">\n          <InputSearch\n            setSearchText={setSearchText}\n            searchText={searchText}\n            placeholder={`Search for projects`}\n          />\n          <div className=\"row\">\n            {projects?.map((project, index) => (\n              <div key={index} className=\"col-12 col-md-6 col-lg-4 my-4\">\n                <ProjectCard project={project} key={index} />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      <PublicFooter />\n    </>\n  );\n};\n\nexport default ProjectsByThematic;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/MoreDetailsProject.js",["1257","1258","1259","1260","1261","1262"],"import Flag from \"react-world-flags\";\n\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport \"../../components/aidchannel/webmaster/OrganizationForm.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"../../components/aidchannel/webmaster/ProjectForm.css\";\nimport {\n  addExpectedResultApi,\n  deleteExpectedResultApi,\n  getExpectedResultByProjectApi,\n} from \"apis/expectedResultApi\";\nimport {\n  addMainBeneficiaryApi,\n  deleteMainBeneficiaryApi,\n  getMainBeneficiaryByProjectApi,\n} from \"apis/MainBeneficiaryApi\";\nimport {\n  addKeyExpertsApi,\n  deleteKeyExpertsApi,\n  getKeyExpertsByProjectApi,\n} from \"apis/KeyExpertsApi\";\nimport { addKpsiApi, deleteKpiApi, getKpisByProjectApi } from \"apis/kpisApi\";\nimport { FiDelete } from \"react-icons/fi\";\nimport {\n  addLocalizationApi,\n  deleteLocalizationApi,\n  getLocalizationsByProjectApi,\n} from \"apis/localizationApi\";\n\nconst MoreDetailsProject = () => {\n  const [expectedResults, setExpectedResults] = useState([]);\n  const [expectedResultInput, setExpectedResultInput] = useState(\"\");\n  const [mainBeneficiaries, setMainBeneficiaries] = useState([]);\n  const [mainBeneficiaryInput, setMainBeneficiaryInput] = useState(\"\");\n  const [keysExperts, setKeysExperts] = useState([]);\n  const [keyExpertInput, setKeyExpertInput] = useState(\"\");\n  const [kpis, setKpis] = useState([]);\n  const [kpisInput, setKpisInput] = useState(\"\");\n  const [localizations, setLocalisations] = useState([]);\n  const [localizationInput, setLocalizationInput] = useState(\"\");\n\n  const { codeCountry, idProject, multimedia } = useParams();\n  const history = useHistory();\n\n  const getDataFromApi = useCallback(async () => {\n    const expectedResults = await getExpectedResultByProjectApi(idProject);\n    setExpectedResults(expectedResults);\n    const mainBeneficiaries = await getMainBeneficiaryByProjectApi(idProject);\n    setMainBeneficiaries(mainBeneficiaries);\n    const keyExperts = await getKeyExpertsByProjectApi(idProject);\n    setKeysExperts(keyExperts);\n    const kpis = await getKpisByProjectApi(idProject);\n    setKpis(kpis);\n    const localizations = await getLocalizationsByProjectApi(idProject);\n    setLocalisations(localizations);\n  }, [idProject]);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const addExpectedResult = async (e) => {\n    e.preventDefault();\n    if (expectedResultInput !== \"\") {\n      const result = await addExpectedResultApi({\n        result: expectedResultInput,\n        project_id: idProject,\n      });\n      setExpectedResults([...expectedResults, result]);\n      setExpectedResultInput(\"\");\n    }\n  };\n  const addMainBeneficiary = async (e) => {\n    e.preventDefault();\n    if (mainBeneficiaryInput !== \"\") {\n      const beneficiary = await addMainBeneficiaryApi({\n        beneficiary: mainBeneficiaryInput,\n        project_id: idProject,\n      });\n      setMainBeneficiaries([...mainBeneficiaries, beneficiary]);\n      setMainBeneficiaryInput(\"\");\n    }\n  };\n  const addKpis = async (e) => {\n    e.preventDefault();\n    if (kpisInput !== \"\") {\n      const kpi = await addKpsiApi({\n        kpi: kpisInput,\n        project_id: idProject,\n      });\n      setKpis([...kpis, kpi]);\n      setKpisInput(\"\");\n    }\n  };\n  const addLocalization = async (e) => {\n    e.preventDefault();\n    if (localizationInput !== \"\") {\n      const localization = await addLocalizationApi({\n        localization: localizationInput,\n        project_id: idProject,\n      });\n      setLocalisations([...localizations, localization]);\n      setLocalizationInput(\"\");\n    }\n  };\n  const addKeyExperts = async (e) => {\n    e.preventDefault();\n    if (keyExpertInput !== \"\") {\n      const expert = await addKeyExpertsApi({\n        key_expert: keyExpertInput,\n        project_id: idProject,\n      });\n      setKeysExperts([...keysExperts, expert]);\n      setKeyExpertInput(\"\");\n    }\n  };\n\n  const deleteExpectedResult = async (idResult) => {\n    if (window.confirm(`Are you sure you wish to delete this result ?`)) {\n      await deleteExpectedResultApi(idResult);\n      const newResults = expectedResults.filter((result) => {\n        if (result?._id === idResult) return false;\n        return true;\n      });\n      setExpectedResults(newResults);\n    }\n  };\n\n  const deleteMainBeneficiarie = async (idBeneficiary) => {\n    if (window.confirm(`Are you sure you wish to delete this beneficiary ?`)) {\n      await deleteMainBeneficiaryApi(idBeneficiary);\n      const newBeneficiries = mainBeneficiaries.filter((newBeneficiries) => {\n        if (newBeneficiries?._id === idBeneficiary) return false;\n        return true;\n      });\n      setMainBeneficiaries(newBeneficiries);\n    }\n  };\n\n  const deleteKeyExpert = async (idExpert) => {\n    if (window.confirm(`Are you sure you wish to delete this expert ?`)) {\n      await deleteKeyExpertsApi(idExpert);\n      const newExperts = keysExperts.filter((expert) => {\n        if (expert?._id === idExpert) return false;\n        return true;\n      });\n      setKeysExperts(newExperts);\n    }\n  };\n\n  const deleteKpi = async (idKpi) => {\n    if (window.confirm(`Are you sure you wish to delete this Kpis ?`)) {\n      await deleteKpiApi(idKpi);\n      const newKpis = kpis.filter((kpi) => {\n        if (kpi?._id === idKpi) return false;\n        return true;\n      });\n      setKpis(newKpis);\n    }\n  };\n\n  const deleteLocalizarion = async (idLocalization) => {\n    if (window.confirm(`Are you sure you wish to delete this localization ?`)) {\n      await deleteLocalizationApi(idLocalization);\n      const newLocalization = localizations.filter((localization) => {\n        if (localization?._id === idLocalization) return false;\n        return true;\n      });\n      setLocalisations(newLocalization);\n    }\n  };\n  const ListExpectedResult = expectedResults?.map((expResult) => {\n    return (\n      <div\n        className=\"row w-100 border my-2 p-3\"\n        style={{ backgroundColor: \"#acdff4\" }}\n      >\n        <div className=\"col-11\">{expResult?.result}</div>\n        <div className=\"col-1\">\n          {\" \"}\n          <FiDelete\n            size={27}\n            onClick={() => deleteExpectedResult(expResult?._id)}\n            color=\"red\"\n            style={{ cursor: \"pointer\" }}\n          />\n        </div>\n      </div>\n    );\n  });\n\n  const ListMainBeneficiaries = mainBeneficiaries.map((mainBeneficiary) => {\n    return (\n      <div\n        className=\"row w-100 border my-2 p-3\"\n        style={{ backgroundColor: \"#acdff4\" }}\n      >\n        <div className=\"col-11\">{mainBeneficiary?.beneficiary}</div>{\" \"}\n        <div className=\"col-1\">\n          <FiDelete\n            size={27}\n            onClick={() => deleteMainBeneficiarie(mainBeneficiary?._id)}\n            color=\"red\"\n            style={{ cursor: \"pointer\" }}\n          />\n        </div>\n      </div>\n    );\n  });\n\n  const ListKeyExperts = keysExperts.map((keyExpert) => {\n    return (\n      <div\n        className=\" row w-100 border my-2 p-3\"\n        style={{ backgroundColor: \"#acdff4\" }}\n      >\n        <div className=\"col-11\">{keyExpert?.key_expert}</div>\n        <div className=\"col-1\">\n          <FiDelete\n            size={27}\n            onClick={() => deleteKeyExpert(keyExpert?._id)}\n            color=\"red\"\n            style={{ cursor: \"pointer\" }}\n          />\n        </div>\n      </div>\n    );\n  });\n\n  const ListKpis = kpis.map((kpi) => {\n    return (\n      <div\n        className=\"row w-100 border my-2 p-3\"\n        style={{ backgroundColor: \"#acdff4\" }}\n      >\n        <div className=\"col-11\">{kpi?.kpi}</div>\n        <div className=\"col-1\">\n          <FiDelete\n            size={27}\n            onClick={() => deleteKpi(kpi?._id)}\n            color=\"red\"\n            style={{ cursor: \"pointer\" }}\n          />\n        </div>\n      </div>\n    );\n  });\n\n  const ListLocalisation = localizations.map((localization) => {\n    return (\n      <div\n        className=\" row w-100 border my-2 p-3\"\n        style={{ backgroundColor: \"#acdff4\" }}\n      >\n        <div className=\"col-11\">{localization?.localization}</div>\n        <div className=\"col-1\">\n          <FiDelete\n            size={27}\n            onClick={() => deleteLocalizarion(localization?._id)}\n            color=\"red\"\n            style={{ cursor: \"pointer\" }}\n          />\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"container mt-4\">\n      <form>\n        <div className=\"row\">\n          <div className=\"col-12 p-4 m-3 border shadow-radio\">\n            <div className=\"col-12\">\n              <h3 className=\"mb-4\">Expected Result</h3>\n              {ListExpectedResult}\n            </div>\n            <div className=\"col-12 col-lg-10 centralize mt-4\">\n              <div className=\"input-block\">\n                <input\n                  className=\"input-org-form\"\n                  type=\"text\"\n                  id=\"thematic\"\n                  spellCheck=\"false\"\n                  value={expectedResultInput}\n                  onChange={(e) => {\n                    setExpectedResultInput(e.target.value);\n                  }}\n                />\n                <span className=\"placeholder\" style={{ color: \"black\" }}>\n                  Expected Result\n                </span>\n              </div>\n            </div>\n            <div className=\"col-12 col-lg-2 centralize mt-4\">\n              <button\n                onClick={addExpectedResult}\n                className=\"btn btn-success shadow-none\"\n              >\n                Add{\" \"}\n              </button>\n            </div>{\" \"}\n          </div>\n          <div className=\"col-12 p-4 m-3 border shadow-radio\">\n            <div className=\"col-12\">\n              {\" \"}\n              <h3 className=\"mb-4\">Main Beneficiary</h3>\n              {ListMainBeneficiaries}\n            </div>\n            <div className=\"col-12 col-lg-10 centralize mt-4\">\n              <div className=\"input-block\">\n                <input\n                  className=\"input-org-form\"\n                  type=\"text\"\n                  id=\"thematic\"\n                  spellCheck=\"false\"\n                  value={mainBeneficiaryInput}\n                  onChange={(e) => {\n                    setMainBeneficiaryInput(e.target.value);\n                  }}\n                />\n                <span className=\"placeholder\" style={{ color: \"black\" }}>\n                  Main Beneficiary\n                </span>\n              </div>\n            </div>{\" \"}\n            <div className=\"col-12 col-lg-2 centralize mt-4\">\n              <button\n                onClick={addMainBeneficiary}\n                className=\"btn btn-success shadow-none\"\n              >\n                Add{\" \"}\n              </button>\n            </div>{\" \"}\n          </div>\n          <div className=\"col-12 p-4 m-3 border shadow-radio\">\n            <div className=\"col-12\">\n              {\" \"}\n              <h3 className=\"mb-4\">Key Experts</h3>\n              {ListKeyExperts}\n            </div>\n            <div className=\"col-12 col-lg-10 centralize mt-4\">\n              <div className=\"input-block\">\n                <input\n                  className=\"input-org-form\"\n                  type=\"text\"\n                  id=\"thematic\"\n                  spellCheck=\"false\"\n                  value={keyExpertInput}\n                  onChange={(e) => {\n                    setKeyExpertInput(e.target.value);\n                  }}\n                />\n                <span className=\"placeholder\" style={{ color: \"black\" }}>\n                  Key Experts\n                </span>\n              </div>\n            </div>{\" \"}\n            <div className=\"col-12 col-lg-2 centralize mt-4\">\n              <button\n                onClick={addKeyExperts}\n                className=\"btn btn-success shadow-none\"\n              >\n                Add{\" \"}\n              </button>\n            </div>{\" \"}\n          </div>\n          <div className=\"col-12 p-4 m-3 border shadow-radio\">\n            <div className=\"col-12\">\n              {\" \"}\n              <h3 className=\"mb-4\">Kpis</h3>\n              {ListKpis}\n            </div>\n            <div className=\"col-12 col-lg-10 centralize mt-4\">\n              <div className=\"input-block\">\n                <input\n                  className=\"input-org-form\"\n                  type=\"text\"\n                  id=\"thematic\"\n                  spellCheck=\"false\"\n                  value={kpisInput}\n                  onChange={(e) => {\n                    setKpisInput(e.target.value);\n                  }}\n                />\n                <span className=\"placeholder\" style={{ color: \"black\" }}>\n                  Kpis\n                </span>\n              </div>\n            </div>{\" \"}\n            <div className=\"col-12 col-lg-2 centralize mt-4\">\n              <button onClick={addKpis} className=\"btn btn-success shadow-none\">\n                Add\n              </button>\n            </div>{\" \"}\n          </div>\n          <div className=\"col-12 p-4 m-3 border shadow-radio\">\n            <div className=\"col-12\">\n              {\" \"}\n              <h3 className=\"mb-4\">Localizations</h3>\n              {ListLocalisation}\n            </div>\n            <div className=\"col-12 col-lg-10 centralize mt-4\">\n              <div className=\"input-block\">\n                <input\n                  className=\"input-org-form\"\n                  type=\"text\"\n                  id=\"thematic\"\n                  spellCheck=\"false\"\n                  value={localizationInput}\n                  onChange={(e) => {\n                    setLocalizationInput(e.target.value);\n                  }}\n                />\n                <span className=\"placeholder\" style={{ color: \"black\" }}>\n                  Localization\n                </span>\n              </div>\n            </div>\n            <div className=\"col-12 col-lg-2 centralize mt-4\">\n              <button\n                onClick={addLocalization}\n                className=\"btn btn-success shadow-none\"\n              >\n                Add\n              </button>\n            </div>{\" \"}\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default MoreDetailsProject;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ProjectsByImplementers.js",["1263","1264"],"import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getAllProjectsOfMonthByDonors, getAllProjectsOfMonthByImplementers } from \"../../apis/projectApi\";\nimport InputSearch from \"../../components/aidchannel/general/InputSearch\";\nimport ProjectCard from \"../../components/aidchannel/project/ProjectCard\";\n\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\nimport CountryHeader from \"components/layout/header/CountryHeader\";\n\nconst ProjectsByImplementers = () => {\n  const [projects, setProjects] = useState();\n  const { idOrganization, codeCountry } = useParams();\n  const [searchText, setSearchText] = useState(\"\");\n  const getDataFromApi = useCallback(async () => {\n    const proj = await getAllProjectsOfMonthByImplementers(\n      idOrganization,\n      codeCountry\n    );\n    setProjects(proj);\n  }, [idOrganization, codeCountry]);\n  useEffect(() => {\n    getDataFromApi();\n  }, [idOrganization, codeCountry, getDataFromApi]);\n  return (\n    <>\n      <CountryHeader />\n      <div style={{ minHeight: \"100vh\" }}>\n        <div className=\"container my-5\">\n          <InputSearch\n            setSearchText={setSearchText}\n            searchText={searchText}\n            placeholder={`Search for projects`}\n          />\n          <div className=\"row\">\n            {projects?.map((project, index) => (\n              <div key={index} className=\"col-12 col-md-6 col-lg-4 my-4\">\n                <ProjectCard project={project} key={index} />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      <PublicFooter />\n    </>\n  );\n};\n\nexport default ProjectsByImplementers;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ProjectsByDonor.js",["1265"],"import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getAllProjectsOfMonthByDonors } from \"../../apis/projectApi\";\nimport InputSearch from \"../../components/aidchannel/general/InputSearch\";\nimport ProjectCard from \"../../components/aidchannel/project/ProjectCard\";\n\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\nimport CountryHeader from \"components/layout/header/CountryHeader\";\n\nconst ProjectsByDonor = () => {\n  const [projects, setProjects] = useState();\n  const { idOrganization, codeCountry } = useParams();\n  const [searchText, setSearchText] = useState(\"\");\n  const getDataFromApi = useCallback(async () => {\n    const proj = await getAllProjectsOfMonthByDonors(\n      idOrganization,\n      codeCountry\n    );\n    setProjects(proj);\n  }, [idOrganization, codeCountry]);\n  useEffect(() => {\n    getDataFromApi();\n  }, [idOrganization, codeCountry, getDataFromApi]);\n  return (\n    <>\n      <CountryHeader />\n      <div style={{ minHeight: \"100vh\" }}>\n        <div className=\"container my-5\">\n          <InputSearch\n            setSearchText={setSearchText}\n            searchText={searchText}\n            placeholder={`Search for projects`}\n          />\n          <div className=\"row\">\n            {projects?.map((project, index) => (\n              <div key={index} className=\"col-12 col-md-6 col-lg-4 my-4\">\n                <ProjectCard project={project} key={index} />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      <PublicFooter />\n    </>\n  );\n};\n\nexport default ProjectsByDonor;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/MainBeneficiaryApi.js",["1266"],"import { deleteRequest, getRequest, postRequest, putRequest } from \"apis\";\n\nexport const addMainBeneficiaryApi = async (result) => {\n  try {\n    const res = await postRequest(\"mainBeneficiary/\", result);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMainBeneficiaryByProjectApi = async (idProject) => {\n  try {\n    const res = await getRequest(\n      `mainBeneficiary/MainBeneficiaryOfProject/${idProject}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteMainBeneficiaryApi = async (beneficiaryId) => {\n  try {\n    const res = await deleteRequest(`mainBeneficiary/${beneficiaryId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/localizationApi.js",["1267"],"import { deleteRequest, getRequest, postRequest, putRequest } from \"apis\";\n\nexport const addLocalizationApi = async (localization) => {\n  try {\n    const res = await postRequest(\"localization/\", localization);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getLocalizationsByProjectApi = async (idProject) => {\n  try {\n    const res = await getRequest(\n      `localization/localizationOfProject/${idProject}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteLocalizationApi = async (localizationId) => {\n  try {\n    const res = await deleteRequest(`localization/${localizationId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/expectedResultApi.js",["1268"],"import { deleteRequest, getRequest, postRequest, putRequest } from \"apis\";\n\nexport const addExpectedResultApi = async (result) => {\n  try {\n    const res = await postRequest(\"expectedResult/\", result);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getExpectedResultByProjectApi = async (idProject) => {\n  try {\n    const res = await getRequest(\n      `expectedResult/ExpectedResultsOfProject/${idProject}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteExpectedResultApi = async (resultId) => {\n  try {\n    const res = await deleteRequest(`expectedResult/${resultId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/KeyExpertsApi.js",["1269"],"import { deleteRequest, getRequest, postRequest, putRequest } from \"apis\";\n\nexport const addKeyExpertsApi = async (expert) => {\n  try {\n    const res = await postRequest(\"keyExpert/\", expert);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getKeyExpertsByProjectApi = async (idProject) => {\n  try {\n    const res = await getRequest(`keyExpert/keyExpertOfProjects/${idProject}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteKeyExpertsApi = async (expertId) => {\n  try {\n    const res = await deleteRequest(`keyExpert/${expertId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/kpisApi.js",["1270"],"import { deleteRequest, getRequest, postRequest, putRequest } from \"apis\";\n\nexport const addKpsiApi = async (result) => {\n  try {\n    const res = await postRequest(\"kpi/\", result);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getKpisByProjectApi = async (idProject) => {\n  try {\n    const res = await getRequest(`kpi/KpisOfProject/${idProject}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteKpiApi = async (kpiId) => {\n  try {\n    const res = await deleteRequest(`kpi/${kpiId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/superadmin/EditProject.js",["1271","1272","1273"],"import { getProject2 } from \"apis/projectApi\";\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Flag from \"react-world-flags\";\nimport { acceptProject } from \"../../apis/projectApi\";\nimport EditProjectSA from \"components/aidchannel/superadmin/EditProjectSA\";\nconst EditProject = () => {\n  const [project, setProject] = useState();\n\n  const { codeCountry, idProject } = useParams();\n  const history = useHistory();\n\n  const getDataFromApi = useCallback(async () => {\n    const project = await getProject2(idProject);\n    setProject(project);\n  }, [idProject]);\n  const accept = async (projectId) => {\n    await acceptProject(projectId);\n    history.push(`/web-master/validationProjects/projectsNv/${codeCountry}`);\n  };\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n  return (\n    <div className=\"container\">\n      <h1>\n        <Flag\n          code={codeCountry}\n          height=\"70\"\n          width=\"70\"\n          style={{ marginRight: \"2px\" }}\n          className=\"flag\"\n        />{\" \"}\n        Edit Project\n      </h1>\n      <hr />\n      <EditProjectSA />\n    </div>\n  );\n};\n\nexport default EditProject;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/superadmin/EditProjectSA.js",["1274","1275","1276","1277","1278","1279","1280","1281"],"import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport JoditEditor from \"jodit-react\";\nimport ReactJson from \"react-json-view\";\nimport moment from \"moment\";\nimport { AiFillFileAdd } from \"react-icons/ai\";\nimport Select from \"react-select\";\nimport {\n  getCountryByCode,\n  getEnabledCountries,\n} from \"../../../apis/countryApi\";\nimport {\n  AddProject,\n  getProject2,\n  updateProject,\n} from \"../../../apis/projectApi\";\nimport { getThematiques } from \"apis/thematiqueApi\";\nimport { getStatus } from \"apis/statusApi\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Row, FormGroup, FormLabel, Col } from \"react-bootstrap\";\nimport { getOrganizationByType } from \"apis/organizationApi\";\nimport { getAllCops, getAllUsers } from \"apis/userApi\";\n\nconst EditProjectSA = () => {\n  const history = useHistory();\n  const { idProject } = useParams();\n  const editor = useRef(null);\n  const ObjEditor = useRef(null);\n  const [content, setContent] = useState(\"\");\n  const [objectives, setObjectives] = useState(\"\");\n  const [thematiquesOptions, setThematiquesOptions] = useState();\n  const [fundersOptions, setFundersOptions] = useState();\n  const [selectedFunder, setSelectedFunder] = useState(null);\n  const [subFundersOptions, setSubFundersOptions] = useState();\n  const [selectedSubFunder, setSelectedSubFunder] = useState(null);\n  const [implementersOptions, setImplementersOptions] = useState();\n  const [selectedImplementer, setSelectedImplementer] = useState(null);\n  const [subImplementersOptions, setSubImplementersOptions] = useState();\n  const [selectedSubImplementer, setSelectedSubImplementer] = useState(null);\n  const [statusOptions, setStatusOptions] = useState();\n  const [copOptions, setCopOptions] = useState();\n  const [selectedCop, setSelectedCop] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [selectedStatus, setSelectedStatus] = useState(null);\n  const [status, setStatus] = useState(null);\n  const [project, setProject] = useState();\n  const [country, setCountry] = useState();\n  const [projectLogoPreview, setProjectLogoPreview] = useState(null);\n  const [projectLogo, setProjectLogo] = useState();\n  const [approvalDate, setApprovalDate] = useState();\n  const [actualStart, setActualStart] = useState();\n  const [plannedEnd, setPlannedEnd] = useState();\n  const [actualEnd, setActualEnd] = useState();\n  const [loading, setLoading] = useState(false);\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [optionsCountries, setOptionsCountries] = useState();\n\n  const config = {\n    readonly: false,\n    placeholder: \"Description of the project\",\n  };\n  const configObj = {\n    readonly: false,\n    placeholder: \"Ojectives of the project\",\n  };\n\n  const { register, handleSubmit, setValue } = useForm();\n\n  const getDataFromApi = useCallback(async () => {\n    const thematiques = await getThematiques();\n    setThematiquesOptions(\n      thematiques?.map((thematique) => {\n        return {\n          value: thematique._id,\n          label: thematique.name,\n        };\n      })\n    );\n    const funders = await getOrganizationByType(\"Funding Agencies\");\n    const subfund = funders?.map((funder) => {\n      return {\n        value: funder._id,\n        label: funder.name,\n      };\n    });\n    setFundersOptions(subfund);\n    setSubFundersOptions(subfund);\n    const countries = await getEnabledCountries();\n    setOptionsCountries(\n      countries\n        ?.map((country) => {\n          return {\n            value: country._id,\n            label: country.name,\n          };\n        })\n        .sort((country1, country2) =>\n          country1?.label?.localeCompare(country2?.label)\n        )\n    );\n\n    const implementers = await getOrganizationByType(\"Implementing NGO\");\n    const subImpl = implementers?.map((implementer) => {\n      return {\n        value: implementer._id,\n        label: implementer.name,\n      };\n    });\n    setImplementersOptions(subImpl);\n    setSubImplementersOptions(subImpl);\n\n    const status = await getStatus();\n    setStatus(status);\n    setStatusOptions(\n      status?.map((sta) => {\n        return {\n          value: sta?._id,\n          label: sta?.name,\n        };\n      })\n    );\n    // const country = await getCountryByCode(codeCountry);\n    // setCountry(country);\n\n    const cops = await getAllUsers();\n    setCopOptions(\n      cops?.map((cop) => {\n        return {\n          value: cop?._id,\n          label: cop?.fullname,\n        };\n      })\n    );\n\n    if (idProject !== undefined) {\n      const project = await getProject2(idProject);\n      setProject(project);\n      setProjectLogoPreview(urlImageAdapter(project?.image_url));\n      if (project.thematique)\n        setSelectedOption({\n          value: project?.thematique?._id,\n          label: project?.thematique?.name,\n        });\n      if (project.status)\n        setSelectedStatus({\n          value: project?.status?._id,\n          label: project?.status?.name,\n        });\n      if (project.funder)\n        setSelectedFunder({\n          value: project?.funder?._id,\n          label: project?.funder?.name,\n        });\n      if (project.country) {\n        setSelectedCountry({\n          value: project?.country?._id,\n          label: project?.county?.name,\n        });\n      }\n      if (project.sub_funder)\n        setSelectedSubFunder({\n          value: project?.sub_funder[0]?._id,\n          label: project?.sub_funder[0]?.name,\n        });\n      if (project.implementer)\n        setSelectedImplementer({\n          value: project?.implementer?._id,\n          label: project?.implementer?.name,\n        });\n      if (project.sub_implementer)\n        setSelectedSubImplementer({\n          value: project?.sub_implementer[0]?._id,\n          label: project?.sub_implementer[0]?.name,\n        });\n      if (project.task_manager)\n        setSelectedCop({\n          value: project?.task_manager?._id,\n          label: project?.task_manager?.fullname,\n        });\n      if (project.description) setContent(project?.description);\n      if (project.objectives) setObjectives(project?.objectives);\n      if (project.approval_date)\n        setApprovalDate(moment(project?.approval_date).toDate());\n      if (project.actual_start)\n        setActualStart(moment(project?.actual_start).toDate());\n      if (project.actual_end)\n        setActualEnd(moment(project?.actual_end).toDate());\n      if (project.planned_end)\n        setPlannedEnd(moment(project?.planned_end).toDate());\n\n      //setContent(project?.task_manager);\n      if (project.name) setValue(\"name\", project?.name);\n      if (project.total_cost) setValue(\"total_cost\", project?.total_cost);\n      if (project.budget) setValue(\"budget\", project?.budget);\n      if (project.task_manager) setValue(\"task_manager\", project?.task_manager);\n      if (project.image_url) setValue(\"image_url\", project?.image_url);\n      if (project.row_data_org) setValue(\"row_data_org\", project?.row_data_org);\n    }\n  }, [idProject, setValue]);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const onSubmit = async (data) => {\n    //const project = await getProject2(selectedOption?.value);\n    let formData = new FormData();\n    formData.append(\"namefr\", \"\");\n    if (selectedCountry) formData.append(\"country\", selectedCountry?.value);\n\n    if (selectedOption) formData.append(\"thematique\", selectedOption?.value);\n\n    if (selectedStatus) formData.append(\"status\", selectedStatus?.value);\n\n    if (selectedFunder) formData.append(\"funder\", selectedFunder?.value);\n\n    if (selectedSubFunder)\n      formData.append(\"sub_funder\", [selectedSubFunder?.value]);\n\n    if (selectedImplementer)\n      formData.append(\"implementer\", selectedImplementer?.value);\n\n    if (selectedSubImplementer)\n      formData.append(\"sub_implementer\", [selectedSubImplementer?.value]);\n\n    if (data.total_cost !== \"\") formData.append(\"total_cost\", data.total_cost);\n    // if (data.budget === \"\") formData.append(\"budget\", null);\n    //else formData.append(\"budget\", data.budget);\n\n    if (approvalDate) formData.append(\"approval_date\", approvalDate);\n\n    if (actualStart) formData.append(\"actual_start\", actualStart);\n\n    if (actualEnd) formData.append(\"actual_end\", actualEnd);\n\n    if (plannedEnd) formData.append(\"planned_end\", plannedEnd);\n\n    if (selectedCop) formData.append(\"task_manager\", selectedCop?.value);\n\n    formData.append(\"name\", data.name);\n\n    formData.append(\"description\", content);\n    formData.append(\"objectives\", objectives);\n    if (projectLogo != undefined) formData.append(\"projectImage\", projectLogo);\n\n    if (idProject !== undefined) {\n      setLoading(true);\n      await updateProject(idProject, formData);\n      setLoading(false);\n    } else {\n      formData.append(\"validation\", 1);\n      await AddProject(formData);\n      // history.push(`/web-master/validationProjects/projectsV/${codeCountry}`);\n    }\n    history.push(`/super-admin/projects`);\n  };\n\n  const handleThematiqueChange = (selected) => {\n    setSelectedOption(selected);\n  };\n\n  const handleChangeStatus = (selected) => {\n    setSelectedStatus(selected);\n  };\n  const imagePreview = (e) => {\n    setProjectLogoPreview(URL.createObjectURL(e.target.files[0]));\n    setProjectLogo(e.target.files[0]);\n  };\n  return (\n    <div className=\"container\">\n      <form>\n        <div className=\"row\">\n          <div className=\"centralize mt-4 col-12 col-lg-6\">\n            <div className=\"input-block\">\n              <input\n                className=\"input-org-form\"\n                type=\"text\"\n                id=\"name\"\n                spellCheck=\"false\"\n                {...register(\"name\", {\n                  required: \"Name required\",\n                })}\n              />\n              <span className=\"placeholder\" style={{ color: \"black\" }}>\n                Name\n              </span>\n            </div>\n          </div>\n          <div className=\"form-group m-auto\">\n            <label className=\"ml-4 logo-file d-inline\" htmlFor=\"projectLogo\">\n              {projectLogoPreview && (\n                <img\n                  src={projectLogoPreview}\n                  alt=\"avatar\"\n                  style={{ cursor: \"pointer\" }}\n                  width=\"15%\"\n                  height=\"15%\"\n                  className=\"avatar\"\n                />\n              )}\n              {!projectLogoPreview && (\n                <span style={{ cursor: \"pointer\" }}>\n                  <AiFillFileAdd color=\"blue\" size={40} />\n                </span>\n              )}\n            </label>\n            <input\n              type=\"file\"\n              className=\"form-control-file ml-4 shadow-none logo-file d-none\"\n              id=\"projectLogo\"\n              name=\"projectLogo\"\n              onChange={imagePreview}\n              multiple={false}\n            />\n          </div>\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <div className=\"input-block\">\n              <input\n                className=\"input-org-form\"\n                type=\"text\"\n                id=\"total_cost\"\n                spellCheck=\"false\"\n                {...register(\"total_cost\")}\n              />\n              <span className=\"placeholder\" style={{ color: \"black\" }}>\n                Total Cost\n              </span>\n            </div>\n          </div>\n          <div className=\"col-12 col-lg-6 centralize \">\n            <FormLabel className=\"label__form\">COP</FormLabel>\n            <Select\n              placeholder=\"Select COP \"\n              value={selectedCop}\n              onChange={(selected) => setSelectedCop(selected)}\n              options={copOptions}\n            />\n          </div>{\" \"}\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Thematic</FormLabel>\n            <Select\n              placeholder=\"Select the thematic \"\n              value={selectedOption}\n              onChange={handleThematiqueChange}\n              options={thematiquesOptions}\n            />\n          </div>{\" \"}\n          <div className=\"col-12 col-lg-6  centralize mt-4\">\n            <FormLabel className=\"label__form\">Status</FormLabel>\n            <Select\n              placeholder=\"Select the Status \"\n              value={selectedStatus}\n              onChange={handleChangeStatus}\n              options={statusOptions}\n            />\n          </div>\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Funder</FormLabel>\n            <Select\n              placeholder=\"Select the funder \"\n              value={selectedFunder}\n              onChange={(selected) => setSelectedFunder(selected)}\n              options={fundersOptions}\n            />\n          </div>{\" \"}\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Sub-funder</FormLabel>\n            <Select\n              placeholder=\"Select the Sub-funder \"\n              value={selectedSubFunder}\n              onChange={(selected) => setSelectedSubFunder(selected)}\n              options={subFundersOptions}\n            />\n          </div>{\" \"}\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Implementer</FormLabel>\n            <Select\n              placeholder=\"Select the Implementer \"\n              value={selectedImplementer}\n              onChange={(selected) => setSelectedImplementer(selected)}\n              options={implementersOptions}\n            />\n          </div>{\" \"}\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Sub-Implementer</FormLabel>\n            <Select\n              placeholder=\"Select the Sub-Implementer \"\n              value={selectedSubImplementer}\n              onChange={(selected) => setSelectedSubImplementer(selected)}\n              options={subImplementersOptions}\n            />\n          </div>{\" \"}\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Approval Date</FormLabel>\n\n            <DatePicker\n              className=\"input-org-form\"\n              selected={approvalDate}\n              onChange={(date) => setApprovalDate(date)}\n            />\n          </div>\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Actual Start</FormLabel>\n            <FormGroup>\n              <DatePicker\n                className=\"input-org-form\"\n                selected={actualStart}\n                onChange={(date) => setActualStart(date)}\n              />\n            </FormGroup>\n          </div>\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Actual End</FormLabel>{\" \"}\n            <FormGroup>\n              <DatePicker\n                className=\"input-org-form\"\n                selected={actualEnd}\n                onChange={(date) => setActualEnd(date)}\n              />{\" \"}\n            </FormGroup>\n          </div>\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Planned End</FormLabel>{\" \"}\n            <FormGroup>\n              <DatePicker\n                className=\"input-org-form\"\n                placeholder=\"Placeholder\"\n                selected={plannedEnd}\n                onChange={(date) => setPlannedEnd(date)}\n              />{\" \"}\n            </FormGroup>\n          </div>\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Country</FormLabel>\n            <Select\n              placeholder=\"Select Country \"\n              value={selectedCountry}\n              onChange={(selected) => setSelectedCountry(selected)}\n              options={optionsCountries}\n            />\n          </div>{\" \"}\n          <div className=\"col-12 mt-4\">\n            <FormLabel className=\"label__form\">Description</FormLabel>\n            <JoditEditor\n              ref={editor}\n              value={content}\n              config={config}\n              tabIndex={1}\n              onBlur={(newContent) => setContent(newContent)}\n            />\n          </div>{\" \"}\n          <div className=\"col-12 mt-4\">\n            <FormLabel className=\"label__form\">Objectives</FormLabel>{\" \"}\n            <JoditEditor\n              ref={ObjEditor}\n              value={objectives}\n              config={configObj}\n              tabIndex={1}\n              onBlur={(newContent) => setObjectives(newContent)}\n            />\n          </div>{\" \"}\n          {project && (\n            <div className=\"container my-5 box-shadow-card-info p-4\">\n              <FormLabel className=\"label__form\">\n                Informations Related{\" \"}\n              </FormLabel>{\" \"}\n              <ReactJson src={project?.raw_data_org} />{\" \"}\n            </div>\n          )}\n          {!loading ? (\n            <button\n              onClick={handleSubmit(onSubmit)}\n              type=\"submit\"\n              className={\n                idProject !== undefined\n                  ? `btn btn-warning w-100 h-25 shadow-none my-3`\n                  : `btn btn-primary w-100 h-25 shadow-none my-3`\n              }\n            >\n              {idProject !== undefined ? \"Save Modifications\" : \"Add Project\"}\n            </button>\n          ) : (\n            <div className=\"spinner-border text-warning m-auto\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default EditProjectSA;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/general/CardInfoExpert.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/EditExpert.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/layout/footer/PublicFooterHomepage.js",["1282","1283","1284","1285","1286","1287","1288"],"import React, { useState, useEffect } from \"react\";\nimport Flag from \"react-world-flags\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport \"./PublicFooter.css\";\nimport { getEnabledCountries } from \"../../../apis/countryApi\";\n\nimport { getDonorsApi, getImplementersApi } from \"apis/organizationApi\";\nconst PublicFooterHomepage = () => {\n  const [countries, setCountries] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n\n  let history = useHistory();\n\n  useEffect(() => {\n    getDataFromApi();\n  }, []);\n\n  const getDataFromApi = async () => {\n    const enabeledCountries = await getEnabledCountries();\n    setCountries(enabeledCountries);\n  };\n\n  return (\n    <div className=\"public-footer\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 col-md-2 \"></div>\n          <div className=\"col-md-4\">\n            <ul className=\"list\">\n              <li\n                className=\"mb-4\"\n                style={{ fontSize: \"20px\", color: \"#f9b934\" }}\n              >\n                Countries Enabled\n              </li>\n\n              {countries?.map((country, index) => (\n                <li>\n                  <Link\n                    to={`/country/${country.code}`}\n                    className=\"dropdown-item\"\n                    className=\"items\"\n                    style={{ color: \"#cccccc\", textDecoration: \"none\" }}\n                    key={index}\n                  >\n                    <Flag\n                      code={country.code}\n                      height=\"12\"\n                      style={{ marginRight: \"5px\" }}\n                    />{\" \"}\n                    {country.name}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PublicFooterHomepage;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/linkedin/Home.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/header/Header.js",["1289"],"import React from \"react\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport BusinessCenterIcon from \"@material-ui/icons/BusinessCenter\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport HeaderOption from \"./HeaderOption.js\";\nimport { useHistory, Link } from \"react-router-dom\";\n//import { auth } from \"./firebase.js\";\n//import { logout } from \"./features/userSlice\";\nimport \"./Header.css\";\nimport axios from \"axios\";\nimport { axiosClient } from \"apis/index.js\";\n\nfunction Header() {\n  const history = useHistory();\n  const onProfilClick = async () => {\n    try {\n      await axios.get(`${process.env.REACT_APP_BACKEND}user/logout`);\n      delete axiosClient.defaults.headers.common[\"Authorization\"];\n      localStorage.removeItem(\"userInfo\");\n      history.push(\"/linkdin/login\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <div className=\"header d-block d-md-flex px-3 px-md-0 px-lg-5\">\n      <div className=\"header__left d-none d-md-flex\">\n        <img src=\"/assets/linkLogo.png\" alt=\"Linkedin Logo\" />\n        <div className=\"header__search my-auto h-75 \">\n          <SearchIcon />\n          <input placeholder=\"Search\" className=\"\" type=\"text\"></input>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-2\">\n          <Link to=\"/linkdin\" style={{ textDecoration: \"none\" }}>\n            <HeaderOption Icon={HomeIcon} title=\"Home\" />\n          </Link>\n        </div>\n        <div className=\"col-2\">\n          <Link to=\"/linkedin/network\" style={{ textDecoration: \"none\" }}>\n            <HeaderOption Icon={SupervisorAccountIcon} title=\"Network\" />\n          </Link>\n        </div>\n        {/* <div className=\"col-2\">\n          <HeaderOption Icon={BusinessCenterIcon} title=\"Jobs\" />\n        </div> */}\n        <div className=\"col-2\">\n          <HeaderOption Icon={ChatIcon} title=\"Messaging\" />\n        </div>\n        <div className=\"col-2\">\n          <HeaderOption Icon={NotificationsIcon} title=\"Notifications\" />\n        </div>\n        <div className=\"col-2\">\n          <HeaderOption avatar={true} title=\"You\" onClick={onProfilClick} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/header/HeaderOption.js",["1290"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Avatar } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport { Dropdown } from \"react-bootstrap\";\nimport \"./HeaderOption.css\";\n\nfunction HeaderOption({ avatar, Icon, title, onClick }) {\n  const history = useHistory();\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n  return (\n    <div className=\"headerOption\">\n      {Icon && (\n        <>\n          <Icon className=\"headerOption__icon\" />{\" \"}\n          <h3 className=\"headerOption__title d-none d-md-inline\">{title}</h3>\n        </>\n      )}\n      {avatar && (\n        <>\n          <Dropdown>\n            <div className=\"container\">\n              {\" \"}\n              <Dropdown.Toggle\n                id=\"dropdown-button-dark-example1\"\n                className=\"btn shadow-none toggle__button mb-4\"\n              >\n                {\" \"}\n                <Avatar\n                  className=\"headerOptionAvatar__icon \"\n                  src={urlImageAdapter(userInfo?.user?.image_url)}\n                ></Avatar>\n              </Dropdown.Toggle>\n            </div>\n\n            <Dropdown.Menu variant=\"dark\" className=\"mt-4\">\n              <Dropdown.Item onClick={() => history.push(\"/linkedin/profil\")}>\n                Profil\n              </Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item onClick={onClick}>Logout</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default HeaderOption;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/sidebar/Sidebar.js",["1291","1292","1293","1294","1295","1296"],"import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport \"./Sidebar.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport { getLastPostApi } from \"apis/postApi\";\nimport { getOneUser } from \"apis/userApi\";\nimport { getNumberProfiles } from \"apis/viewApi\";\nfunction Sidebar() {\n  const history = useHistory();\n  const [lastPost, setLastPost] = useState();\n   const { idProfile } = useParams();\n    const [myAccount, setMyAccount] = useState();\n    const [numberviews, setnumberviews] = useState();\n   const [user, setUser] = useState();\n  const recentItem = (topic) => (\n    <div className=\"sidebar__recentItem\">\n      <span className=\"sidebar__hash\">#</span>\n      <p>{topic}</p>\n    </div>\n  );\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n  const getDataFromApi = useCallback(async () => {\n    const post = await getLastPostApi(userInfo?.user?._id);\n    setLastPost(post);\n    const user = await getOneUser(idProfile);\n    setUser(user);\n   \n    const numberviews = await getNumberProfiles(userInfo?.user?._id, user);\n    setnumberviews(numberviews);\n  }, [idProfile]);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, []);\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar__top\">\n        <img\n          src=\"https://audreytips.com/wp-content/uploads/2017/08/comment-trouver-des-clients-avec-linkedin-11.jpg\"\n          alt=\"background-banner\"\n        />\n        <Avatar\n          src={urlImageAdapter(userInfo?.user?.image_url)}\n          className=\"sidebar__avatar\"\n        ></Avatar>\n        <h2\n          onClick={() =>\n            history.push(`/linkedin/profil/${userInfo?.user?._id}`)\n          }\n        >\n          {userInfo?.user?.fullname}\n        </h2>\n        <h4>{userInfo?.user?.job_title}</h4>\n      </div>\n      <div className=\"sidebar__stats\">\n        <div className=\"sidebar__stat\">\n          <p>Who viewed you</p>\n          <p className=\"sidebar__statNumber\">{userInfo?.numberviews}</p>\n        </div>\n        <div className=\"sidebar__stat\">\n          <p>Views on post</p>\n          <p className=\"sidebar__statNumber\">{lastPost?.views?.length}</p>\n        </div>\n      </div>\n      <div className=\"sidebar__bottom\">\n        <p>Recent</p>\n        {recentItem(\"USAID\")}\n        {recentItem(\"ZIG\")}\n        {recentItem(\"who\")}\n        {recentItem(\"WORLD BANK\")}\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/widget/Widgets.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/feed/Feed.js",["1297","1298","1299","1300","1301","1302"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport Modal from \"react-modal\";\nimport InputOption from \"../inputOption/InputOption\";\nimport Post from \"../post/Post\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport SubscriptionsIcon from \"@material-ui/icons/Subscriptions\";\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\nimport CalendarViewDayIcon from \"@material-ui/icons/CalendarViewDay\";\nimport FlipMove from \"react-flip-move\";\nimport \"./Feed.css\";\nimport HeaderOption from \"../header/HeaderOption\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport {\n  addLikeToPostApi,\n  deleteLikeFromPostApi,\n  getPostsApi,\n} from \"apis/postApi\";\nimport PostModal from \"../postModal/PostModal\";\n\nModal.setAppElement(\"#root\");\n\nfunction Feed() {\n  const [modalIsOpen, setIsModalOpen] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [disableLikeButton, setDisableLikeButton] = useState({\n    postId: null,\n    disabled: false,\n  });\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n  const getDataFromApi = useCallback(async () => {\n    const posts = await getPostsApi();\n    setPosts(posts);\n  }, []);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const onLike = async (post) => {\n    setDisableLikeButton({\n      postId: post._id,\n      disabled: true,\n    });\n    if (isIncludeUserId(post?.likes).isExist) {\n      console.log(\"debut\");\n      await deleteLikeFromPostApi(\n        isIncludeUserId(post?.likes).likeId,\n        post?._id\n      );\n      const newPosts = posts.map((mapPost) => {\n        console.log(\"map\");\n        if (mapPost?._id == post?._id) {\n          console.log(\"if\");\n          const filtredLikes = mapPost?.likes?.filter((like) => {\n            if (like?._id == isIncludeUserId(post?.likes).likeId) return false;\n            return true;\n          });\n\n          return { ...mapPost, likes: filtredLikes };\n        }\n        return mapPost;\n      });\n\n      setPosts(newPosts);\n    } else {\n      const newLike = await addLikeToPostApi(userInfo?.user?._id, post?._id);\n      const newPosts = posts.map((mapPost) => {\n        if (mapPost?._id == post?._id)\n          return { ...mapPost, likes: [...mapPost.likes, newLike] };\n        return mapPost;\n      });\n      setPosts(newPosts);\n    }\n    setDisableLikeButton({\n      postId: null,\n      disabled: false,\n    });\n  };\n\n  const isIncludeUserId = (likes) => {\n    const like = likes.filter((like) => {\n      if (like.userId == userInfo.user._id) return true;\n      return false;\n    });\n    if (like.length > 0) return { isExist: true, likeId: like[0]._id };\n    return { isExist: false, likeId: null };\n  };\n\n  return (\n    <>\n      <div className=\"feed\">\n        <div className=\"feed__inputContainer\">\n          <div className=\"feed__input\">\n            <HeaderOption avatar={true} title=\"\" onClick={() => {}} />\n            <form onClick={() => setIsModalOpen(true)}>\n              <input\n                disabled\n                placeholder=\"Start a post\"\n                // onChange={(e) => setInput(e.target.value)}\n                type=\"text\"\n                className=\"input__post__disabled\"\n              />\n            </form>\n          </div>\n\n          <div className=\"feed__inputOptions\">\n            <InputOption Icon={ImageIcon} title=\"Photo\" color=\"#70B5F9\" />\n            <InputOption\n              Icon={SubscriptionsIcon}\n              title=\"Video\"\n              color=\"#E7A33E\"\n            />\n            <InputOption Icon={EventNoteIcon} title=\"Event\" color=\"#C0CBCD\" />\n            <InputOption\n              Icon={CalendarViewDayIcon}\n              title=\"Write\"\n              color=\"#7FC15E\"\n            />\n          </div>\n        </div>\n        <FlipMove>\n          {posts?.map((post, index) => (\n            <Post\n              key={index}\n              postId={post?._id}\n              userId={post?.user?._id}\n              views={post?.views?.length}\n              name={post?.user?.fullname}\n              description={post?.user?.job_title}\n              message={post?.content}\n              photoUrl={urlImageAdapter(post?.user?.image_url)}\n              postImage={post.image ? urlImageAdapter(post?.image) : undefined}\n              createdAt={post?.createdAt}\n              onLike={() => onLike(post)}\n              isLike={isIncludeUserId(post?.likes).isExist}\n              likes={post?.likes}\n              disableLike={\n                disableLikeButton?.disabled == true &&\n                post?._id == disableLikeButton?.postId\n                  ? true\n                  : false\n              }\n            />\n          ))}\n        </FlipMove>\n      </div>\n      <PostModal\n        modalIsOpen={modalIsOpen}\n        setIsModalOpen={setIsModalOpen}\n        posts={posts}\n        setPosts={setPosts}\n      />\n    </>\n  );\n}\n\nexport default Feed;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/inputOption/InputOption.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/post/Post.js",["1303","1304","1305","1306","1307"],"import React, {\n  forwardRef,\n  useState,\n  useCallback,\n  useEffect,\n  useRef,\n} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Avatar } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport { useInfiniteQuery } from \"react-query\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\nimport InputOption from \"../inputOption/InputOption\";\nimport \"./Post.css\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport Comment from \"../comment/Comment\";\nimport {\n  addCommentApi,\n  getCommentsApi,\n  getNumberCommentsApi,\n} from \"apis/commentApi\";\nimport useIntersectionObserve from \"helpers/useIntersectionObserver\";\nimport useIntersectionObserver from \"@react-hook/intersection-observer\";\nimport { incrementViewApi } from \"apis/postApi\";\n\nconst Post = forwardRef(\n  (\n    {\n      name,\n      description,\n      message,\n      photoUrl,\n      isLike,\n      createdAt,\n      likes,\n      onLike,\n      disableLike,\n      postImage,\n      userId,\n      postId,\n      views,\n    },\n    ref\n  ) => {\n    const history = useHistory();\n    const [commentInput, setCommentInput] = useState(\"\");\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    const [numberComments, setNumberComments] = useState(0);\n    const [limit] = useState(2);\n    const [refreh, setRefresh] = useState(false);\n    const loadMoreButtonRef = useRef();\n    const [postRef, setPostRef] = useState();\n    const { isIntersecting } = useIntersectionObserver(postRef);\n\n    const getDataFromApi = useCallback(async () => {\n      const numberComments = await getNumberCommentsApi(postId);\n      setNumberComments(numberComments);\n    }, []);\n\n    useEffect(() => {\n      getDataFromApi();\n    }, [getDataFromApi, refreh]);\n\n    useEffect(() => {\n      async function fetchData() {\n        if (isIntersecting) {\n          await incrementViewApi(postId, userInfo?.user?._id);\n        }\n      }\n      fetchData();\n    }, [isIntersecting]);\n\n    const {\n      data,\n      fetchNextPage,\n      isFetching,\n      hasNextPage,\n      isFetchingNextPage,\n    } = useInfiniteQuery([limit, postId, refreh], getCommentsApi, {\n      getNextPageParam: (lastPage, pages) => {\n        if (lastPage.data.length === limit) return parseInt(lastPage.page) + 1;\n        return false;\n      },\n    });\n\n    useIntersectionObserve({\n      target: loadMoreButtonRef,\n      onIntersect: fetchNextPage,\n      enabled: hasNextPage,\n    });\n\n    const onPostComment = async () => {\n      const comment = {\n        content: commentInput,\n        post: postId,\n        user: userInfo?.user?._id,\n        parent_id: null,\n      };\n      const newComment = await addCommentApi(comment);\n      setRefresh(!refreh);\n      setCommentInput(\"\");\n    };\n    return (\n      <div ref={setPostRef} className=\"post border\">\n        <div className=\"post__header\">\n          <Avatar src={photoUrl}>{name[0]}</Avatar>\n          <div className=\"post__info\">\n            <h2 onClick={() => history.push(`/linkedin/profil/${userId}`)}>\n              {name}\n            </h2>\n            <p className=\"m-0\">{description}</p>\n            <p className=\"m-0\">\n              {moment(createdAt)\n                .startOf(\"minute\")\n                .fromNow()}\n            </p>\n          </div>\n        </div>\n        <div className=\"post__body\">\n          <p className=\"comment_message\">{message}</p>\n          {postImage && <img src={postImage} width=\"100%\" />}\n        </div>\n        <div\n          className=\"row ml-3 mt-2\"\n          style={{ color: \"gray\", fontSize: \"13px\" }}\n        >\n          <div className=\"col-9\">\n            <ThumbUpAltOutlinedIcon\n              className=\"mb-1\"\n              style={{ color: \"#0e76a8\", width: \"15px\" }}\n            />{\" \"}\n            {likes.length}{\" \"}\n            <span className=\"ml-4\">{numberComments} comments</span>\n          </div>\n\n          <div className=\"col-3\">\n            <span>{views} views</span>\n          </div>\n        </div>\n        <div className=\"post__buttons\">\n          <InputOption\n            Icon={ThumbUpAltOutlinedIcon}\n            title=\"Like\"\n            color={isLike ? \"#0e76a8\" : \"gray\"}\n            onLike={onLike}\n            disableLike={disableLike}\n          />\n          <InputOption Icon={ChatOutlinedIcon} title=\"Comment\" color=\"gray\" />\n          <InputOption Icon={ShareOutlinedIcon} title=\"Share\" color=\"gray\" />\n          <InputOption Icon={SendOutlinedIcon} title=\"Send\" color=\"gray\" />\n        </div>\n        <div className=\"comment_input row\">\n          <div className=\"col-2 col-sm-1\">\n            <Avatar\n              className=\"comment_avatar mt-2\"\n              src={urlImageAdapter(userInfo?.user?.image_url)}\n            ></Avatar>\n          </div>\n\n          <div className=\"comment__inputContainer col-10 col-11 mb-0\">\n            <div className=\"comment__input\">\n              <form onClick={() => {}}>\n                <TextareaAutosize\n                  className=\"textarea\"\n                  placeholder=\"Add a comment ...\"\n                  value={commentInput}\n                  onChange={(e) => setCommentInput(e.target.value)}\n                />\n              </form>\n            </div>\n          </div>\n          {commentInput !== \"\" && (\n            <button\n              onClick={onPostComment}\n              className=\"comment_post_btn btn btn-primary ml-5 shadow-none\"\n            >\n              Post\n            </button>\n          )}\n        </div>\n        <div className=\"comments mt-3\">\n          {data?.pages.map((group, i) => (\n            <React.Fragment key={i}>\n              {group.data.map((comment, index) => (\n                <Comment\n                  key={index}\n                  user={comment?.user}\n                  content={comment?.content}\n                />\n              ))}\n            </React.Fragment>\n          ))}\n          <div>\n            <div\n              className=\"load_comments ml-2\"\n              onClick={() => fetchNextPage()}\n              disabled={!hasNextPage || isFetchingNextPage}\n            >\n              {isFetchingNextPage\n                ? \"Loading more...\"\n                : hasNextPage && \"Load more comments\"}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default Post;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/EditWebMaster.js",["1308"],"import AddWebmasterForm from \"components/aidchannel/superadmin/WebmasterForm\";\nimport ExpertForm from \"components/aidchannel/webmaster/ExpertForm\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Flag from \"react-world-flags\";\n\nconst EditWebMaster = () => {\n  const { codeCountry } = useParams();\n  return (\n    <div className=\"container\">\n      <h1>\n        <Flag\n          code={codeCountry}\n          height=\"70\"\n          width=\"70\"\n          style={{ marginRight: \"2px\" }}\n          className=\"flag\"\n        />{\" \"}\n        Edit WebMaster\n      </h1>\n      <hr />\n      <AddWebmasterForm />\n    </div>\n  );\n};\n\nexport default EditWebMaster;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/Users.js",["1309","1310","1311","1312","1313","1314","1315","1316","1317","1318","1319","1320","1321"],"import {\n  enableExpertOfMonth,\n  disabledExpertOfMonth,\n  getExpert,\n} from \"apis/userApi\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport Flag from \"react-world-flags\";\nimport { getCountryByCode } from \"../../apis/countryApi\";\nimport { deleteExpert, getAllExpertsByCountry } from \"apis/userApi\";\nimport MtableExpert from \"../../components/aidchannel/webmaster/MtableExpert\";\nimport TableExpert from \"components/aidchannel/webmaster/TableExpert\";\nimport ListProjects from \"./ListProjects\";\nimport ListProjectsValides from \"./ListProjectsValides\";\nimport AddUser from \"./AddUser\";\nimport ListAddedUsers from \"./ListAddedUsers\";\nimport ExpertForm from \"components/aidchannel/webmaster/ExpertForm\";\n\nconst Users = () => {\n  const history = useHistory();\n  const { codeCountry, idExpert, multimedia } = useParams();\n  const [country, setCountry] = useState();\n  const [experts, setExperts] = useState([]);\n\n  const getDataFromApi = useCallback(async () => {\n    const country = await getCountryByCode(codeCountry);\n    setCountry(country);\n    const expert = await getAllExpertsByCountry(codeCountry);\n    setExperts(expert?.reverse());\n  }, []);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const deleteExp = async (expert) => {\n    if (window.confirm(`Are you sure you wish to delete ${expert.name} ?`)) {\n      try {\n        await deleteExpert(expert._id);\n        const newExpertsList = experts.filter(function(item) {\n          if (item[\"_id\"] === expert?._id) return false;\n          return true;\n        });\n        setExperts(newExpertsList);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"container\">\n        <>\n          <h1>\n            <Flag\n              code={codeCountry}\n              height=\"70\"\n              width=\"70\"\n              style={{ marginRight: \"2px\" }}\n              className=\"flag\"\n            />{\" \"}\n            Users\n          </h1>\n          <ul className=\"nav nav-tabs\">\n            <li className=\"nav-item\">\n              <Link\n                to={`/web-master/users/addUser/${codeCountry}`}\n                className={`nav-link ${multimedia === \"addUser\" && \"active\"}`}\n              >\n                Add User\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                to={`/web-master/users/listUsers/${codeCountry}`}\n                className={`nav-link ${multimedia === \"listUsers\" && \"active\"}`}\n              >\n                Added Users\n              </Link>\n            </li>\n          </ul>\n        </>\n\n        {multimedia === \"addUser\" && <AddUser />}\n        {multimedia === \"listUsers\" && <ListAddedUsers />}\n      </div>\n    </div>\n  );\n};\n\nexport default Users;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/helpers/SecureRouteLink.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/linkedin/LoginLinkedin.js",["1322","1323","1324"],"import LoginFormLinkedin from \"components/linkedin/loginFormLinkedin/LoginFormLinkedin\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport LoginForm from \"../../components/aidchannel/authentication/LoginForm\";\nimport SideImage from \"../../components/aidchannel/authentication/SideImage\";\nimport PublicHeaderLink from \"../../components/linkedin/PublicHeaderLink/PublicHeaderLink\";\n\nconst LoginLinkedin = () => {\n  return (\n    <>\n      <PublicHeaderLink />\n      <div className=\"container\">\n        <div className=\"row\">\n          <div\n            className=\"col-12 col-md-7 col-lg-6 mx-auto my-3 p-5\"\n            style={{\n              boxShadow: \"rgba(0, 0, 0, 0.24) 0px 3px 8px\",\n            }}\n          >\n            <LoginFormLinkedin />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LoginLinkedin;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/linkedin/RegisterLink.js",["1325"],"import RegistrationFormLink from \"components/linkedin/registerFormLink/RegisterFormLink\";\nimport React from \"react\";\nimport RegistrationForm from \"../../components/aidchannel/authentication/RegistrationForm\";\nimport PublicHeaderLink from \"../../components/linkedin/PublicHeaderLink/PublicHeaderLink\";\n\nconst RegisterLink = () => {\n  return (\n    <>\n      <PublicHeaderLink />\n      <div className=\"container\">\n        <div className=\"row\">\n          <div\n            className=\"col-12 col-md-7 col-lg-6 mx-auto my-3 p-5\"\n            style={{\n              boxShadow: \"rgba(0, 0, 0, 0.24) 0px 3px 8px\",\n            }}\n          >\n            <RegistrationFormLink />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default RegisterLink;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/helpers/authorization.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/superadmin/TableWebmaster.js",["1326","1327","1328"],"import React from \"react\";\nimport MaterialTable from \"material-table\";\nimport { FcCalendar } from \"react-icons/fc\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport { deleteExpert } from \"apis/userApi\";\n\nconst TableWebmaster = () => {\n  const orgTableRef = React.createRef();\n  const history = useHistory();\n  const { codeCountry } = useParams();\n\n  const reloadTableData = () => {\n    orgTableRef.current.onQueryChange();\n  };\n\n  return (\n    <div>\n      <MaterialTable\n        tableRef={orgTableRef}\n        title=\"List of WebMasters\"\n        columns={[\n          {\n            field: \"image_url\",\n            title: \"Profil\",\n            render: (rowData) => (\n              <img\n                className=\"img-fluid\"\n                src={urlImageAdapter(rowData?.image_url)}\n                style={{\n                  verticalAlign: \"middle\",\n                  width: \"50px\",\n                  height: \"50px\",\n                  borderRadius: \"50%\",\n                }}\n              />\n            ),\n            cellStyle: {\n              width: \"15%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Full Name\",\n            field: \"fullname\",\n            cellStyle: {\n              width: \"25%\",\n\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Email\",\n            field: \"email\",\n            cellStyle: {\n              width: \"25%\",\n\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Country\",\n            field: \"country.name\",\n            cellStyle: {\n              width: \"25%\",\n              textAlign: \"center\",\n            },\n          },\n        \n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) => {\n            let url = `${process.env.REACT_APP_BACKEND}user/getwebmastersbypagination?`;\n            url += \"limit=\" + query.pageSize;\n            url += \"&page=\" + (query.page + 1);\n            axios\n              .post(url, {\n                searchText: query.search,\n              })\n              .then((result) => {\n                resolve({\n                  data: result.data.data,\n                  page: result.data.page - 1,\n                  totalCount: result.data.totalCount,\n                });\n              });\n          })\n        }\n        options={{\n          filtering: false,\n          search: true,\n          sorting: false,\n          headerStyle: {\n            backgroundColor: \"#0069d9\",\n            textAlign: \"center\",\n            color: \"white\",\n          },\n          actionsColumnIndex: -1,\n        }}\n        actions={[\n          {\n            icon: \"refresh\",\n            tooltip: \"Refresh Data\",\n            isFreeAction: true,\n            onClick: () =>\n              orgTableRef.current && orgTableRef.current.onQueryChange(),\n          },\n\n          {\n            icon: () => <FaRegEdit size={30} color=\"#ffc107\" />,\n            tooltip: \"Edit WebMaster\",\n            onClick: (event, webMaster) => {\n              history.push(\n                `/super-admin/edit-webmaster/${webMaster?._id}`\n              );\n            },\n          },\n       \n          {\n            icon: () => (\n              <button className=\"btn btn-danger border-none shadow-none\">\n                Delete\n              </button>\n            ),\n            onClick: async (event, user) => {\n              if (\n                window.confirm(\n                  `Are you sure you wish to delete ${user.fullname} ?`\n                )\n              ) {\n                try {\n                  await deleteExpert(user?._id);\n                  reloadTableData();\n                  reloadTableData();\n                } catch (error) {\n                  console.log(error);\n                }\n              }\n            },\n          },\n        ]}\n      />\n    </div>\n  );\n};\n\nexport default TableWebmaster;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/PublicHeaderLink/PublicHeaderLink.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/registerFormLink/RegisterFormLink.js",["1329"],"import \"./authentication.css\";\nimport toastr from \"toastr\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport \"toastr/build/toastr.css\";\nimport { useHistory } from \"react-router-dom\";\nimport formDataHelper from \"helpers/FormDataHelper\";\nconst RegistrationFormLink = (props) => {\n  const history = useHistory();\n  const [profilPreview, setProfilPreview] = useState(null);\n  const [profil, setProfil] = useState();\n  const [user, setUser] = useState({\n    fullname: \"\",\n    email: \"\",\n    adress: \"\",\n    phone: \"\",\n    job_title: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (e) => {\n    setUser({ ...user, [e.target.id]: e.target.value });\n  };\n\n  const submitSignUp = (e) => {\n    e.preventDefault();\n    axios\n      .post(\n        `${process.env.REACT_APP_BACKEND}user/register`,\n        formDataHelper(profil, \"image_url\", user)\n      )\n      .then((res) => {\n        toastr.success(\"You have been signed up successfuly\", \"New Account\", {\n          positionClass: \"toast-bottom-left\",\n        });\n        localStorage.setItem(\"userInfo\", JSON.stringify(res.data));\n        history.push(\"/linkdin\");\n      })\n\n      .catch(({ response }) => {\n        toastr.warning(response, \"Please check your informations!\", {\n          positionClass: \"toast-bottom-left\",\n        });\n      });\n  };\n\n  const imagePreview = (e) => {\n    setProfilPreview(URL.createObjectURL(e.target.files[0]));\n    setProfil(e.target.files[0]);\n  };\n\n  return (\n    <form onSubmit={submitSignUp}>\n      <div className=\"text-center\">\n        <h1 className=\"login-title\">Sign up</h1>\n      </div>\n      <div className=\"form-group m-auto\">\n        <label className=\"ml-4 logo-file d-inline\" htmlFor=\"projectLogo\">\n          {profilPreview && (\n            <div className=\"text-center\">\n              <img\n                src={profilPreview}\n                alt=\"avatar\"\n                style={{ cursor: \"pointer\" }}\n                width=\"15%\"\n                height=\"15%\"\n                className=\"avatar\"\n              />\n            </div>\n          )}\n          {!profilPreview && (\n            <div className=\"text-center\">\n              <span className=\"mx-auto\" style={{ cursor: \"pointer\" }}>\n                <img\n                  src=\"/assets/profilAvatar.jpg\"\n                  className=\" profil__avatar\"\n                />\n                <p style={{ color: \"#0e76a8\" }}> Profil image</p>\n              </span>\n            </div>\n          )}\n        </label>\n        <input\n          type=\"file\"\n          className=\"form-control-file ml-4 shadow-none logo-file d-none\"\n          id=\"projectLogo\"\n          name=\"projectLogo\"\n          onChange={imagePreview}\n          multiple={false}\n        />\n      </div>\n      <div className=\"centralize mt-4\">\n        <div className=\"input-block\">\n          <input\n            onChange={handleChange}\n            className=\"input__link\"\n            type=\"text\"\n            id=\"fullname\"\n          />\n          <span className=\"placeholder\">Full Name</span>\n        </div>\n      </div>\n\n      <div className=\"centralize mt-4\">\n        <div className=\"input-block\">\n          <input\n            onChange={handleChange}\n            className=\"input__link\"\n            type=\"text\"\n            id=\"email\"\n            spellCheck=\"false\"\n          />\n          <span className=\"placeholder\">Email address</span>\n        </div>\n      </div>\n\n      <div className=\"centralize mt-4\">\n        <div className=\"input-block\">\n          <input\n            onChange={handleChange}\n            className=\"input__link\"\n            type=\"text\"\n            id=\"adress\"\n            spellCheck=\"false\"\n          />\n          <span className=\"placeholder\">Address</span>\n        </div>\n      </div>\n\n      <div className=\"centralize mt-4\">\n        <div className=\"input-block\">\n          <input\n            onChange={handleChange}\n            className=\"input__link\"\n            type=\"text\"\n            id=\"phone\"\n            spellCheck=\"false\"\n          />\n          <span className=\"placeholder\">Phone Number</span>\n        </div>\n      </div>\n\n      <div className=\"centralize mt-4\">\n        <div className=\"input-block\">\n          <input\n            onChange={handleChange}\n            className=\"input__link\"\n            type=\"text\"\n            id=\"job_title\"\n            spellCheck=\"false\"\n          />\n          <span className=\"placeholder\">Job Title</span>\n        </div>\n      </div>\n\n      <div className=\"centralize mt-4\">\n        <div className=\"input-block\">\n          <input\n            onChange={handleChange}\n            className=\"input__link\"\n            type=\"password\"\n            id=\"password\"\n            spellCheck=\"false\"\n          />\n          <span className=\"placeholder\">Password</span>\n        </div>\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"btn btn-primary form-control submit__register__link shadow-none mt-4\"\n      >\n        SIGN UP\n      </button>\n      <div className=\"col-12 text-center my-4\">\n        <h1 className=\"login-sub-title\">\n          Already have an account?\n          <span className=\"login-sub-title-purple\">\n            {\"  \"}\n            <Link\n              className=\"text-decoration-none\"\n              style={{ color: \"#3f51b5\" }}\n              to=\"/linkdin/login\"\n            >\n              {\"    \"}Sign in\n            </Link>\n          </span>\n        </h1>\n      </div>\n    </form>\n  );\n};\n\nexport default RegistrationFormLink;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/loginFormLinkedin/LoginFormLinkedin.js",["1330","1331"],"import \"./authentication.css\";\nimport toastr from \"toastr\";\nimport { Link, history } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport \"toastr/build/toastr.css\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { setAuthorizationToken } from \"apis\";\n\nconst LoginFormLinkedin = () => {\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const history = useHistory();\n\n  const handleChange = (e) => {\n    setUser({ ...user, [e.target.id]: e.target.value });\n  };\n\n  const submitSignIn = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_BACKEND}user/login`,\n        user\n      );\n      setAuthorizationToken(res?.data?.token);\n      localStorage.setItem(\"userInfo\", JSON.stringify(res.data));\n      toastr.info(\"Welcome among us \", {\n        positionClass: \"toast-bottom-left\",\n      });\n      history.push(\"/linkdin\");\n    } catch (error) {\n      console.log(error);\n      toastr.warning(\"Please check your informations!\", {\n        positionClass: \"toast-bottom-left\",\n      });\n    }\n  };\n\n  return (\n    <form onSubmit={submitSignIn}>\n      <div className=\"centralize\">\n        <h1>Sign in</h1>\n        <h5 className=\"sub__title_link\">\n          Stay updated on your professional world\n        </h5>\n        <div className=\"input-block\">\n          <input\n            onChange={handleChange}\n            className=\"input__link\"\n            type=\"text\"\n            id=\"email\"\n            spellCheck=\"false\"\n            required\n          />\n          <span className=\"placeholder\">Email address</span>\n        </div>\n      </div>\n      <div className=\"centralize mt-4\">\n        <div className=\"input-block\">\n          <input\n            onChange={handleChange}\n            className=\"input__link\"\n            type=\"password\"\n            id=\"password\"\n            spellCheck=\"false\"\n            required\n          />\n          <span className=\"placeholder\">Password</span>\n        </div>\n      </div>\n      <div className=\"centralize mt-4\">\n        <div className=\"input-block\">\n          <button className=\"btn shadow-none forgot__password\">\n            Forgot password?\n          </button>\n        </div>\n      </div>\n      <button\n        type=\"submit\"\n        className=\"btn btn-primary form-control mt-4 shadow-none submit__login__link\"\n      >\n        SIGN IN\n      </button>\n    </form>\n  );\n};\n\nexport default LoginFormLinkedin;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/helpers/FormDataHelper.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/postModal/PostModal.js",["1332","1333"],"import { addPostApi } from \"apis/postApi\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport React, { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport \"./reactModal.css\";\nimport formDataHelper from \"helpers/FormDataHelper\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\nModal.setAppElement(\"#root\");\n\nconst PostModal = ({ modalIsOpen, setIsModalOpen, posts, setPosts }) => {\n  const [post, setPost] = useState(\"\");\n  const [postImagePreview, setPostImagePreview] = useState(null);\n  const [postImage, setPostImage] = useState();\n\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n  function closeModal() {\n    setIsModalOpen(false);\n  }\n  const sendPost = async () => {\n    const formData = formDataHelper(postImage, \"postImage\", {\n      content: post,\n      user: userInfo?.user?._id,\n    });\n    const newPost = await addPostApi(formData);\n    setPosts([newPost, ...posts]);\n    setPost(\"\");\n    setPostImage(undefined);\n    setPostImagePreview(null);\n    setIsModalOpen(false);\n  };\n  const imagePreview = (e) => {\n    setPostImagePreview(URL.createObjectURL(e.target.files[0]));\n    setPostImage(e.target.files[0]);\n  };\n  return (\n    <Modal\n      isOpen={modalIsOpen}\n      onRequestClose={closeModal}\n      style={customStyles}\n      contentLabel=\"Example Modal\"\n    >\n      <h2>Create a post</h2>\n      <hr />\n      <div className=\"row\">\n        <div className=\"col-5 mx-2 d-flex my-2\">\n          <img\n            className=\"img__profil_post\"\n            src={urlImageAdapter(userInfo?.user?.image_url)}\n          />\n          <p className=\"ml-2 font-weight-bold\">{userInfo?.user?.fullname}</p>\n        </div>\n\n        <div className=\"col-12 my-3\">\n          <div className=\"fram\">\n            <textarea\n              style={{\n                width: \"100%\",\n                border: \"none\",\n                outline: \"none\",\n                padding: \"20px\",\n                overflow: \"hidden\",\n              }}\n              rows={5}\n              value={post}\n              onChange={(e) => setPost(e.target.value)}\n              className=\"shadow-none border-none outline-none\"\n              placeholder=\"What do you want to talk about ?\"\n            ></textarea>\n            <img\n              src={postImagePreview}\n              style={{ maxWidth: \"200px\" }}\n              className=\"mt-3\"\n            />\n          </div>\n        </div>\n        <div className=\"col-8 my-3 ml-2\">\n          <label className=\"ml-4  d-inline\" htmlFor=\"postImage\">\n            <ImageIcon\n              className=\"mt-1\"\n              style={{\n                transform: \"scale(1.5)\",\n                color: \"#0072b1\",\n                cursor: \"pointer\",\n              }}\n            />\n          </label>\n          <input\n            type=\"file\"\n            className=\"d-none\"\n            id=\"postImage\"\n            name=\"postImage\"\n            onChange={imagePreview}\n            multiple={false}\n          />\n        </div>\n        <div className=\"col-2 my-3\">\n          {post === \"\" ? (\n            <button disabled onClick={sendPost} className=\"btn btn-primary\">\n              Publish\n            </button>\n          ) : (\n            <button onClick={sendPost} className=\"btn btn-primary\">\n              Publish\n            </button>\n          )}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default PostModal;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/postApi.js",["1334"],"import { deleteRequest, getRequest, postRequest, putRequest } from \"apis\";\n\nexport const addPostApi = async (post) => {\n  try {\n    const res = await postRequest(\"post/\", post);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPostsApi = async () => {\n  try {\n    const res = await getRequest(\"post/\");\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const addLikeToPostApi = async (userId, postId) => {\n  try {\n    const res = await postRequest(`post/like/${userId}/${postId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteLikeFromPostApi = async (likeId, postId) => {\n  try {\n    const res = await postRequest(`post/dislike/${likeId}/${postId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const incrementViewApi = async (postId, userId) => {\n  try {\n    const res = await putRequest(`post/incrementView/${postId}/${userId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getLastPostApi = async (userId) => {\n  try {\n    const res = await getRequest(`post/getLastPost/${userId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/AddUser.js",["1335","1336","1337","1338","1339","1340","1341","1342","1343","1344","1345","1346"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { AiFillFileAdd } from \"react-icons/ai\";\nimport { getCountryByCode } from \"../../apis/countryApi\";\nimport \"../../components/aidchannel/webmaster/OrganizationForm.css\";\nimport {\n  AddExpert,\n  AddUserApi,\n  getAllHeadExpertsWithIdAndName,\n  getExpert,\n  updateExpert,\n} from \"../../apis/userApi\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\n\nconst AddUser = () => {\n  const history = useHistory();\n  const { codeCountry, idUser } = useParams();\n\n  const [content, setContent] = useState(\"\");\n  const [userImagePreview, setUserImagePreview] = useState(null);\n  const [userImage, setUserImage] = useState();\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    //formState: { errors },\n  } = useForm();\n\n  const onSubmit = async (data) => {\n    let formData = new FormData();\n    formData.append(\"adress\", data.adress);\n   \n    formData.append(\"role\", 2);\n    formData.append(\"email\", data.email);\n    formData.append(\"fullname\", data.fullname);\n    formData.append(\"phone\", data.phone);\n    if (userImage !== undefined) formData.append(\"image_url\", userImage);\n\n    await AddUserApi(formData);\n\n    history.push(`/web-master/users/listUsers/${codeCountry}`);\n  };\n\n  const imagePreview = (e) => {\n    setUserImagePreview(URL.createObjectURL(e.target.files[0]));\n    setUserImage(e.target.files[0]);\n  };\n\n  return (\n    <div className=\"container\">\n      <form>\n        <div className=\"row pb-5\">\n          <div className=\"col-12 col-lg-6 centralize mt-4\"></div>\n          <div className=\"col-12 col-lg-6 centralize mt-4\"></div>\n\n          <div className=\"form-group m-auto\">\n            <label className=\"logo-file d-inline\" htmlFor=\"expertImage\">\n              {userImagePreview && (\n                <img\n                  src={userImagePreview}\n                  alt=\"avatar\"\n                  style={{ cursor: \"pointer\" }}\n                  width=\"15%\"\n                  height=\"15%\"\n                  className=\"avatar\"\n                />\n              )}\n              {!userImagePreview && (\n                <span style={{ cursor: \"pointer\" }}>\n                  <AiFillFileAdd color=\"blue\" size={40} />\n                </span>\n              )}\n            </label>\n            <input\n              type=\"file\"\n              className=\"form-control-file ml-4 shadow-none logo-file d-none\"\n              id=\"expertImage\"\n              name=\"expertImage\"\n              onChange={imagePreview}\n              multiple={false}\n            />\n          </div>\n          <div className=\"col-12 col-lg-6 centralize mt-4\"></div>\n\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <div className=\"input-block\">\n              <input\n                className=\"input-org-form\"\n                type=\"text\"\n                id=\"fullname\"\n                spellCheck=\"false\"\n                {...register(\"fullname\")}\n              />\n              <span className=\"placeholder\">Full Name</span>\n            </div>\n          </div>\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <div className=\"input-block\">\n              <input\n                className=\"input-org-form\"\n                type=\"text\"\n                id=\"email\"\n                spellCheck=\"false\"\n                {...register(\"email\", {\n                  required: \"Email Required\",\n                  pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                })}\n              />\n              <span className=\"placeholder\">Email</span>\n            </div>\n          </div>\n\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <div className=\"input-block\">\n              <input\n                className=\"input-org-form\"\n                type=\"text\"\n                id=\"adress\"\n                spellCheck=\"false\"\n                {...register(\"adress\")}\n              />\n              <span className=\"placeholder\">Address</span>\n            </div>\n          </div>\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <div className=\"input-block\">\n              {\" \"}\n              <input\n                className=\"input-org-form\"\n                type=\"text\"\n                id=\"phone\"\n                spellCheck=\"false\"\n                {...register(\"phone\")}\n              />\n              <span className=\"placeholder\">Phone</span>\n            </div>\n          </div>\n          <button\n            onClick={handleSubmit(onSubmit)}\n            type=\"submit\"\n            className={\"btn btn-primary w-100 h-25 py-3 my-5\"}\n          >\n            Add User\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default AddUser;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/ListAddedUsers.js",["1347","1348","1349","1350","1351","1352","1353","1354","1355"],"import {\n  enableExpertOfMonth,\n  disabledExpertOfMonth,\n  getExpert,\n  deleteUser,\n} from \"apis/userApi\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport { getCountryByCode } from \"../../apis/countryApi\";\nimport {  getAddedUsersByWebmaster } from \"apis/userApi\";\n\nimport TableUser from \"components/aidchannel/webmaster/TableUser\";\n\nconst ListAddedUsers = () => {\n  const history = useHistory();\n  const { codeCountry, idUser } = useParams();\n  const [country, setCountry] = useState();\n  const [users, setUsers] = useState([]);\n\n  const getDataFromApi = useCallback(async () => {\n    const country = await getCountryByCode(codeCountry);\n    setCountry(country);\n    const user = await getAddedUsersByWebmaster();\n    setUsers(user?.reverse());\n  }, []);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const deleteUserr = async (user) => {\n    if (window.confirm(`Are you sure you wish to delete ${user.name} ?`)) {\n      try {\n        await deleteUser(user._id);\n        const newUsersList = users.filter(function(item) {\n          if (item[\"_id\"] === user?._id) return false;\n          return true;\n        });\n        setUsers(newUsersList);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <>\n        <h5></h5>\n        <TableUser />\n      </>\n    </div>\n  );\n};\n\nexport default ListAddedUsers;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/TableUser.js",["1356","1357","1358","1359","1360"],"import React from \"react\";\nimport MaterialTable from \"material-table\";\nimport { FcCalendar } from \"react-icons/fc\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport { deleteUser } from \"apis/userApi\";\n\nconst TableUser = () => {\n  const orgTableRef = React.createRef();\n  const history = useHistory();\n  const { codeCountry } = useParams();\n\n  const reloadTableData = () => {\n    orgTableRef.current.onQueryChange();\n  };\n\n  return (\n    <div>\n      <MaterialTable\n        tableRef={orgTableRef}\n        title=\"List of added users\"\n        columns={[\n          {\n            field: \"image_url\",\n            title: \"Profil\",\n            render: (rowData) => (\n              <img\n                className=\"img-fluid\"\n                src={urlImageAdapter(rowData?.image_url)}\n                style={{\n                  verticalAlign: \"middle\",\n                  width: \"50px\",\n                  height: \"50px\",\n                  borderRadius: \"50%\",\n                }}\n              />\n            ),\n            cellStyle: {\n              width: \"15%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Full Name\",\n            field: \"fullname\",\n            cellStyle: {\n              width: \"25%\",\n\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Email\",\n            field: \"email\",\n            cellStyle: {\n              width: \"25%\",\n\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Phone\",\n            field: \"phone\",\n            cellStyle: {\n              width: \"25%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"address\",\n            field: \"adress\",\n            cellStyle: {\n              width: \"25%\",\n              textAlign: \"center\",\n            },\n          },\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) => {\n            let url = `${process.env.REACT_APP_BACKEND}user/getAddedUsersByWebmasterPagination?`;\n            url += \"limit=\" + query.pageSize;\n            url += \"&page=\" + (query.page + 1);\n            axios\n              .post(url, {\n                searchText: query.search,\n              })\n              .then((result) => {\n                resolve({\n                  data: result.data.data,\n                  page: result.data.page - 1,\n                  totalCount: result.data.totalCount,\n                });\n              });\n          })\n        }\n        options={{\n          filtering: false,\n          search: true,\n          sorting: false,\n          headerStyle: {\n            backgroundColor: \"#0069d9\",\n            textAlign: \"center\",\n            color: \"white\",\n          },\n          actionsColumnIndex: -1,\n        }}\n        actions={[\n          {\n            icon: \"refresh\",\n            tooltip: \"Refresh Data\",\n            isFreeAction: true,\n            onClick: () =>\n              orgTableRef.current && orgTableRef.current.onQueryChange(),\n          },\n          {\n            icon: () => (\n              <button className=\"btn btn-danger border-none shadow-none\">\n                Delete\n              </button>\n            ),\n            onClick: async (event, user) => {\n              if (\n                window.confirm(\n                  `Are you sure you wish to delete ${user.fullname} ?`\n                )\n              ) {\n                try {\n                  await deleteUser(user?._id);\n                  reloadTableData();\n                  reloadTableData();\n                } catch (error) {\n                  console.log(error);\n                }\n              }\n            },\n          },\n        ]}\n      />\n    </div>\n  );\n};\n\nexport default TableUser;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/superadmin/ListOganizationsAdmin.js",["1361","1362","1363","1364","1365","1366"],"import TableOrganizationsAdmin from \"components/aidchannel/superadmin/TableOrganizationsAdmin\";\nimport TableOrganization from \"components/aidchannel/webmaster/TableOrganization\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport TableWebmaster from \"../../components/aidchannel/superadmin/TableWebmaster\";\n\nconst ListOrganizationsAdmin = () => {\n  const [webmaster, setWebmaster] = useState([]);\n  const history = useHistory();\n\n  return (\n    <div className=\"container\">\n      <>\n        <h1>Organizations</h1>\n        <hr />\n        <button\n          onClick={() => history.push(`/super-admin/add-organization`)}\n          className=\"btn btn-primary ml-3 mt-2 mb-3 shadow-none border-none\"\n        >\n          Add\n        </button>\n\n        <TableOrganizationsAdmin />\n      </>\n    </div>\n  );\n};\n\nexport default ListOrganizationsAdmin;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/linkedin/Network.js",["1367","1368"],"import { getInvitationsApi, sendInvitationApi } from \"apis/invitationApi\";\nimport { getRecommandationUsers } from \"apis/userApi\";\nimport Invitations from \"components/linkedin/invitations/Invitations\";\nimport UserCard from \"components/linkedin/userCard/UserCard\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Header from \"../../components/linkedin/header/Header\";\nimport \"./Network.css\";\nconst Network = () => {\n  const [users, setUsers] = useState();\n\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n  const getDataFromApi = useCallback(async () => {\n    const usersRecommandation = await getRecommandationUsers();\n    setUsers(usersRecommandation);\n  }, []);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const sendInvitation = async (idRecever) => {\n    const invitation = { sender: userInfo?.user?._id, recever: idRecever };\n    await sendInvitationApi(invitation);\n    const newUsers = users.filter((user) => {\n      if (user?._id == idRecever) return false;\n      return true;\n    });\n    setUsers(newUsers);\n  };\n\n  const listUsers = users?.map((user) => (\n    <div className=\"card__item\">\n      <UserCard user={user} onConnectClick={() => sendInvitation(user?._id)} />\n    </div>\n  ));\n\n  return (\n    <>\n      <Header />\n      <div className=\"container mb-5\">\n        <div className=\"row\">\n          <div className=\"col-4\"></div>\n          <div className=\"col-12 col-md-8\">\n            <Invitations />\n          </div>\n          {listUsers && (\n            <>\n              <div className=\"col-4\"></div>\n              <div className=\"col-12 col-md-8 mt-5 border p-4\">\n                <div className=\"network__people my-3\">People you may know</div>\n                <div className=\"card__container\">{listUsers}</div>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Network;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/linkedin/Profil.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/linkedin/MyDbaNetwork.js",["1369"],"import Feed from \"components/linkedin/feed/Feed\";\nimport Header from \"components/linkedin/header/Header\";\nimport NetworkGraph from \"components/linkedin/networkGraph/NetworkGraph\";\nimport Sidebar from \"components/linkedin/sidebar/Sidebar\";\nimport Widgets from \"components/linkedin/widget/Widgets\";\nimport React from \"react\";\n\nconst MyDbaNetwork = () => {\n  return (\n    <div>\n      <Header />\n      <div className=\" container my-5\">\n        <div className=\"row\">\n          <div className=\"col-12 col-md-3\">\n            <Sidebar />\n          </div>\n          <div className=\"col-12 col-md-6 d-none d-md-block\">\n            <div className=\"border\">\n              <NetworkGraph />\n            </div>\n          </div>\n          <div className=\"col-12 col-md-3 d-none d-md-block\">\n            <Widgets />\n          </div>\n          <div className=\"col-12 col-md-6 d-block d-md-none\">\n            {\" \"}\n            <Widgets />\n          </div>\n          <div className=\"col-12 col-md-3 d-block d-md-none\">\n            <div className=\"border\">hh</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MyDbaNetwork;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/linkedin/MyProjects.js",["1370","1371","1372","1373","1374","1375"],"import TableProject from \"components/aidchannel/webmaster/TableProject\";\nimport Feed from \"components/linkedin/feed/Feed\";\nimport Header from \"components/linkedin/header/Header\";\nimport NetworkGraph from \"components/linkedin/networkGraph/NetworkGraph\";\nimport Sidebar from \"components/linkedin/sidebar/Sidebar\";\nimport TableProjectsLinkedin from \"components/linkedin/TableProjectsLinkedin\";\nimport Widgets from \"components/linkedin/widget/Widgets\";\nimport ListProjects from \"pages/webmaster/ListProjects\";\nimport ListProjectsValides from \"pages/webmaster/ListProjectsValides\";\nimport React from \"react\";\nimport ListOfProjectsLinkedin from \"./ListOfProjectsLinkedin\";\n\nconst MyProjects = () => {\n  return (\n    <div>\n      <Header />\n      <div className=\" container my-5\">\n        <div className=\"row\">\n          <div className=\"col-12 col-md-3\">\n            <Sidebar />\n          </div>\n          <div className=\"col-12 col-md-9 d-none d-md-block\">\n            <div className=\"border\">\n           <ListOfProjectsLinkedin/>\n            </div>\n          </div>\n          {/* <div className=\"col-12 col-md-3 d-none d-md-block\">\n            <Widgets />\n          </div> */}\n          <div className=\"col-12 col-md-6 d-block d-md-none\">\n            {\" \"}\n            <Widgets />\n          </div>\n          <div className=\"col-12 col-md-3 d-block d-md-none\">\n            <div className=\"border\">hh</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MyProjects;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/linkedin/AddProjectByExpert.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/linkedin/ListOfProjectsLinkedin.js",["1376","1377","1378","1379","1380","1381","1382","1383","1384"],"import Flag from \"react-world-flags\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport MTableProject from \"../../components/aidchannel/webmaster/MTableProject\";\nimport { getAllProjectsByCountry } from \"../../apis/projectApi\";\n\nimport TableProjectAccepted from \"components/aidchannel/webmaster/TableProjectAccepted\";\nimport TableProjectsLinkedin from \"components/linkedin/TableProjectsLinkedin\";\n\nconst ListOfProjectsLinkedin = () => {\n \n  const history = useHistory();\n  \n\n  return (\n    <div className=\"container\">\n      <>\n        <button\n          onClick={() => history.push(`/linkedin/add-project`)}\n          className=\"btn btn-primary ml-3 my-3 shadow-none border-none\"\n         \n        >\n          Add\n        </button>\n        <TableProjectsLinkedin />\n      </>\n    </div>\n  );\n};\n\nexport default ListOfProjectsLinkedin;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/PojectFormLinkedin.js",["1385","1386","1387","1388","1389","1390","1391"],"import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport JoditEditor from \"jodit-react\";\nimport moment from \"moment\";\nimport { AiFillFileAdd } from \"react-icons/ai\";\nimport Select from \"react-select\";\nimport Header from \"components/linkedin/header/Header\";\nimport {\n  AddProject,\n  getProject2,\n  updateProject,\n} from \"../../apis/projectApi\";\n\nimport { getThematiques } from \"apis/thematiqueApi\";\nimport { getStatus } from \"apis/statusApi\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Row, FormGroup, FormLabel, Col } from \"react-bootstrap\";\nimport \"../../components/aidchannel/webmaster/ProjectForm.css\";\nimport { getOrganizationByType } from \"apis/organizationApi\";\nimport { getAllCops, getAllUsers } from \"apis/userApi\";\n\nconst PojectFormLinkedin = () => {\n  const history = useHistory();\n  const {  idProject } = useParams();\n  const editor = useRef(null);\n  const ObjEditor = useRef(null);\n  const [content, setContent] = useState(\"\");\n  const [objectives, setObjectives] = useState(\"\");\n  const [thematiquesOptions, setThematiquesOptions] = useState();\n  const [fundersOptions, setFundersOptions] = useState();\n  const [selectedFunder, setSelectedFunder] = useState(null);\n  const [subFundersOptions, setSubFundersOptions] = useState();\n  const [selectedSubFunder, setSelectedSubFunder] = useState(null);\n  const [implementersOptions, setImplementersOptions] = useState();\n  const [selectedImplementer, setSelectedImplementer] = useState(null);\n  const [subImplementersOptions, setSubImplementersOptions] = useState();\n  const [selectedSubImplementer, setSelectedSubImplementer] = useState(null);\n\n  const [statusOptions, setStatusOptions] = useState();\n  const [copOptions, setCopOptions] = useState();\n  const [selectedCop, setSelectedCop] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [selectedStatus, setSelectedStatus] = useState(null);\n  const [status, setStatus] = useState(null);\n  const [project, setProject] = useState();\n\n  const [projectLogoPreview, setProjectLogoPreview] = useState(null);\n  const [projectLogo, setProjectLogo] = useState();\n  const [approvalDate, setApprovalDate] = useState();\n  const [actualStart, setActualStart] = useState();\n  const [plannedEnd, setPlannedEnd] = useState();\n  const [actualEnd, setActualEnd] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const config = {\n    readonly: false,\n    placeholder: \"Description of the project\",\n  };\n  const configObj = {\n    readonly: false,\n    placeholder: \"Ojectives of the project\",\n  };\n\n  const { register, handleSubmit, setValue } = useForm();\n\n  const getDataFromApi = useCallback(async () => {\n    const thematiques = await getThematiques();\n    setThematiquesOptions(\n      thematiques?.map((thematique) => {\n        return {\n          value: thematique._id,\n          label: thematique.name,\n        };\n      })\n    );\n    const funders = await getOrganizationByType(\"Funding Agencies\");\n    const subfund = funders?.map((funder) => {\n      return {\n        value: funder._id,\n        label: funder.name,\n      };\n    });\n    setFundersOptions(subfund);\n    setSubFundersOptions(subfund);\n\n    const implementers = await getOrganizationByType(\"Implementing NGO\");\n    const subImpl = implementers?.map((implementer) => {\n      return {\n        value: implementer._id,\n        label: implementer.name,\n      };\n    });\n    setImplementersOptions(subImpl);\n    setSubImplementersOptions(subImpl);\n\n    const status = await getStatus();\n    setStatus(status);\n    setStatusOptions(\n      status?.map((sta) => {\n        return {\n          value: sta?._id,\n          label: sta?.name,\n        };\n      })\n    );\n   \n    const cops = await getAllUsers();\n    setCopOptions(\n      cops?.map((cop) => {\n        return {\n          value: cop?._id,\n          label: cop?.fullname,\n        };\n      })\n    );\n\n    if (idProject !== undefined) {\n      const project = await getProject2(idProject);\n      setProject(project);\n      setProjectLogoPreview(urlImageAdapter(project?.image_url));\n      if (project.thematique)\n        setSelectedOption({\n          value: project?.thematique?._id,\n          label: project?.thematique?.name,\n        });\n      if (project.status)\n        setSelectedStatus({\n          value: project?.status?._id,\n          label: project?.status?.name,\n        });\n      if (project.funder)\n        setSelectedFunder({\n          value: project?.funder?._id,\n          label: project?.funder?.name,\n        });\n      if (project.sub_funder)\n        setSelectedSubFunder({\n          value: project?.sub_funder[0]?._id,\n          label: project?.sub_funder[0]?.name,\n        });\n      if (project.implementer)\n        setSelectedImplementer({\n          value: project?.implementer?._id,\n          label: project?.implementer?.name,\n        });\n      if (project.sub_implementer)\n        setSelectedSubImplementer({\n          value: project?.sub_implementer[0]?._id,\n          label: project?.sub_implementer[0]?.name,\n        });\n      if (project.task_manager)\n        setSelectedCop({\n          value: project?.task_manager?._id,\n          label: project?.task_manager?.fullname,\n        });\n      if (project.description) setContent(project?.description);\n      if (project.objectives) setObjectives(project?.objectives);\n      if (project.approval_date)\n        setApprovalDate(moment(project?.approval_date).toDate());\n      if (project.actual_start)\n        setActualStart(moment(project?.actual_start).toDate());\n      if (project.actual_end)\n        setActualEnd(moment(project?.actual_end).toDate());\n      if (project.planned_end)\n        setPlannedEnd(moment(project?.planned_end).toDate());\n\n      //setContent(project?.task_manager);\n      if (project.name) setValue(\"name\", project?.name);\n      if (project.total_cost) setValue(\"total_cost\", project?.total_cost);\n      if (project.budget) setValue(\"budget\", project?.budget);\n      if (project.task_manager) setValue(\"task_manager\", project?.task_manager);\n      if (project.image_url) setValue(\"image_url\", project?.image_url);\n      if (project.row_data_org) setValue(\"row_data_org\", project?.row_data_org);\n    }\n  }, [idProject, setValue]);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const onSubmit = async (data) => {\n    //const project = await getProject2(selectedOption?.value);\n    let formData = new FormData();\n    formData.append(\"namefr\", \"\");\n  \n\n    if (selectedOption) formData.append(\"thematique\", selectedOption?.value);\n\n    if (selectedStatus) formData.append(\"status\", selectedStatus?.value);\n\n    if (selectedFunder) formData.append(\"funder\", selectedFunder?.value);\n\n    if (selectedSubFunder)\n      formData.append(\"sub_funder\", [selectedSubFunder?.value]);\n\n    if (selectedImplementer)\n      formData.append(\"implementer\", selectedImplementer?.value);\n\n    if (selectedSubImplementer)\n      formData.append(\"sub_implementer\", [selectedSubImplementer?.value]);\n\n    if (data.total_cost !== \"\") formData.append(\"total_cost\", data.total_cost);\n    // if (data.budget === \"\") formData.append(\"budget\", null);\n    //else formData.append(\"budget\", data.budget);\n\n    if (approvalDate) formData.append(\"approval_date\", approvalDate);\n\n    if (actualStart) formData.append(\"actual_start\", actualStart);\n\n    if (actualEnd) formData.append(\"actual_end\", actualEnd);\n\n    if (plannedEnd) formData.append(\"planned_end\", plannedEnd);\n\n    if (selectedCop) formData.append(\"task_manager\", selectedCop?.value);\n\n    formData.append(\"name\", data.name);\n\n    formData.append(\"description\", content);\n    formData.append(\"objectives\", objectives);\n    if (projectLogo != undefined) formData.append(\"projectImage\", projectLogo);\n\n    if (idProject !== undefined) {\n      setLoading(true);\n      await updateProject(idProject, formData);\n      setLoading(false);\n    } else {\n      \n      await AddProject(formData);\n      history.push(`/linkedin/myprojects`);\n    }\n  };\n\n  const handleThematiqueChange = (selected) => {\n    setSelectedOption(selected);\n  };\n\n  const handleChangeStatus = (selected) => {\n    setSelectedStatus(selected);\n  };\n  const imagePreview = (e) => {\n    setProjectLogoPreview(URL.createObjectURL(e.target.files[0]));\n    setProjectLogo(e.target.files[0]);\n  };\n  return (\n    <div className=\"container\">\n      \n      <form>\n        <div className=\"row\">\n          {/* {idProject !== undefined ? \"Save Modifications\" : \"Add Project\"} */}\n          <div className=\"centralize mt-4 col-12 col-lg-6\">\n            <div className=\"input-block\">\n              <input\n                className=\"input-org-form\"\n                type=\"text\"\n                id=\"name\"\n                spellCheck=\"false\"\n                {...register(\"name\", {\n                  required: \"Name required\",\n                })}\n              />\n              <span className=\"placeholder\" style={{ color: \"black\" }}>\n                Name\n              </span>\n            </div>\n          </div>\n          <div className=\"form-group m-auto\">\n            <label className=\"ml-4 logo-file d-inline\" htmlFor=\"projectLogo\">\n              {projectLogoPreview && (\n                <img\n                  src={projectLogoPreview}\n                  alt=\"avatar\"\n                  style={{ cursor: \"pointer\" }}\n                  width=\"15%\"\n                  height=\"15%\"\n                  className=\"avatar\"\n                />\n              )}\n              {!projectLogoPreview && (\n                <span style={{ cursor: \"pointer\" }}>\n                  <AiFillFileAdd color=\"blue\" size={40} />\n                </span>\n              )}\n            </label>\n            <input\n              type=\"file\"\n              className=\"form-control-file ml-4 shadow-none logo-file d-none\"\n              id=\"projectLogo\"\n              name=\"projectLogo\"\n              onChange={imagePreview}\n              multiple={false}\n            />\n          </div>\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <div className=\"input-block\">\n              <input\n                className=\"input-org-form\"\n                type=\"text\"\n                id=\"total_cost\"\n                spellCheck=\"false\"\n                {...register(\"total_cost\")}\n              />\n              <span className=\"placeholder\" style={{ color: \"black\" }}>\n                Total Cost\n              </span>\n            </div>\n          </div>\n          <div className=\"col-12 col-lg-6 centralize \">\n            <FormLabel className=\"label__form\">COP</FormLabel>\n            <Select\n              placeholder=\"Select COP \"\n              value={selectedCop}\n              onChange={(selected) => setSelectedCop(selected)}\n              options={copOptions}\n            />\n          </div>{\" \"}\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Thematic</FormLabel>\n            <Select\n              placeholder=\"Select the thematic \"\n              value={selectedOption}\n              onChange={handleThematiqueChange}\n              options={thematiquesOptions}\n            />\n          </div>{\" \"}\n          <div className=\"col-12 col-lg-6  centralize mt-4\">\n            <FormLabel className=\"label__form\">Status</FormLabel>\n            <Select\n              placeholder=\"Select the Status \"\n              value={selectedStatus}\n              onChange={handleChangeStatus}\n              options={statusOptions}\n            />\n          </div>\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Funder</FormLabel>\n            <Select\n              placeholder=\"Select the funder \"\n              value={selectedFunder}\n              onChange={(selected) => setSelectedFunder(selected)}\n              options={fundersOptions}\n            />\n          </div>{\" \"}\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Sub-funder</FormLabel>\n            <Select\n              placeholder=\"Select the Sub-funder \"\n              value={selectedSubFunder}\n              onChange={(selected) => setSelectedSubFunder(selected)}\n              options={subFundersOptions}\n            />\n          </div>{\" \"}\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Implementer</FormLabel>\n            <Select\n              placeholder=\"Select the Implementer \"\n              value={selectedImplementer}\n              onChange={(selected) => setSelectedImplementer(selected)}\n              options={implementersOptions}\n            />\n          </div>{\" \"}\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Sub-Implementer</FormLabel>\n            <Select\n              placeholder=\"Select the Sub-Implementer \"\n              value={selectedSubImplementer}\n              onChange={(selected) => setSelectedSubImplementer(selected)}\n              options={subImplementersOptions}\n            />\n          </div>{\" \"}\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Approval Date</FormLabel>\n\n            <DatePicker\n              className=\"input-org-form\"\n              selected={approvalDate}\n              onChange={(date) => setApprovalDate(date)}\n            />\n          </div>\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Actual Start</FormLabel>\n            <FormGroup>\n              <DatePicker\n                className=\"input-org-form\"\n                selected={actualStart}\n                onChange={(date) => setActualStart(date)}\n              />\n            </FormGroup>\n          </div>\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Actual End</FormLabel>{\" \"}\n            <FormGroup>\n              <DatePicker\n                className=\"input-org-form\"\n                selected={actualEnd}\n                onChange={(date) => setActualEnd(date)}\n              />{\" \"}\n            </FormGroup>\n          </div>\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Planned End</FormLabel>{\" \"}\n            <FormGroup>\n              <DatePicker\n                className=\"input-org-form\"\n                placeholder=\"Placeholder\"\n                selected={plannedEnd}\n                onChange={(date) => setPlannedEnd(date)}\n              />{\" \"}\n            </FormGroup>\n          </div>\n          <div className=\"col-12 mt-4\">\n            <FormLabel className=\"label__form\">Description</FormLabel>\n            <JoditEditor\n              ref={editor}\n              value={content}\n              config={config}\n              tabIndex={1}\n              onBlur={(newContent) => setContent(newContent)}\n            />\n          </div>{\" \"}\n          <div className=\"col-12 mt-4\">\n            <FormLabel className=\"label__form\">Objectives</FormLabel>{\" \"}\n            <JoditEditor\n              ref={ObjEditor}\n              value={objectives}\n              config={configObj}\n              tabIndex={1}\n              onBlur={(newContent) => setObjectives(newContent)}\n            />\n          </div>{\" \"}\n          {/* {project && (\n            <div className=\"container my-5 box-shadow-card-info p-4\">\n              <FormLabel className=\"label__form\">\n                Informations Related{\" \"}\n              </FormLabel>{\" \"}\n              <ReactJson src={project?.raw_data_org} />{\" \"}\n            </div>\n          )} */}\n          {!loading ? (\n            <button\n              onClick={handleSubmit(onSubmit)}\n              type=\"submit\"\n              className={\n                idProject !== undefined\n                  ? `btn btn-warning w-100 h-25 shadow-none my-3`\n                  : `btn btn-primary w-100 h-25 shadow-none my-3`\n              }\n            >\n              {idProject !== undefined ? \"Save Modifications\" : \"Add Project\"}\n            </button>\n          ) : (\n            <div className=\"spinner-border text-warning m-auto\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PojectFormLinkedin;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/TableProjectsLinkedin.js",["1392","1393","1394","1395","1396","1397"],"import React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { AiFillDelete, AiFillEdit } from \"react-icons/ai\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { FcCalendar } from \"react-icons/fc\";\nimport { CgDetailsMore } from \"react-icons/cg\";\nimport { BiShow } from \"react-icons/bi\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport axios from \"axios\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport { deleteProject } from \"apis/projectApi\";\n\nconst TableProjectsLinkedin = () => {\n  const tableRef = React.createRef();\n  const history = useHistory();\n  const { codeCountry } = useParams();\n\n  const reloadTableData = () => {\n    tableRef.current.onQueryChange();\n  };\n\n  return (\n    <div className=\"mt-4\">\n      <MaterialTable\n        tableRef={tableRef}\n        title=\"List of Projects\"\n        columns={[\n          {\n            field: \"image_url\",\n            title: \"Image\",\n            render: (rowData) => (\n              <img\n                className=\"img-fluid\"\n                src={urlImageAdapter(rowData.image_url)}\n                style={{\n                  verticalAlign: \"middle\",\n                  width: \"50px\",\n                  height: \"50px\",\n                  borderRadius: \"50%\",\n                }}\n              />\n            ),\n            cellStyle: {\n              width: \"10%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Name\",\n            field: \"name\",\n            cellStyle: {\n              width: \"40%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Thematique\",\n            field: \"thematique.name\",\n            cellStyle: {\n              width: \"20%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Total Cost\",\n            field: \"total_cost\",\n            type: \"numeric\",\n            cellStyle: {\n              width: \"15%\",\n              textAlign: \"center\",\n            },\n          },\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) => {\n            let url = `${process.env.REACT_APP_BACKEND}project/AddedByExpertPagination?`;\n            url += \"limit=\" + query.pageSize;\n            url += \"&page=\" + (query.page + 1);\n            axios\n              .post(url, {\n                searchText: query.search,\n              })\n              .then((result) => {\n                resolve({\n                  data: result.data.data,\n                  page: result.data.page - 1,\n                  totalCount: result.data.totalCount,\n                });\n              });\n          })\n        }\n        options={{\n          filtering: false,\n          search: true,\n          sorting: false,\n          headerStyle: {\n            backgroundColor: \"#0069d9\",\n            textAlign: \"center\",\n            color: \"white\",\n          },\n          actionsColumnIndex: -1,\n        }}\n        actions={[\n          {\n            icon: \"refresh\",\n            tooltip: \"Refresh Data\",\n            isFreeAction: true,\n            onClick: () => tableRef.current && tableRef.current.onQueryChange(),\n          },\n          {\n            icon: () => <FaRegEdit size={30} color=\"#ffc107\" />,\n            tooltip: \"Edit Project\",\n            onClick: (event, project) => {\n              history.push(\n                `/web-master/edit-project/${codeCountry}/${project?._id}`\n              );\n            },\n          },\n\n          {\n            icon: () => <BiShow size={30} />,\n            tooltip: \"Show in Browser\",\n            onClick: (event, project) => {\n              window.open(\n                `${process.env.REACT_APP_FRONT}projectdetails/${project._id}`,\n                \"_blank\"\n              );\n            },\n          },\n\n          {\n            icon: () => <AiFillDelete size={30} color=\"red\" />,\n            tooltip: \"Delete Project\",\n            onClick: async (event, project) => {\n              if (\n                window.confirm(\n                  `Are you sure you wish to delete ${project.name} ?`\n                )\n              ) {\n                try {\n                  await deleteProject(project._id);\n                  reloadTableData();\n                } catch (error) {\n                  console.log(error);\n                }\n              }\n            },\n          },\n        ]}\n      />\n    </div>\n  );\n};\n\nexport default TableProjectsLinkedin;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/networkGraph/NetworkGraph.js",["1398","1399","1400"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport Graph from \"react-graph-vis\";\nimport { useHistory } from \"react-router\";\nimport { getOneUser } from \"apis/userApi\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\n\nconst NetworkGraph = () => {\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n  const [user, setUser] = useState();\n  const [graph, setGraph] = useState({\n    nodes: [],\n    edges: [],\n  });\n\n  const history = useHistory();\n  const options = {\n    layout: {\n      hierarchical: true,\n    },\n    edges: {\n      color: \"#000000\",\n    },\n    interaction: {\n      zoomView: false,\n    },\n    physics: {\n      forceAtlas2Based: {\n        gravitationalConstant: -26,\n        centralGravity: 0.005,\n        springLength: 230,\n        springConstant: 0.18,\n      },\n      maxVelocity: 146,\n      solver: \"forceAtlas2Based\",\n      timestep: 0.35,\n      stabilization: {\n        enabled: true,\n        iterations: 2000,\n        updateInterval: 25,\n      },\n    },\n\n    height: \"500px\",\n  };\n\n  const getDataFromApi = useCallback(async () => {\n    const user = await getOneUser(userInfo?.user?._id);\n    setUser(user);\n\n    let nodes = [];\n    let edges = [];\n    nodes = [\n      ...nodes,\n      {\n        ...user,\n        id: user?._id,\n        label: user?.fullname,\n        margin: 20,\n        borderWidth: 10,\n        color: { border: \"red\" },\n\n        shape: \"circularImage\",\n        image: urlImageAdapter(user?.image_url),\n      },\n    ];\n    user?.connections?.map((connection) => {\n      nodes.push({\n        ...connection,\n        ...{\n          id: connection?._id,\n          label: connection?.fullname,\n          margin: 20,\n          borderWidth: 4,\n          color: { border: \"#0a66c2\" },\n          font: \"14px arail blue\",\n          shape: \"circularImage\",\n          image: urlImageAdapter(connection?.image_url),\n        },\n      });\n      edges.push({\n        from: user._id,\n        to: connection?._id,\n        arrows: { to: false, from: false },\n      });\n    });\n\n    setGraph({ ...graph, nodes, edges });\n  }, []);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const events = {\n    select: (event) => {\n      if (event.nodes.length > 0)\n        history.push(`/linkedin/profil/${event.nodes}`);\n    },\n  };\n\n  return (\n    <div>\n      {\" \"}\n      <Graph\n        key={Math.random()}\n        graph={graph}\n        options={options}\n        events={events}\n        getNetwork={(network) => {\n          //  if you want access to vis.js network api you can set the state in a parent component using this property\n        }}\n      />\n    </div>\n  );\n};\n\nexport default NetworkGraph;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/comment/Comment.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/commentApi.js",["1401","1402"],"import { deleteRequest, getRequest, postRequest, putRequest } from \"apis\";\n\nexport const addCommentApi = async (comment) => {\n  try {\n    const res = await postRequest(\"comment/\", comment);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getCommentsApi = async ({ pageParam = 1, queryKey }) => {\n  const [limitPage, idPost] = queryKey;\n  const { data } = await getRequest(\n    `comment/${idPost}?limit=${limitPage}&page=${pageParam}`\n  );\n\n  return { data: data.data, page: pageParam };\n};\n\nexport const getNumberCommentsApi = async (idPost) => {\n  try {\n    const res = await getRequest(`comment/numberComment/${idPost}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/invitationApi.js",[],"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/superadmin/TableOrganizationsAdmin.js",["1403","1404"],"import React from \"react\";\nimport MaterialTable from \"material-table\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport axios from \"axios\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport { deleteOrganization } from \"apis/organizationApi\";\n\nconst TableOrganizationsAdmin = () => {\n  const orgTableRef = React.createRef();\n  const history = useHistory();\n  const { codeCountry } = useParams();\n\n  const reloadTableData = () => {\n    orgTableRef.current.onQueryChange();\n  };\n\n  return (\n    <div>\n      <MaterialTable\n        tableRef={orgTableRef}\n        title=\"List of organizations\"\n        columns={[\n          {\n            field: \"logo\",\n            title: \"Logo\",\n            render: (rowData) => (\n              <img\n                className=\"img-fluid\"\n                src={urlImageAdapter(rowData?.logo)}\n                style={{\n                  verticalAlign: \"middle\",\n                  width: \"50px\",\n                  height: \"50px\",\n                  borderRadius: \"50%\",\n                }}\n              />\n            ),\n            cellStyle: {\n              width: \"10%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Name\",\n            field: \"name\",\n            cellStyle: {\n              width: \"40%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Country\",\n            field: \"country.name\",\n            cellStyle: {\n              width: \"20%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Organization size\",\n            field: \"organization_size\",\n            cellStyle: {\n              width: \"20%\",\n              textAlign: \"center\",\n            },\n          },\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) => {\n            let url = `${process.env.REACT_APP_BACKEND}organization/getAllOrganizationsByPagination?`;\n            url += \"limit=\" + query.pageSize;\n            url += \"&page=\" + (query.page + 1);\n            axios\n              .post(url, {\n                searchText: query.search,\n              })\n              .then((result) => {\n                resolve({\n                  data: result.data.data,\n                  page: result.data.page - 1,\n                  totalCount: result.data.totalCount,\n                });\n              });\n          })\n        }\n        options={{\n          filtering: false,\n          search: true,\n          sorting: false,\n          headerStyle: {\n            backgroundColor: \"#0069d9\",\n            textAlign: \"center\",\n            color: \"white\",\n          },\n          actionsColumnIndex: -1,\n        }}\n        actions={[\n          {\n            icon: \"refresh\",\n            tooltip: \"Refresh Data\",\n            isFreeAction: true,\n            onClick: () =>\n              orgTableRef.current && orgTableRef.current.onQueryChange(),\n          },\n          {\n            icon: () => <FaRegEdit size={30} color=\"#ffc107\" />,\n            tooltip: \"Edit Organization\",\n            onClick: (event, organization) => {\n              history.push(\n                `/super-admin/edit-organization/${organization?._id}`\n              );\n            },\n          },\n          {\n            icon: () => <AiFillDelete size={30} color=\"red\" />,\n            tooltip: \"Delete Organization\",\n            onClick: async (event, organization) => {\n              if (\n                window.confirm(\n                  `Are you sure you wish to delete ${organization.name} ?`\n                )\n              ) {\n                try {\n                  await deleteOrganization(organization._id);\n                  reloadTableData();\n                } catch (error) {\n                  console.log(error);\n                }\n              }\n            },\n          },\n        ]}\n      />\n    </div>\n  );\n};\n\nexport default TableOrganizationsAdmin;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/profilHeader/ProfilHeader.js",["1405","1406","1407","1408","1409"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getOneUser } from \"apis/userApi\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport \"./ProfilHeader.css\";\nimport {\n  acceptInvitationApi,\n  getOneInvitationApi,\n  ignoreInvitationsApi,\n  sendInvitationApi,\n} from \"apis/invitationApi\";\n\nconst ProfilHeader = () => {\n  const { idUser } = useParams();\n  const [user, setUser] = useState();\n  const [invitation, setInvitation] = useState();\n  const [Isfriend, setIsFriend] = useState(false);\n  const [myAccount, setMyAccount] = useState();\n\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n  const getDataFromApi = useCallback(async () => {\n    const user = await getOneUser(idUser);\n    setUser(user);\n    if (userInfo?.user?._id != user?._id) {\n      const invi = await getOneInvitationApi(userInfo?.user?._id, user?._id);\n      setInvitation(invi);\n    }\n    const me = await getOneUser(userInfo?.user?._id);\n    setMyAccount(me);\n\n    const friend = me?.connections?.filter(\n      (connection) => connection?._id === idUser\n    );\n    console.log(friend, \"friend\");\n    if (friend?.length > 0) setIsFriend(true);\n  }, []);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const sendInvitation = async (idRecever) => {\n    const invitation = { sender: userInfo?.user?._id, recever: idRecever };\n    await sendInvitationApi(invitation);\n    setInvitation(invitation);\n  };\n\n  const ignoreInvitation = async (idInvitation) => {\n    await ignoreInvitationsApi(idInvitation);\n    setInvitation(undefined);\n  };\n\n  const acceptInvitation = async (idInvitation) => {\n    await acceptInvitationApi(idInvitation);\n    setInvitation(undefined);\n    setIsFriend(true);\n  };\n\n  return (\n    <div className=\"row mt-4\">\n      {user && myAccount && (\n        <>\n          <div className=\"col-12   profile-background-image\">\n            {\" \"}\n            <img\n              src={urlImageAdapter(user?.image_url)}\n              className=\"picture__image\"\n            />\n          </div>\n          <div className=\"col-12  mt-5\">\n            <h1 className=\"fullname__profil\">{user?.fullname}</h1>\n            <div className=\"job__title\">{user?.job_title}</div>\n            <div className=\"adresse__profile\">{user?.adress}</div>\n            <div className=\"relations__profile mt-2\">\n              {user?.connections?.length} connections\n            </div>\n          </div>\n          {user?._id !== myAccount?._id && (\n            <div className=\"col-12 mt-2\">\n              {!invitation && Isfriend === false && (\n                <button\n                  onClick={() => sendInvitation(user?._id)}\n                  className=\"connect__profil\"\n                >\n                  Connect\n                </button>\n              )}\n              {invitation && invitation?.recever == userInfo?.user?._id && (\n                <>\n                  <button\n                    onClick={() => ignoreInvitation(invitation?._id)}\n                    className=\"ignore__profil\"\n                  >\n                    Ignore\n                  </button>\n                  <button\n                    onClick={() => acceptInvitation(invitation?._id)}\n                    className=\"connect__profil ml-3\"\n                  >\n                    Accept\n                  </button>\n                </>\n              )}\n              {invitation && invitation?.sender == userInfo?.user?._id && (\n                <button\n                  onClick={() => ignoreInvitation(invitation?._id)}\n                  className=\"ignore__profil\"\n                >\n                  Cancel\n                </button>\n              )}\n\n              <button className=\"message__profil ml-4 \">Message</button>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ProfilHeader;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/userCard/UserCard.js",["1410"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport \"./UserCard.css\";\n\nconst UserCard = ({ user, onConnectClick, loading }) => {\n  const history = useHistory();\n\n  return (\n    <div className=\"border pb-3\">\n      <div className=\"card__background__image\">\n        {\" \"}\n        <img\n          src={urlImageAdapter(user?.image_url)}\n          className=\"card__picture__image\"\n        />\n      </div>\n      <div className=\"mt-5\">\n        <h1\n          className=\"card__fullname__profil\"\n          onClick={() => history.push(`/linkedin/profil/${user?._id}`)}\n        >\n          {user?.fullname}\n        </h1>\n        <div className=\"card__job__title\">{user?.job_title}</div>\n        <div className=\"card__adresse__profile\">{user?.adress}</div>\n        <div className=\"card__relations__profile mt-3\">\n          10 mutual connections\n        </div>\n      </div>\n      <div className=\"col-12 mt-2 d-flex\">\n        {loading ? (\n          <div class=\"spinner-border text-primary\" role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n          </div>\n        ) : (\n          <button\n            className=\"card__connect__profil mx-auto\"\n            onClick={onConnectClick}\n          >\n            Connect\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UserCard;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/invitations/Invitations.js",["1411","1412","1413","1414"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  acceptInvitationApi,\n  getInvitationsApi,\n  ignoreInvitationsApi,\n} from \"apis/invitationApi\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport \"./Invitations.css\";\n\nconst Invitations = () => {\n  const [invitations, setInvitations] = useState();\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n  const history = useHistory();\n\n  const getDataFromApi = useCallback(async () => {\n    const myInvitations = await getInvitationsApi(userInfo?.user?._id);\n    setInvitations(myInvitations);\n  }, []);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const ignoreInvitation = async (idInvitation) => {\n    await ignoreInvitationsApi(idInvitation);\n    const newInvitations = invitations.filter((invitation) => {\n      if (invitation?._id == idInvitation) return false;\n      return true;\n    });\n    setInvitations(newInvitations);\n  };\n\n  const acceptInvitation = async (idInvitation) => {\n    await acceptInvitationApi(idInvitation);\n    const newInvitations = invitations.filter((invitation) => {\n      if (invitation?._id == idInvitation) return false;\n      return true;\n    });\n    setInvitations(newInvitations);\n  };\n\n  const listInvitations = invitations?.map((invitation) => (\n    <>\n      <div className=\"col-2 col-md-1 my-3 \">\n        <img\n          className=\"profil__invitation\"\n          src={urlImageAdapter(invitation?.sender?.image_url)}\n        />\n      </div>\n      <div className=\"col-5 col-md-6 my-3 ml-4 \">\n        <span\n          onClick={() =>\n            history.push(`/linkedin/profil/${invitation?.sender?._id}`)\n          }\n          className=\"fullname__invitation\"\n        >\n          {invitation?.sender?.fullname}\n        </span>\n        <span className=\"job__title__invitation\">\n          {invitation?.sender?.job_title}\n        </span>\n        <span className=\"adresse__profile__invitation\">\n          {invitation?.sender?.adress}\n        </span>\n      </div>\n      <div className=\"col-3 col-md-4 my-3 my-sm-3  my-lg-5\">\n        <button\n          onClick={() => ignoreInvitation(invitation?._id)}\n          className=\"ignore__invitation my-1 my-lg-0 mr-2\"\n        >\n          Ignore\n        </button>\n        <button\n          onClick={() => acceptInvitation(invitation?._id)}\n          className=\"accept__invitation\"\n        >\n          Accept\n        </button>\n      </div>\n    </>\n  ));\n\n  return (\n    <div className=\"row  mt-5\">\n      <div className=\"col-12\">\n        <div className=\"row border\">\n          <div className=\"col-8 col-md-10 my-3 invitation__invitation\">\n            Invitations\n          </div>\n          <div className=\"col-4 col-md-2 my-3 seeall__invitation\">See all</div>\n        </div>\n        <div className=\"row border-bottom border-right border-left\">\n          {listInvitations}\n        </div>\n      </div>\n      <hr />\n    </div>\n  );\n};\n\nexport default Invitations;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/superadmin/EditOrganizationAdmin.js",["1415","1416"],"import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Flag from \"react-world-flags\";\nimport OrganizationForm from \"../../components/aidchannel/webmaster/OrganizationForm\";\n\nconst EditOrganizationAdmin = () => {\n  // const { idOrganization } = useParams();\n  return (\n    <div className=\"container\">\n      <h1>Edit</h1>\n      <hr />\n      <OrganizationForm />\n    </div>\n  );\n};\n\nexport default EditOrganizationAdmin;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/superadmin/AddOrganizationAdmin.js",["1417","1418"],"import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Flag from \"react-world-flags\";\nimport OrganizationForm from \"../../components/aidchannel/superadmin/OrganizationForm\";\n\nconst AddOrganizationAdmin = () => {\n  //   const { idOrganization } = useParams();\n  return (\n    <div className=\"container\">\n      <h1>Add Organization</h1>\n      <hr />\n      <OrganizationForm />\n    </div>\n  );\n};\n\nexport default AddOrganizationAdmin;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/superadmin/OrganizationForm.js",["1419","1420","1421","1422","1423"],"import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport JoditEditor from \"jodit-react\";\nimport Select from \"react-select\";\nimport { getCountryByCode } from \"../../../apis/countryApi\";\nimport {\n  AddOrganization,\n  getAllOrganizationsByPagination,\n  getOrganization,\n  updateOrganization,\n  getOrganizationByType,\n  disabledImplementerOfMonth,\n  disabledDonorOfMonth,\n  enableImplementerOfMonth,\n  enableDonorOfMonth,\n} from \"../../../apis/organizationApi\";\nimport { index } from \"../../../apis/countryApi\";\nimport \"../webmaster/OrganizationForm.css\";\nimport fakeLogo from \"../../../assets/images/fakeLogo.png\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport { Checkbox } from \"@material-ui/core\";\n\nconst AddOrganizationForm = () => {\n  const history = useHistory();\n  // const { codeCountry, idSubOrganization } = useParams();\n  const { idOrganization } = useParams();\n  const editor = useRef(null);\n  const [content, setContent] = useState(\"\");\n  const [options, setOptions] = useState();\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [organization, setOrganization] = useState();\n  const [isResResData, setIsResData] = useState(false);\n  const [logoPreview, setLogoPreview] = useState(null);\n  const [logo, setLogo] = useState();\n  const [checkedD, setCheckedD] = useState();\n  const [checkedI, setCheckedI] = useState();\n\n  const config = {\n    readonly: false,\n    placeholder: \"Write Organization description\",\n  };\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    //formState: { errors },\n  } = useForm();\n\n  const getDataFromApi = useCallback(async () => {\n    const organizations = await getOrganization();\n    setOrganization(organizations);\n    setOptions(\n      organizations?.map((org) => {\n        return {\n          value: org._id,\n          label: org.name,\n        };\n      })\n    );\n    if (idOrganization !== undefined) {\n      const Org = await getOrganization(idOrganization);\n      setOrganization(Org);\n      setLogoPreview(organization?.logo);\n\n      setSelectedOption({\n        value: Org?.head_office_id?._id,\n        label: Org?.head_office_id?.name,\n      });\n\n      setContent(Org?.description);\n      setValue(\"name\", Org?.name);\n      setValue(\"organization_size\", Org?.organization_size);\n      setValue(\"youtube_url\", Org?.youtube_url);\n\n      if (Org.twitter_username) {\n        setValue(\n          \"twitter_username\",\n          `https://twitter.com/${Org?.twitter_username}`\n        );\n      }\n    } else {\n      setLogoPreview(fakeLogo);\n    }\n    setIsResData(true);\n  }, [idOrganization, setValue, isResResData]);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const onSubmit = async (data) => {\n    // const country = await getCountryByCode(codeCountry);\n    const orgTypes = await getOrganizationByType(selectedOption?.value);\n    const countries_with_offices = await index(selectedOption?.value);\n\n    let formData = new FormData();\n\n    formData.append(\n      \"organization_types\",\n      JSON.stringify(orgTypes?.organization_types)\n    );\n    formData.append(\n      \"countries_with_offices\",\n      JSON.stringify(countries_with_offices?.countries_with_offices)\n    );\n\n    if (data.twitter_username === \"\") formData.append(\"twitter_username\", null);\n    else\n      formData.append(\n        \"twitter_username\",\n        data?.twitter_username?.substring(20)\n      );\n\n    if (data.youtube_url === \"\") formData.append(\"youtube_url\", null);\n    else formData.append(\"youtube_url\", data.youtube_url);\n    if (data.organization_size === \"\")\n      formData.append(\"organization_size\", null);\n    else formData.append(\"organization_size\", data.organization_size);\n    if (content === \"\") formData.append(\"description\", null);\n    else formData.append(\"description\", content);\n    if (logo != undefined) formData.append(\"logoOrg\", logo);\n\n    formData.append(\"name\", data.name);\n\n    console.log(formData);\n    if (idOrganization !== undefined) {\n      await updateOrganization(idOrganization, formData);\n    } else {\n      await AddOrganization(formData);\n    }\n\n    // history.push(`/web-master/organizations/${codeCountry}`);\n  };\n\n  const handleChange = (selectedOption) => {\n    setSelectedOption(selectedOption);\n  };\n\n  const handleChangeCheckboxImplementer = async () => {\n    setCheckedI(!checkedI);\n    if (checkedI === true) {\n      await disabledImplementerOfMonth(idOrganization);\n    } else {\n      await enableImplementerOfMonth(idOrganization);\n    }\n  };\n  const handleChangeCheckboxDonor = async () => {\n    setCheckedD(!checkedD);\n    if (checkedD === true) {\n      await disabledDonorOfMonth(idOrganization);\n    } else {\n      await enableDonorOfMonth(idOrganization);\n    }\n  };\n\n  const imagePreview = (e) => {\n    setLogoPreview(URL.createObjectURL(e.target.files[0]));\n    setLogo(e.target.files[0]);\n  };\n\n  return (\n    <div className=\"container\">\n      {\n        /*isResResData === true && logoPreview && */ <form>\n          <div className=\"row pb-5\">\n            <div className=\"form-group m-auto col-12\">\n              <label className=\"ml-4 logo-file d-inline\" htmlFor=\"logoOrg\">\n                {logoPreview && (\n                  <img\n                    src={urlImageAdapter(logoPreview)}\n                    alt=\"avatar\"\n                    width=\"6%\"\n                    className=\"avatar\"\n                  />\n                )}\n              </label>\n              <input\n                type=\"file\"\n                className=\"form-control-file ml-4 shadow-none logo-file d-none\"\n                id=\"logoOrg\"\n                name=\"logoOrg\"\n                onChange={imagePreview}\n                multiple={false}\n              />\n            </div>\n            <div className=\"centralize mt-4 col-12 col-lg-6\">\n              <div className=\"input-block\">\n                <input\n                  className=\"input-org-form\"\n                  type=\"text\"\n                  id=\"name\"\n                  spellCheck=\"false\"\n                  {...register(\"name\", {\n                    required: \"Name required\",\n                  })}\n                />\n                <span className=\"placeholder\">Name </span>\n              </div>\n            </div>\n            <div className=\"col-12 col-lg-6 centralize mt-4\">\n              <div className=\"input-block\">\n                <input\n                  className=\"input-org-form\"\n                  type=\"text\"\n                  id=\"organization_size\"\n                  spellCheck=\"false\"\n                  {...register(\"organization_size\")}\n                />\n                <span className=\"placeholder\">Organization Size</span>\n              </div>\n            </div>\n            <div className=\"col-12 col-lg-6 centralize mt-4\">\n              <div className=\"input-block\">\n                <input\n                  className=\"input-org-form\"\n                  type=\"text\"\n                  id=\"youtube_url\"\n                  spellCheck=\"false\"\n                  {...register(\"youtube_url\")}\n                />\n                <span className=\"placeholder\">Youtube Channel URL</span>\n              </div>\n            </div>\n            <div className=\"col-12 col-lg-6 centralize mt-4\">\n              <div className=\"input-block\">\n                <input\n                  className=\"input-org-form\"\n                  type=\"text\"\n                  id=\"twitter_username\"\n                  spellCheck=\"false\"\n                  {...register(\"twitter_username\")}\n                />\n                <span className=\"placeholder\">Twitter URL</span>\n              </div>\n            </div>\n            <div className=\"col-12 col-lg-6 centralize mt-4\">\n              <Select\n                placeholder=\"Select Organization type\"\n                value={selectedOption}\n                onChange={handleChange}\n                options={options}\n              />\n            </div>{\" \"}\n            <div className=\"col-12 col-lg-6 centralize mt-4\">\n              <Select\n                placeholder=\"Select the Country office\"\n                value={selectedOption}\n                onChange={handleChange}\n                options={options}\n              />\n            </div>\n            <div>\n              {/* <h5> imp</h5> */}\n              <div className=\"form-check mt-4\">\n                <Checkbox\n                  classname=\"col-12 col-lg-6  mr-5\"\n                  checked={checkedD}\n                  onChange={handleChangeCheckboxDonor}\n                  inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                  style={{ color: \"blue\" }}\n                />\n                <label className=\"form-check-label  mr-5\" for=\"defaultCheck1\">\n                  Donor\n                </label>\n\n                <Checkbox\n                  classname=\"\"\n                  checked={checkedI}\n                  onChange={handleChangeCheckboxImplementer}\n                  inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                  style={{ color: \"blue\" }}\n                />\n                <label className=\"form-check-label\" for=\"defaultCheck1\">\n                  Implementer\n                </label>\n              </div>\n            </div>\n            <div className=\"col-12 mt-4\">\n              <JoditEditor\n                ref={editor}\n                value={content}\n                config={config}\n                tabIndex={1}\n                onBlur={(newContent) => setContent(newContent)}\n              />\n            </div>\n            <button\n              onClick={handleSubmit(onSubmit)}\n              type=\"submit\"\n              className=\"btn btn-primary w-100 h-25 submit-login my-5 \"\n            >\n              {idOrganization !== undefined\n                ? \"Save Modifications\"\n                : \"Add Organization\"}\n            </button>\n          </div>\n        </form>\n      }\n    </div>\n  );\n};\n\nexport default AddOrganizationForm;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/linkedin/ChoiceOftheProjectList.js",["1424"],"import React, { useState, useRef } from \"react\";\nimport { useInfiniteQuery } from \"react-query\";\nimport useIntersectionObserver from \"../../helpers/useIntersectionObserver\";\n\nimport ProjectCard from \"../../components/aidchannel/project/ProjectCard\";\nimport { getProjectOfMonthScrolling } from \"../../apis/projectApi\";\nimport PublicFooterHomepage from \"components/layout/footer/PublicFooterHomepage\";\nimport Header from \"components/linkedin/header/Header\";\nimport InputSearch from \"components/aidchannel/general/InputSearch\";\nconst ChoiceOftheProjectList = () => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [limit] = useState(9);\n\n  const loadMoreButtonRef = useRef();\n\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n  } = useInfiniteQuery([searchText, limit], getProjectOfMonthScrolling, {\n    getNextPageParam: (lastPage, pages) => {\n      if (lastPage.data.length === limit) return parseInt(lastPage.page) + 1;\n      return false;\n    },\n  });\n\n  useIntersectionObserver({\n    target: loadMoreButtonRef,\n    onIntersect: fetchNextPage,\n    enabled: hasNextPage,\n  });\n\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n        <h1 className=\"heading my-4\">\n          Projects\n          <span className=\"sub-heading\"> of AidChannel </span>\n        </h1>\n        <InputSearch\n          setSearchText={setSearchText}\n          searchText={searchText}\n          placeholder={`Search for your Project`}\n        />\n        <div className=\"row\">\n          {data?.pages.map((group, i) => (\n            <React.Fragment key={i}>\n              {group.data.map((project, index) => (\n                <div key={index} className=\"col-12 col-md-6 col-lg-4 my-4\">\n                  <ProjectCard project={project} key={index} />\n                </div>\n              ))}\n            </React.Fragment>\n          ))}\n        </div>\n        <div style={{ marginTop: \"20px\" }}>\n          <button\n            ref={loadMoreButtonRef}\n            onClick={() => fetchNextPage()}\n            disabled={!hasNextPage || isFetchingNextPage}\n          >\n            {isFetchingNextPage\n              ? \"Loading more ....\"\n              : hasNextPage\n              ? \"Load More\"\n              : \"Nothing more to load\"}\n          </button>\n        </div>\n      </div>\n    \n    </>\n  );\n};\n\nexport default ChoiceOftheProjectList;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/viewApi.js",["1425","1426"],"import { deleteRequest, getRequest, postRequest, putRequest } from \"apis\";\n\nexport const InsertViewApi = async (view) => {\n         try {\n           const res = await postRequest(\"/\", view);\n           return res.data;\n         } catch (error) {\n           console.log(error);\n         }\n       };\n\nexport const getNumberProfiles = async (idUser,idProfile) => {\n  try {\n    const res = await getRequest(`view/${idUser}/${idProfile}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};       ","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/NetworkGraph2.js",["1427","1428","1429","1430","1431","1432","1433","1434","1435","1436","1437","1438","1439","1440","1441","1442"],"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/NetworkGraph4.js",["1443","1444","1445"],"import Graph from \"react-graph-vis\";\nimport React, { useState } from \"react\";\nimport Color from \"color\";\nimport ReactDOM from \"react-dom\";\nimport \"./Graph.css\";\n\nconst options = {\n  autoResize: true,\n  height: \"600\",\n  width: \"100%\",\n  interaction: {\n    navigationButtons: true,\n    keyboard: true,\n    tooltipDelay: 50,\n  },\n  layout: {\n    randomSeed: undefined,\n    improvedLayout: true,\n    clusterThreshold: 150,\n    hierarchical: {\n      enabled: false,\n      levelSeparation: 150,\n      nodeSpacing: 100,\n      treeSpacing: 200,\n      blockShifting: true,\n      edgeMinimization: true,\n      parentCentralization: true,\n      // direction: 'UD',        // UD, DU, LR, RL\n      sortMethod: \"hubsize\", // hubsize, directed\n      shakeTowards: \"leaves\", // roots, leaves\n    },\n  },\n  // edges: {\n  //   color: 'white'\n  // },\n\n  nodes: {\n    shape: \"box\",\n    widthConstraint: 120,\n    heightConstraint: 72,\n    shapeProperties: {\n      borderRadius: 20,\n    },\n  },\n  edges: {\n    smooth: {\n      type: \"cubicBezier\",\n      forceDirection: \"horizontal\",\n      roundness: 0.9,\n    },\n    color: \"white\",\n  },\n};\n\nfunction randomColor() {\n  const red = Math.floor(Math.random() * 256)\n    .toString(16)\n    .padStart(2, \"0\");\n  const green = Math.floor(Math.random() * 256)\n    .toString(16)\n    .padStart(2, \"0\");\n  const blue = Math.floor(Math.random() * 256)\n    .toString(16)\n    .padStart(2, \"0\");\n  return `#${red}${green}${blue}`;\n}\n\nfunction NetworkGraph4() {\n  var activities = [\n    {\n      id: 1,\n      x: 0,\n      y: 0,\n      label: \"Activity 1 \",\n      title: \"user6 \\n CTO\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#33FFDE\",\n      widthConstraint: 200,\n      heightConstraint: 20,\n    },\n\n    {\n      id: 2,\n      x: 0,\n      y: 100,\n      label: \"Activity 2\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#33FFDE\",\n      widthConstraint: 200,\n      heightConstraint: 20,\n    },\n\n    {\n      id: 3,\n      x: 0,\n      y: 200,\n      label: \"Activity 3\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#33FFDE\",\n      widthConstraint: 200,\n      heightConstraint: 20,\n    },\n\n    {\n      id: 4,\n      x: 0,\n      y: 300,\n      label: \"Activity 4\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#33FFDE\",\n      widthConstraint: 200,\n      heightConstraint: 20,\n    },\n  ];\n  var outputs = [\n    {\n      id: 10,\n      x: 300,\n      y: 0,\n      label: \"output 1 \",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#33F3FF\",\n      widthConstraint: 200,\n      heightConstraint: 50,\n    },\n\n    {\n      id: 11,\n      x: 300,\n      y: 100,\n      label: \"output 2\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#33F3FF\",\n      widthConstraint: 200,\n      heightConstraint: 50,\n    },\n\n    {\n      id: 12,\n      x: 300,\n      y: 200,\n      label: \"output 3\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#33F3FF\",\n      widthConstraint: 200,\n      heightConstraint: 50,\n    },\n\n    {\n      id: 14,\n      x: 300,\n      y: 300,\n      label: \"Activity 4\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#33F3FF\",\n      widthConstraint: 200,\n      heightConstraint: 50,\n    },\n  ];\n\n  var outcomes = [\n    {\n      id: 20,\n      x: 600,\n      y: 0,\n      label: \"outcome 1 \",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      // color:\"#338DFF\",\n      widthConstraint: 200,\n      heightConstraint: 100,\n    },\n\n    {\n      id: 21,\n      x: 600,\n      y: 150,\n      label: \"outcome 2\",\n      title: \"user5 \\n Data Analyst\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      //  color:\"#338DFF\",\n      widthConstraint: 200,\n      heightConstraint: 100,\n    },\n\n    {\n      id: 22,\n      x: 600,\n      y: 300,\n      label: \"output 3\",\n      title: \"user5 \\n Data Analyst\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#338DFF\",\n      widthConstraint: 200,\n      heightConstraint: 100,\n    },\n  ].map((c, i) => ({\n    ...c,\n    color: {\n      border: Color(\"#ffffff\")\n        .darken(0.2)\n        .hex(),\n      background: \"#ffffff\",\n      highlight: {\n        border: Color(\"#ffffff\")\n          .darken(0.3)\n          .hex(),\n        background: Color(\"#ffffff\")\n          .darken(0.2)\n          .hex(),\n      },\n      hover: {\n        border: Color(\"#ffffff\")\n          .darken(0.3)\n          .hex(),\n        background: Color(\"#ffffff\")\n          .darken(0.2)\n          .hex(),\n      },\n    },\n  }));\n\n  var impacts = [\n    {\n      id: 30,\n      x: 900,\n      y: 150,\n      label: \"impact 1\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#240EA9\",\n      widthConstraint: 200,\n      heightConstraint: 200,\n      font: {\n        color: \"white\",\n      },\n    },\n  ];\n\n  const [state, setState] = useState({\n    counter: 5,\n    graph: {\n      nodes: [...activities, ...outputs, ...outcomes, ...impacts],\n      edges: [\n        { from: 10, to: 20, width: 2 },\n        { from: 11, to: 21, width: 2 },\n        { from: 2, to: 10, width: 2 },\n        { from: 2, to: 11, width: 2 },\n        { from: 2, to: 12, width: 2 },\n        { from: 3, to: 6, width: 2 },\n        { from: 20, to: 30, width: 2 },\n        { from: 21, to: 30, width: 2 },\n        { from: 22, to: 30, width: 2 },\n      ],\n    },\n    events: {\n      select: ({ nodes, pointer: { canvas } }) => {\n        // const position = nodePosition(2);\n        console.log(\"Selected nodes:\" + nodes);\n        console.log(\"Selected node: \" + nodes + canvas.x + \" \" + canvas.y);\n      },\n      // doubleClick: ({ pointer: { canvas } }) => {\n      //   createNode(canvas.x, canvas.y);\n      // }\n    },\n  });\n  const { graph, events } = state;\n\n  const positions = graph;\n  console.log(positions);\n\n  return (\n    <div className=\"network-graph\">\n      <Graph graph={graph} options={options} events={events} />\n      <Graph graph={graph} options={options} events={events} />\n      <Graph graph={graph} options={options} events={events} />\n    </div>\n  );\n}\n\nexport default NetworkGraph4;\n","/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/NetworkGraph3.js",["1446","1447","1448","1449","1450","1451","1452","1453","1454","1455","1456","1457","1458","1459","1460"],{"ruleId":"1461","severity":1,"message":"1462","line":6,"column":17,"nodeType":"1463","messageId":"1464","endLine":6,"endColumn":26},{"ruleId":"1461","severity":1,"message":"1465","line":13,"column":10,"nodeType":"1463","messageId":"1464","endLine":13,"endColumn":31},{"ruleId":"1466","replacedBy":"1467"},{"ruleId":"1468","replacedBy":"1469"},{"ruleId":"1461","severity":1,"message":"1470","line":28,"column":8,"nodeType":"1463","messageId":"1464","endLine":28,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1471","line":42,"column":8,"nodeType":"1463","messageId":"1464","endLine":42,"endColumn":26},{"ruleId":"1461","severity":1,"message":"1472","line":53,"column":8,"nodeType":"1463","messageId":"1464","endLine":53,"endColumn":26},{"ruleId":"1461","severity":1,"message":"1473","line":55,"column":8,"nodeType":"1463","messageId":"1464","endLine":55,"endColumn":15},{"ruleId":"1461","severity":1,"message":"1474","line":60,"column":8,"nodeType":"1463","messageId":"1464","endLine":60,"endColumn":26},{"ruleId":"1461","severity":1,"message":"1475","line":63,"column":8,"nodeType":"1463","messageId":"1464","endLine":63,"endColumn":14},{"ruleId":"1461","severity":1,"message":"1476","line":68,"column":8,"nodeType":"1463","messageId":"1464","endLine":68,"endColumn":22},{"ruleId":"1461","severity":1,"message":"1477","line":80,"column":8,"nodeType":"1463","messageId":"1464","endLine":80,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1478","line":5,"column":3,"nodeType":"1463","messageId":"1464","endLine":5,"endColumn":24},{"ruleId":"1461","severity":1,"message":"1479","line":8,"column":8,"nodeType":"1463","messageId":"1464","endLine":8,"endColumn":14},{"ruleId":"1461","severity":1,"message":"1480","line":10,"column":8,"nodeType":"1463","messageId":"1464","endLine":10,"endColumn":17},{"ruleId":"1461","severity":1,"message":"1481","line":15,"column":3,"nodeType":"1463","messageId":"1464","endLine":15,"endColumn":21},{"ruleId":"1461","severity":1,"message":"1482","line":20,"column":3,"nodeType":"1463","messageId":"1464","endLine":20,"endColumn":34},{"ruleId":"1461","severity":1,"message":"1483","line":22,"column":8,"nodeType":"1463","messageId":"1464","endLine":22,"endColumn":31},{"ruleId":"1461","severity":1,"message":"1484","line":23,"column":10,"nodeType":"1463","messageId":"1464","endLine":23,"endColumn":26},{"ruleId":"1461","severity":1,"message":"1485","line":27,"column":3,"nodeType":"1463","messageId":"1464","endLine":27,"endColumn":23},{"ruleId":"1461","severity":1,"message":"1486","line":33,"column":18,"nodeType":"1463","messageId":"1464","endLine":33,"endColumn":27},{"ruleId":"1461","severity":1,"message":"1487","line":37,"column":10,"nodeType":"1463","messageId":"1464","endLine":37,"endColumn":15},{"ruleId":"1461","severity":1,"message":"1488","line":38,"column":9,"nodeType":"1463","messageId":"1464","endLine":38,"endColumn":26},{"ruleId":"1461","severity":1,"message":"1489","line":4,"column":3,"nodeType":"1463","messageId":"1464","endLine":4,"endColumn":32},{"ruleId":"1461","severity":1,"message":"1478","line":5,"column":3,"nodeType":"1463","messageId":"1464","endLine":5,"endColumn":24},{"ruleId":"1461","severity":1,"message":"1490","line":19,"column":10,"nodeType":"1463","messageId":"1464","endLine":19,"endColumn":19},{"ruleId":"1461","severity":1,"message":"1491","line":20,"column":10,"nodeType":"1463","messageId":"1464","endLine":20,"endColumn":21},{"ruleId":"1461","severity":1,"message":"1492","line":21,"column":10,"nodeType":"1463","messageId":"1464","endLine":21,"endColumn":27},{"ruleId":"1493","severity":1,"message":"1494","line":29,"column":6,"nodeType":"1495","endLine":29,"endColumn":8,"suggestions":"1496"},{"ruleId":"1461","severity":1,"message":"1497","line":18,"column":22,"nodeType":"1463","messageId":"1464","endLine":18,"endColumn":32},{"ruleId":"1498","severity":1,"message":"1499","line":31,"column":27,"nodeType":"1500","messageId":"1501","endLine":31,"endColumn":29},{"ruleId":"1498","severity":1,"message":"1499","line":46,"column":29,"nodeType":"1500","messageId":"1501","endLine":46,"endColumn":31},{"ruleId":"1498","severity":1,"message":"1499","line":61,"column":29,"nodeType":"1500","messageId":"1501","endLine":61,"endColumn":31},{"ruleId":"1498","severity":1,"message":"1499","line":62,"column":40,"nodeType":"1500","messageId":"1501","endLine":62,"endColumn":42},{"ruleId":"1498","severity":1,"message":"1499","line":66,"column":27,"nodeType":"1500","messageId":"1501","endLine":66,"endColumn":29},{"ruleId":"1498","severity":1,"message":"1499","line":81,"column":27,"nodeType":"1500","messageId":"1501","endLine":81,"endColumn":29},{"ruleId":"1498","severity":1,"message":"1499","line":82,"column":41,"nodeType":"1500","messageId":"1501","endLine":82,"endColumn":43},{"ruleId":"1498","severity":1,"message":"1499","line":87,"column":32,"nodeType":"1500","messageId":"1501","endLine":87,"endColumn":34},{"ruleId":"1498","severity":1,"message":"1499","line":102,"column":32,"nodeType":"1500","messageId":"1501","endLine":102,"endColumn":34},{"ruleId":"1498","severity":1,"message":"1499","line":103,"column":41,"nodeType":"1500","messageId":"1501","endLine":103,"endColumn":43},{"ruleId":"1493","severity":1,"message":"1502","line":112,"column":6,"nodeType":"1495","endLine":112,"endColumn":8,"suggestions":"1503"},{"ruleId":"1461","severity":1,"message":"1504","line":14,"column":8,"nodeType":"1463","messageId":"1464","endLine":14,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1504","line":5,"column":8,"nodeType":"1463","messageId":"1464","endLine":5,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1504","line":9,"column":8,"nodeType":"1463","messageId":"1464","endLine":9,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1504","line":12,"column":8,"nodeType":"1463","messageId":"1464","endLine":12,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1504","line":7,"column":8,"nodeType":"1463","messageId":"1464","endLine":7,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1504","line":6,"column":8,"nodeType":"1463","messageId":"1464","endLine":6,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1504","line":7,"column":8,"nodeType":"1463","messageId":"1464","endLine":7,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1497","line":13,"column":23,"nodeType":"1463","messageId":"1464","endLine":13,"endColumn":33},{"ruleId":"1461","severity":1,"message":"1505","line":5,"column":8,"nodeType":"1463","messageId":"1464","endLine":5,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1506","line":11,"column":10,"nodeType":"1463","messageId":"1464","endLine":11,"endColumn":43},{"ruleId":"1461","severity":1,"message":"1507","line":11,"column":45,"nodeType":"1463","messageId":"1464","endLine":11,"endColumn":64},{"ruleId":"1461","severity":1,"message":"1508","line":20,"column":16,"nodeType":"1463","messageId":"1464","endLine":20,"endColumn":23},{"ruleId":"1461","severity":1,"message":"1509","line":21,"column":8,"nodeType":"1463","messageId":"1464","endLine":21,"endColumn":15},{"ruleId":"1461","severity":1,"message":"1510","line":11,"column":3,"nodeType":"1463","messageId":"1464","endLine":11,"endColumn":33},{"ruleId":"1461","severity":1,"message":"1511","line":10,"column":8,"nodeType":"1463","messageId":"1464","endLine":10,"endColumn":26},{"ruleId":"1461","severity":1,"message":"1512","line":29,"column":9,"nodeType":"1463","messageId":"1464","endLine":29,"endColumn":21},{"ruleId":"1461","severity":1,"message":"1513","line":11,"column":8,"nodeType":"1463","messageId":"1464","endLine":11,"endColumn":23},{"ruleId":"1461","severity":1,"message":"1509","line":14,"column":9,"nodeType":"1463","messageId":"1464","endLine":14,"endColumn":16},{"ruleId":"1461","severity":1,"message":"1514","line":17,"column":10,"nodeType":"1463","messageId":"1464","endLine":17,"endColumn":19},{"ruleId":"1493","severity":1,"message":"1515","line":24,"column":6,"nodeType":"1495","endLine":24,"endColumn":8,"suggestions":"1516"},{"ruleId":"1461","severity":1,"message":"1517","line":1,"column":8,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":12},{"ruleId":"1461","severity":1,"message":"1518","line":2,"column":17,"nodeType":"1463","messageId":"1464","endLine":2,"endColumn":25},{"ruleId":"1461","severity":1,"message":"1462","line":2,"column":27,"nodeType":"1463","messageId":"1464","endLine":2,"endColumn":36},{"ruleId":"1461","severity":1,"message":"1519","line":2,"column":38,"nodeType":"1463","messageId":"1464","endLine":2,"endColumn":49},{"ruleId":"1461","severity":1,"message":"1520","line":3,"column":10,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1521","line":3,"column":22,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":31},{"ruleId":"1461","severity":1,"message":"1522","line":3,"column":33,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":37},{"ruleId":"1461","severity":1,"message":"1523","line":4,"column":10,"nodeType":"1463","messageId":"1464","endLine":4,"endColumn":33},{"ruleId":"1461","severity":1,"message":"1524","line":4,"column":35,"nodeType":"1463","messageId":"1464","endLine":4,"endColumn":48},{"ruleId":"1525","severity":1,"message":"1526","line":13,"column":9,"nodeType":"1527","endLine":13,"endColumn":13},{"ruleId":"1461","severity":1,"message":"1518","line":1,"column":17,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":25},{"ruleId":"1461","severity":1,"message":"1462","line":1,"column":27,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":36},{"ruleId":"1461","severity":1,"message":"1462","line":1,"column":35,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":44},{"ruleId":"1461","severity":1,"message":"1519","line":1,"column":46,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":57},{"ruleId":"1461","severity":1,"message":"1520","line":3,"column":21,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":31},{"ruleId":"1461","severity":1,"message":"1505","line":5,"column":8,"nodeType":"1463","messageId":"1464","endLine":5,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1482","line":7,"column":10,"nodeType":"1463","messageId":"1464","endLine":7,"endColumn":41},{"ruleId":"1461","severity":1,"message":"1528","line":11,"column":3,"nodeType":"1463","messageId":"1464","endLine":11,"endColumn":34},{"ruleId":"1461","severity":1,"message":"1529","line":12,"column":3,"nodeType":"1463","messageId":"1464","endLine":12,"endColumn":19},{"ruleId":"1461","severity":1,"message":"1481","line":13,"column":3,"nodeType":"1463","messageId":"1464","endLine":13,"endColumn":21},{"ruleId":"1461","severity":1,"message":"1508","line":24,"column":16,"nodeType":"1463","messageId":"1464","endLine":24,"endColumn":23},{"ruleId":"1530","severity":1,"message":"1531","line":88,"column":21,"nodeType":"1532","messageId":"1533","endLine":88,"endColumn":23},{"ruleId":"1530","severity":1,"message":"1531","line":89,"column":21,"nodeType":"1532","messageId":"1533","endLine":89,"endColumn":23},{"ruleId":"1530","severity":1,"message":"1531","line":90,"column":21,"nodeType":"1532","messageId":"1533","endLine":90,"endColumn":23},{"ruleId":"1461","severity":1,"message":"1534","line":2,"column":27,"nodeType":"1463","messageId":"1464","endLine":2,"endColumn":33},{"ruleId":"1461","severity":1,"message":"1522","line":3,"column":33,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":37},{"ruleId":"1461","severity":1,"message":"1535","line":8,"column":10,"nodeType":"1463","messageId":"1464","endLine":8,"endColumn":13},{"ruleId":"1461","severity":1,"message":"1536","line":8,"column":15,"nodeType":"1463","messageId":"1464","endLine":8,"endColumn":24},{"ruleId":"1461","severity":1,"message":"1537","line":8,"column":37,"nodeType":"1463","messageId":"1464","endLine":8,"endColumn":40},{"ruleId":"1461","severity":1,"message":"1462","line":1,"column":35,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":44},{"ruleId":"1461","severity":1,"message":"1519","line":1,"column":46,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":57},{"ruleId":"1461","severity":1,"message":"1505","line":5,"column":8,"nodeType":"1463","messageId":"1464","endLine":5,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1509","line":17,"column":9,"nodeType":"1463","messageId":"1464","endLine":17,"endColumn":16},{"ruleId":"1461","severity":1,"message":"1508","line":20,"column":16,"nodeType":"1463","messageId":"1464","endLine":20,"endColumn":23},{"ruleId":"1461","severity":1,"message":"1538","line":4,"column":10,"nodeType":"1463","messageId":"1464","endLine":4,"endColumn":26},{"ruleId":"1461","severity":1,"message":"1509","line":26,"column":9,"nodeType":"1463","messageId":"1464","endLine":26,"endColumn":16},{"ruleId":"1530","severity":1,"message":"1539","line":76,"column":20,"nodeType":"1532","messageId":"1533","endLine":76,"endColumn":22},{"ruleId":"1461","severity":1,"message":"1540","line":7,"column":8,"nodeType":"1463","messageId":"1464","endLine":7,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1541","line":4,"column":8,"nodeType":"1463","messageId":"1464","endLine":4,"endColumn":27},{"ruleId":"1461","severity":1,"message":"1470","line":6,"column":8,"nodeType":"1463","messageId":"1464","endLine":6,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1542","line":7,"column":8,"nodeType":"1463","messageId":"1464","endLine":7,"endColumn":27},{"ruleId":"1461","severity":1,"message":"1543","line":2,"column":3,"nodeType":"1463","messageId":"1464","endLine":2,"endColumn":22},{"ruleId":"1461","severity":1,"message":"1544","line":3,"column":3,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":24},{"ruleId":"1461","severity":1,"message":"1545","line":4,"column":3,"nodeType":"1463","messageId":"1464","endLine":4,"endColumn":12},{"ruleId":"1461","severity":1,"message":"1546","line":11,"column":8,"nodeType":"1463","messageId":"1464","endLine":11,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1547","line":16,"column":24,"nodeType":"1463","messageId":"1464","endLine":16,"endColumn":32},{"ruleId":"1493","severity":1,"message":"1515","line":25,"column":6,"nodeType":"1495","endLine":25,"endColumn":8,"suggestions":"1548"},{"ruleId":"1461","severity":1,"message":"1549","line":31,"column":9,"nodeType":"1463","messageId":"1464","endLine":31,"endColumn":18},{"ruleId":"1461","severity":1,"message":"1550","line":19,"column":8,"nodeType":"1463","messageId":"1464","endLine":19,"endColumn":16},{"ruleId":"1493","severity":1,"message":"1515","line":128,"column":6,"nodeType":"1495","endLine":128,"endColumn":17,"suggestions":"1551"},{"ruleId":"1530","severity":1,"message":"1539","line":191,"column":17,"nodeType":"1532","messageId":"1533","endLine":191,"endColumn":19},{"ruleId":"1530","severity":1,"message":"1539","line":201,"column":19,"nodeType":"1532","messageId":"1533","endLine":201,"endColumn":21},{"ruleId":"1530","severity":1,"message":"1539","line":211,"column":25,"nodeType":"1532","messageId":"1533","endLine":211,"endColumn":27},{"ruleId":"1530","severity":1,"message":"1539","line":222,"column":21,"nodeType":"1532","messageId":"1533","endLine":222,"endColumn":23},{"ruleId":"1461","severity":1,"message":"1552","line":5,"column":8,"nodeType":"1463","messageId":"1464","endLine":5,"endColumn":19},{"ruleId":"1461","severity":1,"message":"1521","line":5,"column":10,"nodeType":"1463","messageId":"1464","endLine":5,"endColumn":19},{"ruleId":"1461","severity":1,"message":"1517","line":6,"column":8,"nodeType":"1463","messageId":"1464","endLine":6,"endColumn":12},{"ruleId":"1461","severity":1,"message":"1553","line":9,"column":3,"nodeType":"1463","messageId":"1464","endLine":9,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1554","line":16,"column":10,"nodeType":"1463","messageId":"1464","endLine":16,"endColumn":30},{"ruleId":"1461","severity":1,"message":"1555","line":20,"column":10,"nodeType":"1463","messageId":"1464","endLine":20,"endColumn":27},{"ruleId":"1461","severity":1,"message":"1556","line":20,"column":29,"nodeType":"1463","messageId":"1464","endLine":20,"endColumn":49},{"ruleId":"1461","severity":1,"message":"1517","line":1,"column":8,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":12},{"ruleId":"1461","severity":1,"message":"1509","line":12,"column":9,"nodeType":"1463","messageId":"1464","endLine":12,"endColumn":16},{"ruleId":"1461","severity":1,"message":"1557","line":21,"column":9,"nodeType":"1463","messageId":"1464","endLine":21,"endColumn":18},{"ruleId":"1461","severity":1,"message":"1558","line":1,"column":10,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":26},{"ruleId":"1461","severity":1,"message":"1462","line":2,"column":27,"nodeType":"1463","messageId":"1464","endLine":2,"endColumn":36},{"ruleId":"1461","severity":1,"message":"1519","line":2,"column":38,"nodeType":"1463","messageId":"1464","endLine":2,"endColumn":49},{"ruleId":"1461","severity":1,"message":"1559","line":8,"column":10,"nodeType":"1463","messageId":"1464","endLine":8,"endColumn":19},{"ruleId":"1461","severity":1,"message":"1560","line":8,"column":21,"nodeType":"1463","messageId":"1464","endLine":8,"endColumn":33},{"ruleId":"1461","severity":1,"message":"1561","line":12,"column":10,"nodeType":"1463","messageId":"1464","endLine":12,"endColumn":14},{"ruleId":"1461","severity":1,"message":"1508","line":12,"column":16,"nodeType":"1463","messageId":"1464","endLine":12,"endColumn":23},{"ruleId":"1461","severity":1,"message":"1487","line":243,"column":23,"nodeType":"1463","messageId":"1464","endLine":243,"endColumn":28},{"ruleId":"1461","severity":1,"message":"1509","line":11,"column":9,"nodeType":"1463","messageId":"1464","endLine":11,"endColumn":16},{"ruleId":"1461","severity":1,"message":"1562","line":12,"column":11,"nodeType":"1463","messageId":"1464","endLine":12,"endColumn":22},{"ruleId":"1461","severity":1,"message":"1563","line":15,"column":24,"nodeType":"1463","messageId":"1464","endLine":15,"endColumn":26},{"ruleId":"1493","severity":1,"message":"1494","line":21,"column":6,"nodeType":"1495","endLine":21,"endColumn":19,"suggestions":"1564"},{"ruleId":"1493","severity":1,"message":"1565","line":8,"column":5,"nodeType":"1495","endLine":8,"endColumn":7,"suggestions":"1566"},{"ruleId":"1461","severity":1,"message":"1509","line":16,"column":9,"nodeType":"1463","messageId":"1464","endLine":16,"endColumn":16},{"ruleId":"1493","severity":1,"message":"1494","line":19,"column":6,"nodeType":"1495","endLine":19,"endColumn":19,"suggestions":"1567"},{"ruleId":"1461","severity":1,"message":"1535","line":20,"column":10,"nodeType":"1463","messageId":"1464","endLine":20,"endColumn":13},{"ruleId":"1461","severity":1,"message":"1537","line":20,"column":37,"nodeType":"1463","messageId":"1464","endLine":20,"endColumn":40},{"ruleId":"1461","severity":1,"message":"1568","line":23,"column":10,"nodeType":"1463","messageId":"1464","endLine":23,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1569","line":48,"column":10,"nodeType":"1463","messageId":"1464","endLine":48,"endColumn":16},{"ruleId":"1461","severity":1,"message":"1570","line":49,"column":10,"nodeType":"1463","messageId":"1464","endLine":49,"endColumn":17},{"ruleId":"1493","severity":1,"message":"1515","line":181,"column":6,"nodeType":"1495","endLine":181,"endColumn":27,"suggestions":"1571"},{"ruleId":"1530","severity":1,"message":"1539","line":226,"column":21,"nodeType":"1532","messageId":"1533","endLine":226,"endColumn":23},{"ruleId":"1493","severity":1,"message":"1572","line":76,"column":6,"nodeType":"1495","endLine":76,"endColumn":49,"suggestions":"1573"},{"ruleId":"1530","severity":1,"message":"1539","line":110,"column":14,"nodeType":"1532","messageId":"1533","endLine":110,"endColumn":16},{"ruleId":"1574","severity":1,"message":"1575","line":66,"column":17,"nodeType":"1576","messageId":"1577","endLine":66,"endColumn":39},{"ruleId":"1574","severity":1,"message":"1575","line":83,"column":17,"nodeType":"1576","messageId":"1577","endLine":83,"endColumn":47},{"ruleId":"1574","severity":1,"message":"1575","line":90,"column":17,"nodeType":"1576","messageId":"1577","endLine":90,"endColumn":39},{"ruleId":"1574","severity":1,"message":"1575","line":108,"column":17,"nodeType":"1576","messageId":"1577","endLine":108,"endColumn":47},{"ruleId":"1574","severity":1,"message":"1575","line":115,"column":17,"nodeType":"1576","messageId":"1577","endLine":115,"endColumn":39},{"ruleId":"1574","severity":1,"message":"1575","line":133,"column":17,"nodeType":"1576","messageId":"1577","endLine":133,"endColumn":47},{"ruleId":"1574","severity":1,"message":"1575","line":140,"column":17,"nodeType":"1576","messageId":"1577","endLine":140,"endColumn":39},{"ruleId":"1461","severity":1,"message":"1522","line":4,"column":10,"nodeType":"1463","messageId":"1464","endLine":4,"endColumn":14},{"ruleId":"1466","replacedBy":"1578"},{"ruleId":"1468","replacedBy":"1579"},{"ruleId":"1461","severity":1,"message":"1518","line":1,"column":17,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":25},{"ruleId":"1461","severity":1,"message":"1462","line":1,"column":27,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":36},{"ruleId":"1461","severity":1,"message":"1519","line":1,"column":38,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":49},{"ruleId":"1461","severity":1,"message":"1580","line":3,"column":8,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":16},{"ruleId":"1461","severity":1,"message":"1581","line":6,"column":8,"nodeType":"1463","messageId":"1464","endLine":6,"endColumn":17},{"ruleId":"1461","severity":1,"message":"1582","line":7,"column":8,"nodeType":"1463","messageId":"1464","endLine":7,"endColumn":22},{"ruleId":"1461","severity":1,"message":"1521","line":8,"column":10,"nodeType":"1463","messageId":"1464","endLine":8,"endColumn":19},{"ruleId":"1461","severity":1,"message":"1520","line":9,"column":10,"nodeType":"1463","messageId":"1464","endLine":9,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1583","line":10,"column":10,"nodeType":"1463","messageId":"1464","endLine":10,"endColumn":36},{"ruleId":"1461","severity":1,"message":"1584","line":8,"column":8,"nodeType":"1463","messageId":"1464","endLine":8,"endColumn":23},{"ruleId":"1461","severity":1,"message":"1585","line":13,"column":9,"nodeType":"1463","messageId":"1464","endLine":13,"endColumn":26},{"ruleId":"1493","severity":1,"message":"1586","line":20,"column":6,"nodeType":"1495","endLine":20,"endColumn":8,"suggestions":"1587"},{"ruleId":"1461","severity":1,"message":"1588","line":26,"column":9,"nodeType":"1463","messageId":"1464","endLine":26,"endColumn":14},{"ruleId":"1461","severity":1,"message":"1534","line":1,"column":27,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":33},{"ruleId":"1461","severity":1,"message":"1545","line":5,"column":3,"nodeType":"1463","messageId":"1464","endLine":5,"endColumn":12},{"ruleId":"1461","severity":1,"message":"1522","line":8,"column":10,"nodeType":"1463","messageId":"1464","endLine":8,"endColumn":14},{"ruleId":"1461","severity":1,"message":"1589","line":23,"column":3,"nodeType":"1463","messageId":"1464","endLine":23,"endColumn":11},{"ruleId":"1461","severity":1,"message":"1547","line":67,"column":24,"nodeType":"1463","messageId":"1464","endLine":67,"endColumn":32},{"ruleId":"1461","severity":1,"message":"1590","line":68,"column":10,"nodeType":"1463","messageId":"1464","endLine":68,"endColumn":17},{"ruleId":"1493","severity":1,"message":"1515","line":76,"column":6,"nodeType":"1495","endLine":76,"endColumn":8,"suggestions":"1591"},{"ruleId":"1461","severity":1,"message":"1518","line":1,"column":17,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":25},{"ruleId":"1461","severity":1,"message":"1462","line":1,"column":27,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":36},{"ruleId":"1461","severity":1,"message":"1592","line":3,"column":24,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":34},{"ruleId":"1461","severity":1,"message":"1593","line":5,"column":10,"nodeType":"1463","messageId":"1464","endLine":5,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1594","line":6,"column":10,"nodeType":"1463","messageId":"1464","endLine":6,"endColumn":23},{"ruleId":"1595","severity":1,"message":"1596","line":33,"column":15,"nodeType":"1527","endLine":42,"endColumn":17},{"ruleId":"1461","severity":1,"message":"1521","line":2,"column":10,"nodeType":"1463","messageId":"1464","endLine":2,"endColumn":19},{"ruleId":"1461","severity":1,"message":"1597","line":3,"column":10,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":22},{"ruleId":"1461","severity":1,"message":"1598","line":4,"column":10,"nodeType":"1463","messageId":"1464","endLine":4,"endColumn":19},{"ruleId":"1461","severity":1,"message":"1599","line":9,"column":10,"nodeType":"1463","messageId":"1464","endLine":9,"endColumn":28},{"ruleId":"1461","severity":1,"message":"1600","line":16,"column":9,"nodeType":"1463","messageId":"1464","endLine":16,"endColumn":24},{"ruleId":"1595","severity":1,"message":"1596","line":30,"column":15,"nodeType":"1527","endLine":39,"endColumn":17},{"ruleId":"1595","severity":1,"message":"1596","line":30,"column":15,"nodeType":"1527","endLine":39,"endColumn":17},{"ruleId":"1601","severity":1,"message":"1602","line":66,"column":15,"nodeType":"1527","messageId":"1603","endLine":70,"endColumn":16,"fix":"1604"},{"ruleId":"1601","severity":1,"message":"1602","line":83,"column":15,"nodeType":"1527","messageId":"1603","endLine":90,"endColumn":16,"fix":"1605"},{"ruleId":"1461","severity":1,"message":"1606","line":7,"column":3,"nodeType":"1463","messageId":"1464","endLine":7,"endColumn":19},{"ruleId":"1461","severity":1,"message":"1520","line":2,"column":10,"nodeType":"1463","messageId":"1464","endLine":2,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1522","line":2,"column":33,"nodeType":"1463","messageId":"1464","endLine":2,"endColumn":37},{"ruleId":"1461","severity":1,"message":"1607","line":20,"column":5,"nodeType":"1463","messageId":"1464","endLine":20,"endColumn":9},{"ruleId":"1595","severity":1,"message":"1596","line":29,"column":15,"nodeType":"1527","endLine":38,"endColumn":17},{"ruleId":"1530","severity":1,"message":"1531","line":2,"column":26,"nodeType":"1532","messageId":"1533","endLine":2,"endColumn":28},{"ruleId":"1530","severity":1,"message":"1539","line":5,"column":26,"nodeType":"1532","messageId":"1533","endLine":5,"endColumn":28},{"ruleId":"1461","severity":1,"message":"1608","line":9,"column":3,"nodeType":"1463","messageId":"1464","endLine":9,"endColumn":33},{"ruleId":"1461","severity":1,"message":"1609","line":4,"column":8,"nodeType":"1463","messageId":"1464","endLine":4,"endColumn":14},{"ruleId":"1461","severity":1,"message":"1538","line":6,"column":3,"nodeType":"1463","messageId":"1464","endLine":6,"endColumn":19},{"ruleId":"1461","severity":1,"message":"1610","line":7,"column":3,"nodeType":"1463","messageId":"1464","endLine":7,"endColumn":22},{"ruleId":"1461","severity":1,"message":"1611","line":10,"column":10,"nodeType":"1463","messageId":"1464","endLine":10,"endColumn":19},{"ruleId":"1461","severity":1,"message":"1612","line":11,"column":8,"nodeType":"1463","messageId":"1464","endLine":11,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1509","line":14,"column":9,"nodeType":"1463","messageId":"1464","endLine":14,"endColumn":16},{"ruleId":"1461","severity":1,"message":"1562","line":15,"column":11,"nodeType":"1463","messageId":"1464","endLine":15,"endColumn":22},{"ruleId":"1461","severity":1,"message":"1613","line":15,"column":24,"nodeType":"1463","messageId":"1464","endLine":15,"endColumn":35},{"ruleId":"1461","severity":1,"message":"1614","line":16,"column":10,"nodeType":"1463","messageId":"1464","endLine":16,"endColumn":17},{"ruleId":"1461","severity":1,"message":"1615","line":16,"column":19,"nodeType":"1463","messageId":"1464","endLine":16,"endColumn":29},{"ruleId":"1461","severity":1,"message":"1590","line":17,"column":10,"nodeType":"1463","messageId":"1464","endLine":17,"endColumn":17},{"ruleId":"1461","severity":1,"message":"1616","line":17,"column":19,"nodeType":"1463","messageId":"1464","endLine":17,"endColumn":29},{"ruleId":"1461","severity":1,"message":"1617","line":19,"column":10,"nodeType":"1463","messageId":"1464","endLine":19,"endColumn":24},{"ruleId":"1461","severity":1,"message":"1618","line":19,"column":26,"nodeType":"1463","messageId":"1464","endLine":19,"endColumn":43},{"ruleId":"1461","severity":1,"message":"1619","line":20,"column":10,"nodeType":"1463","messageId":"1464","endLine":20,"endColumn":24},{"ruleId":"1461","severity":1,"message":"1620","line":20,"column":26,"nodeType":"1463","messageId":"1464","endLine":20,"endColumn":43},{"ruleId":"1461","severity":1,"message":"1621","line":22,"column":21,"nodeType":"1463","messageId":"1464","endLine":22,"endColumn":33},{"ruleId":"1461","severity":1,"message":"1622","line":22,"column":35,"nodeType":"1463","messageId":"1464","endLine":22,"endColumn":43},{"ruleId":"1493","severity":1,"message":"1623","line":24,"column":26,"nodeType":"1463","endLine":24,"endColumn":37},{"ruleId":"1461","severity":1,"message":"1518","line":1,"column":17,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":25},{"ruleId":"1461","severity":1,"message":"1462","line":1,"column":27,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":36},{"ruleId":"1461","severity":1,"message":"1597","line":3,"column":10,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":22},{"ruleId":"1461","severity":1,"message":"1592","line":3,"column":24,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":34},{"ruleId":"1461","severity":1,"message":"1624","line":3,"column":36,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":52},{"ruleId":"1461","severity":1,"message":"1593","line":5,"column":10,"nodeType":"1463","messageId":"1464","endLine":5,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1562","line":14,"column":11,"nodeType":"1463","messageId":"1464","endLine":14,"endColumn":22},{"ruleId":"1595","severity":1,"message":"1596","line":30,"column":15,"nodeType":"1527","endLine":39,"endColumn":17},{"ruleId":"1625","severity":1,"message":"1626","line":50,"column":15,"nodeType":"1627","messageId":"1628","endLine":55,"endColumn":16},{"ruleId":"1461","severity":1,"message":"1538","line":12,"column":3,"nodeType":"1463","messageId":"1464","endLine":12,"endColumn":19},{"ruleId":"1461","severity":1,"message":"1590","line":24,"column":10,"nodeType":"1463","messageId":"1464","endLine":24,"endColumn":17},{"ruleId":"1461","severity":1,"message":"1616","line":24,"column":19,"nodeType":"1463","messageId":"1464","endLine":24,"endColumn":29},{"ruleId":"1493","severity":1,"message":"1515","line":48,"column":6,"nodeType":"1495","endLine":48,"endColumn":29,"suggestions":"1629"},{"ruleId":"1461","severity":1,"message":"1518","line":1,"column":17,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":25},{"ruleId":"1461","severity":1,"message":"1462","line":1,"column":27,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":36},{"ruleId":"1461","severity":1,"message":"1508","line":17,"column":16,"nodeType":"1463","messageId":"1464","endLine":17,"endColumn":23},{"ruleId":"1461","severity":1,"message":"1630","line":20,"column":5,"nodeType":"1463","messageId":"1464","endLine":20,"endColumn":9},{"ruleId":"1461","severity":1,"message":"1546","line":5,"column":8,"nodeType":"1463","messageId":"1464","endLine":5,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1509","line":8,"column":9,"nodeType":"1463","messageId":"1464","endLine":8,"endColumn":16},{"ruleId":"1461","severity":1,"message":"1547","line":9,"column":24,"nodeType":"1463","messageId":"1464","endLine":9,"endColumn":32},{"ruleId":"1493","severity":1,"message":"1515","line":15,"column":6,"nodeType":"1495","endLine":15,"endColumn":8,"suggestions":"1631"},{"ruleId":"1461","severity":1,"message":"1632","line":15,"column":3,"nodeType":"1463","messageId":"1464","endLine":15,"endColumn":22},{"ruleId":"1493","severity":1,"message":"1633","line":28,"column":6,"nodeType":"1495","endLine":28,"endColumn":8,"suggestions":"1634"},{"ruleId":"1493","severity":1,"message":"1635","line":21,"column":6,"nodeType":"1495","endLine":21,"endColumn":8,"suggestions":"1636"},{"ruleId":"1493","severity":1,"message":"1637","line":21,"column":6,"nodeType":"1495","endLine":21,"endColumn":8,"suggestions":"1638"},{"ruleId":"1493","severity":1,"message":"1639","line":20,"column":6,"nodeType":"1495","endLine":20,"endColumn":8,"suggestions":"1640"},{"ruleId":"1461","severity":1,"message":"1517","line":1,"column":8,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":12},{"ruleId":"1461","severity":1,"message":"1522","line":3,"column":33,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":37},{"ruleId":"1461","severity":1,"message":"1641","line":4,"column":8,"nodeType":"1463","messageId":"1464","endLine":4,"endColumn":21},{"ruleId":"1461","severity":1,"message":"1497","line":10,"column":24,"nodeType":"1463","messageId":"1464","endLine":10,"endColumn":34},{"ruleId":"1461","severity":1,"message":"1642","line":12,"column":10,"nodeType":"1463","messageId":"1464","endLine":12,"endColumn":18},{"ruleId":"1461","severity":1,"message":"1518","line":1,"column":17,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":25},{"ruleId":"1461","severity":1,"message":"1462","line":1,"column":27,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":36},{"ruleId":"1461","severity":1,"message":"1592","line":3,"column":24,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":34},{"ruleId":"1461","severity":1,"message":"1643","line":17,"column":24,"nodeType":"1463","messageId":"1464","endLine":17,"endColumn":35},{"ruleId":"1595","severity":1,"message":"1596","line":33,"column":15,"nodeType":"1527","endLine":42,"endColumn":17},{"ruleId":"1601","severity":1,"message":"1602","line":12,"column":11,"nodeType":"1527","messageId":"1603","endLine":12,"endColumn":58,"fix":"1644"},{"ruleId":"1461","severity":1,"message":"1487","line":43,"column":23,"nodeType":"1463","messageId":"1464","endLine":43,"endColumn":28},{"ruleId":"1461","severity":1,"message":"1645","line":24,"column":10,"nodeType":"1463","messageId":"1464","endLine":24,"endColumn":17},{"ruleId":"1461","severity":1,"message":"1646","line":24,"column":19,"nodeType":"1463","messageId":"1464","endLine":24,"endColumn":29},{"ruleId":"1498","severity":1,"message":"1499","line":37,"column":32,"nodeType":"1500","messageId":"1501","endLine":37,"endColumn":34},{"ruleId":"1498","severity":1,"message":"1499","line":41,"column":32,"nodeType":"1500","messageId":"1501","endLine":41,"endColumn":34},{"ruleId":"1498","severity":1,"message":"1499","line":42,"column":33,"nodeType":"1500","messageId":"1501","endLine":42,"endColumn":35},{"ruleId":"1493","severity":1,"message":"1633","line":49,"column":6,"nodeType":"1495","endLine":49,"endColumn":8,"suggestions":"1647"},{"ruleId":"1461","severity":1,"message":"1521","line":8,"column":10,"nodeType":"1463","messageId":"1464","endLine":8,"endColumn":19},{"ruleId":"1461","severity":1,"message":"1522","line":8,"column":21,"nodeType":"1463","messageId":"1464","endLine":8,"endColumn":25},{"ruleId":"1461","severity":1,"message":"1648","line":38,"column":10,"nodeType":"1463","messageId":"1464","endLine":38,"endColumn":25},{"ruleId":"1461","severity":1,"message":"1649","line":40,"column":10,"nodeType":"1463","messageId":"1464","endLine":40,"endColumn":25},{"ruleId":"1461","severity":1,"message":"1650","line":40,"column":27,"nodeType":"1463","messageId":"1464","endLine":40,"endColumn":45},{"ruleId":"1461","severity":1,"message":"1651","line":41,"column":10,"nodeType":"1463","messageId":"1464","endLine":41,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1652","line":41,"column":22,"nodeType":"1463","messageId":"1464","endLine":41,"endColumn":35},{"ruleId":"1461","severity":1,"message":"1653","line":42,"column":10,"nodeType":"1463","messageId":"1464","endLine":42,"endColumn":15},{"ruleId":"1461","severity":1,"message":"1654","line":42,"column":17,"nodeType":"1463","messageId":"1464","endLine":42,"endColumn":25},{"ruleId":"1498","severity":1,"message":"1499","line":87,"column":27,"nodeType":"1500","messageId":"1501","endLine":87,"endColumn":29},{"ruleId":"1498","severity":1,"message":"1499","line":102,"column":29,"nodeType":"1500","messageId":"1501","endLine":102,"endColumn":31},{"ruleId":"1498","severity":1,"message":"1499","line":118,"column":29,"nodeType":"1500","messageId":"1501","endLine":118,"endColumn":31},{"ruleId":"1498","severity":1,"message":"1499","line":119,"column":40,"nodeType":"1500","messageId":"1501","endLine":119,"endColumn":42},{"ruleId":"1498","severity":1,"message":"1499","line":124,"column":27,"nodeType":"1500","messageId":"1501","endLine":124,"endColumn":29},{"ruleId":"1498","severity":1,"message":"1499","line":140,"column":27,"nodeType":"1500","messageId":"1501","endLine":140,"endColumn":29},{"ruleId":"1498","severity":1,"message":"1499","line":141,"column":41,"nodeType":"1500","messageId":"1501","endLine":141,"endColumn":43},{"ruleId":"1498","severity":1,"message":"1499","line":146,"column":32,"nodeType":"1500","messageId":"1501","endLine":146,"endColumn":34},{"ruleId":"1498","severity":1,"message":"1499","line":162,"column":32,"nodeType":"1500","messageId":"1501","endLine":162,"endColumn":34},{"ruleId":"1498","severity":1,"message":"1499","line":163,"column":41,"nodeType":"1500","messageId":"1501","endLine":163,"endColumn":43},{"ruleId":"1493","severity":1,"message":"1502","line":172,"column":6,"nodeType":"1495","endLine":172,"endColumn":8,"suggestions":"1655"},{"ruleId":"1461","severity":1,"message":"1656","line":208,"column":9,"nodeType":"1463","messageId":"1464","endLine":208,"endColumn":24},{"ruleId":"1461","severity":1,"message":"1657","line":217,"column":20,"nodeType":"1463","messageId":"1464","endLine":217,"endColumn":25},{"ruleId":"1530","severity":1,"message":"1531","line":219,"column":22,"nodeType":"1532","messageId":"1533","endLine":219,"endColumn":24},{"ruleId":"1461","severity":1,"message":"1658","line":248,"column":9,"nodeType":"1463","messageId":"1464","endLine":248,"endColumn":14},{"ruleId":"1461","severity":1,"message":"1659","line":314,"column":12,"nodeType":"1463","messageId":"1464","endLine":314,"endColumn":26},{"ruleId":"1461","severity":1,"message":"1534","line":1,"column":51,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":57},{"ruleId":"1461","severity":1,"message":"1517","line":1,"column":8,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":12},{"ruleId":"1461","severity":1,"message":"1534","line":3,"column":27,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":33},{"ruleId":"1461","severity":1,"message":"1522","line":4,"column":33,"nodeType":"1463","messageId":"1464","endLine":4,"endColumn":37},{"ruleId":"1461","severity":1,"message":"1562","line":43,"column":11,"nodeType":"1463","messageId":"1464","endLine":43,"endColumn":22},{"ruleId":"1461","severity":1,"message":"1497","line":43,"column":35,"nodeType":"1463","messageId":"1464","endLine":43,"endColumn":45},{"ruleId":"1461","severity":1,"message":"1509","line":44,"column":9,"nodeType":"1463","messageId":"1464","endLine":44,"endColumn":16},{"ruleId":"1461","severity":1,"message":"1534","line":1,"column":51,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":57},{"ruleId":"1461","severity":1,"message":"1660","line":3,"column":10,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":39},{"ruleId":"1461","severity":1,"message":"1534","line":1,"column":51,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":57},{"ruleId":"1461","severity":1,"message":"1661","line":1,"column":50,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":60},{"ruleId":"1461","severity":1,"message":"1661","line":1,"column":50,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":60},{"ruleId":"1461","severity":1,"message":"1661","line":1,"column":50,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":60},{"ruleId":"1461","severity":1,"message":"1661","line":1,"column":50,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":60},{"ruleId":"1461","severity":1,"message":"1661","line":1,"column":50,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":60},{"ruleId":"1461","severity":1,"message":"1534","line":2,"column":27,"nodeType":"1463","messageId":"1464","endLine":2,"endColumn":33},{"ruleId":"1461","severity":1,"message":"1570","line":8,"column":10,"nodeType":"1463","messageId":"1464","endLine":8,"endColumn":17},{"ruleId":"1461","severity":1,"message":"1662","line":17,"column":9,"nodeType":"1463","messageId":"1464","endLine":17,"endColumn":15},{"ruleId":"1461","severity":1,"message":"1538","line":10,"column":3,"nodeType":"1463","messageId":"1464","endLine":10,"endColumn":19},{"ruleId":"1461","severity":1,"message":"1535","line":23,"column":10,"nodeType":"1463","messageId":"1464","endLine":23,"endColumn":13},{"ruleId":"1461","severity":1,"message":"1537","line":23,"column":37,"nodeType":"1463","messageId":"1464","endLine":23,"endColumn":40},{"ruleId":"1461","severity":1,"message":"1568","line":25,"column":10,"nodeType":"1463","messageId":"1464","endLine":25,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1569","line":48,"column":10,"nodeType":"1463","messageId":"1464","endLine":48,"endColumn":16},{"ruleId":"1461","severity":1,"message":"1590","line":50,"column":10,"nodeType":"1463","messageId":"1464","endLine":50,"endColumn":17},{"ruleId":"1461","severity":1,"message":"1616","line":50,"column":19,"nodeType":"1463","messageId":"1464","endLine":50,"endColumn":29},{"ruleId":"1530","severity":1,"message":"1539","line":247,"column":21,"nodeType":"1532","messageId":"1533","endLine":247,"endColumn":23},{"ruleId":"1461","severity":1,"message":"1521","line":3,"column":16,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":25},{"ruleId":"1461","severity":1,"message":"1663","line":7,"column":10,"nodeType":"1463","messageId":"1464","endLine":7,"endColumn":22},{"ruleId":"1461","severity":1,"message":"1664","line":7,"column":24,"nodeType":"1463","messageId":"1464","endLine":7,"endColumn":42},{"ruleId":"1461","severity":1,"message":"1665","line":10,"column":10,"nodeType":"1463","messageId":"1464","endLine":10,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1666","line":10,"column":22,"nodeType":"1463","messageId":"1464","endLine":10,"endColumn":35},{"ruleId":"1461","severity":1,"message":"1509","line":12,"column":7,"nodeType":"1463","messageId":"1464","endLine":12,"endColumn":14},{"ruleId":"1574","severity":1,"message":"1575","line":42,"column":21,"nodeType":"1576","messageId":"1577","endLine":42,"endColumn":38},{"ruleId":"1461","severity":1,"message":"1667","line":6,"column":8,"nodeType":"1463","messageId":"1464","endLine":6,"endColumn":26},{"ruleId":"1461","severity":1,"message":"1668","line":4,"column":10,"nodeType":"1463","messageId":"1464","endLine":4,"endColumn":21},{"ruleId":"1461","severity":1,"message":"1669","line":14,"column":12,"nodeType":"1463","messageId":"1464","endLine":14,"endColumn":21},{"ruleId":"1461","severity":1,"message":"1670","line":14,"column":23,"nodeType":"1463","messageId":"1464","endLine":14,"endColumn":35},{"ruleId":"1461","severity":1,"message":"1671","line":15,"column":12,"nodeType":"1463","messageId":"1464","endLine":15,"endColumn":23},{"ruleId":"1461","severity":1,"message":"1672","line":16,"column":11,"nodeType":"1463","messageId":"1464","endLine":16,"endColumn":15},{"ruleId":"1493","severity":1,"message":"1673","line":32,"column":6,"nodeType":"1495","endLine":32,"endColumn":17,"suggestions":"1674"},{"ruleId":"1493","severity":1,"message":"1494","line":36,"column":6,"nodeType":"1495","endLine":36,"endColumn":8,"suggestions":"1675"},{"ruleId":"1530","severity":1,"message":"1531","line":53,"column":26,"nodeType":"1532","messageId":"1533","endLine":53,"endColumn":28},{"ruleId":"1530","severity":1,"message":"1531","line":56,"column":27,"nodeType":"1532","messageId":"1533","endLine":56,"endColumn":29},{"ruleId":"1530","severity":1,"message":"1531","line":69,"column":26,"nodeType":"1532","messageId":"1533","endLine":69,"endColumn":28},{"ruleId":"1530","severity":1,"message":"1531","line":83,"column":23,"nodeType":"1532","messageId":"1533","endLine":83,"endColumn":25},{"ruleId":"1530","severity":1,"message":"1531","line":139,"column":45,"nodeType":"1532","messageId":"1533","endLine":139,"endColumn":47},{"ruleId":"1530","severity":1,"message":"1531","line":140,"column":27,"nodeType":"1532","messageId":"1533","endLine":140,"endColumn":29},{"ruleId":"1493","severity":1,"message":"1676","line":62,"column":8,"nodeType":"1495","endLine":62,"endColumn":10,"suggestions":"1677"},{"ruleId":"1493","severity":1,"message":"1678","line":75,"column":8,"nodeType":"1495","endLine":75,"endColumn":24,"suggestions":"1679"},{"ruleId":"1461","severity":1,"message":"1680","line":80,"column":7,"nodeType":"1463","messageId":"1464","endLine":80,"endColumn":17},{"ruleId":"1461","severity":1,"message":"1681","line":103,"column":13,"nodeType":"1463","messageId":"1464","endLine":103,"endColumn":23},{"ruleId":"1595","severity":1,"message":"1596","line":125,"column":25,"nodeType":"1527","endLine":125,"endColumn":61},{"ruleId":"1461","severity":1,"message":"1682","line":2,"column":8,"nodeType":"1463","messageId":"1464","endLine":2,"endColumn":18},{"ruleId":"1461","severity":1,"message":"1543","line":2,"column":3,"nodeType":"1463","messageId":"1464","endLine":2,"endColumn":22},{"ruleId":"1461","severity":1,"message":"1544","line":3,"column":3,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":24},{"ruleId":"1461","severity":1,"message":"1545","line":4,"column":3,"nodeType":"1463","messageId":"1464","endLine":4,"endColumn":12},{"ruleId":"1461","severity":1,"message":"1546","line":11,"column":8,"nodeType":"1463","messageId":"1464","endLine":11,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1683","line":12,"column":8,"nodeType":"1463","messageId":"1464","endLine":12,"endColumn":19},{"ruleId":"1461","severity":1,"message":"1470","line":13,"column":8,"nodeType":"1463","messageId":"1464","endLine":13,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1542","line":14,"column":8,"nodeType":"1463","messageId":"1464","endLine":14,"endColumn":27},{"ruleId":"1461","severity":1,"message":"1682","line":17,"column":8,"nodeType":"1463","messageId":"1464","endLine":17,"endColumn":18},{"ruleId":"1461","severity":1,"message":"1509","line":20,"column":9,"nodeType":"1463","messageId":"1464","endLine":20,"endColumn":16},{"ruleId":"1461","severity":1,"message":"1547","line":21,"column":24,"nodeType":"1463","messageId":"1464","endLine":21,"endColumn":32},{"ruleId":"1461","severity":1,"message":"1590","line":22,"column":10,"nodeType":"1463","messageId":"1464","endLine":22,"endColumn":17},{"ruleId":"1493","severity":1,"message":"1515","line":30,"column":6,"nodeType":"1495","endLine":30,"endColumn":8,"suggestions":"1684"},{"ruleId":"1461","severity":1,"message":"1549","line":36,"column":9,"nodeType":"1463","messageId":"1464","endLine":36,"endColumn":18},{"ruleId":"1461","severity":1,"message":"1522","line":3,"column":10,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":14},{"ruleId":"1461","severity":1,"message":"1685","line":4,"column":8,"nodeType":"1463","messageId":"1464","endLine":4,"endColumn":17},{"ruleId":"1461","severity":1,"message":"1686","line":5,"column":8,"nodeType":"1463","messageId":"1464","endLine":5,"endColumn":17},{"ruleId":"1461","severity":1,"message":"1687","line":3,"column":8,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":24},{"ruleId":"1461","severity":1,"message":"1593","line":3,"column":10,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1562","line":13,"column":11,"nodeType":"1463","messageId":"1464","endLine":13,"endColumn":22},{"ruleId":"1595","severity":1,"message":"1596","line":29,"column":15,"nodeType":"1527","endLine":38,"endColumn":17},{"ruleId":"1595","severity":1,"message":"1596","line":75,"column":17,"nodeType":"1527","endLine":78,"endColumn":19},{"ruleId":"1461","severity":1,"message":"1522","line":3,"column":10,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":14},{"ruleId":"1461","severity":1,"message":"1688","line":3,"column":16,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":23},{"ruleId":"1595","severity":1,"message":"1596","line":59,"column":11,"nodeType":"1527","endLine":62,"endColumn":13},{"ruleId":"1595","severity":1,"message":"1596","line":82,"column":13,"nodeType":"1527","endLine":86,"endColumn":15},{"ruleId":"1461","severity":1,"message":"1689","line":1,"column":10,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":23},{"ruleId":"1461","severity":1,"message":"1462","line":1,"column":27,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":36},{"ruleId":"1461","severity":1,"message":"1519","line":1,"column":38,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":49},{"ruleId":"1461","severity":1,"message":"1538","line":5,"column":10,"nodeType":"1463","messageId":"1464","endLine":5,"endColumn":26},{"ruleId":"1461","severity":1,"message":"1611","line":8,"column":3,"nodeType":"1463","messageId":"1464","endLine":8,"endColumn":12},{"ruleId":"1461","severity":1,"message":"1608","line":10,"column":3,"nodeType":"1463","messageId":"1464","endLine":10,"endColumn":33},{"ruleId":"1461","severity":1,"message":"1545","line":11,"column":3,"nodeType":"1463","messageId":"1464","endLine":11,"endColumn":12},{"ruleId":"1461","severity":1,"message":"1690","line":12,"column":3,"nodeType":"1463","messageId":"1464","endLine":12,"endColumn":15},{"ruleId":"1461","severity":1,"message":"1584","line":14,"column":8,"nodeType":"1463","messageId":"1464","endLine":14,"endColumn":23},{"ruleId":"1461","severity":1,"message":"1691","line":18,"column":24,"nodeType":"1463","messageId":"1464","endLine":18,"endColumn":30},{"ruleId":"1461","severity":1,"message":"1614","line":20,"column":10,"nodeType":"1463","messageId":"1464","endLine":20,"endColumn":17},{"ruleId":"1461","severity":1,"message":"1615","line":20,"column":19,"nodeType":"1463","messageId":"1464","endLine":20,"endColumn":29},{"ruleId":"1461","severity":1,"message":"1622","line":27,"column":5,"nodeType":"1463","messageId":"1464","endLine":27,"endColumn":13},{"ruleId":"1461","severity":1,"message":"1543","line":2,"column":3,"nodeType":"1463","messageId":"1464","endLine":2,"endColumn":22},{"ruleId":"1461","severity":1,"message":"1544","line":3,"column":3,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":24},{"ruleId":"1461","severity":1,"message":"1545","line":4,"column":3,"nodeType":"1463","messageId":"1464","endLine":4,"endColumn":12},{"ruleId":"1461","severity":1,"message":"1509","line":16,"column":9,"nodeType":"1463","messageId":"1464","endLine":16,"endColumn":16},{"ruleId":"1461","severity":1,"message":"1691","line":17,"column":24,"nodeType":"1463","messageId":"1464","endLine":17,"endColumn":30},{"ruleId":"1461","severity":1,"message":"1590","line":18,"column":10,"nodeType":"1463","messageId":"1464","endLine":18,"endColumn":17},{"ruleId":"1493","severity":1,"message":"1515","line":26,"column":6,"nodeType":"1495","endLine":26,"endColumn":8,"suggestions":"1692"},{"ruleId":"1461","severity":1,"message":"1693","line":32,"column":9,"nodeType":"1463","messageId":"1464","endLine":32,"endColumn":20},{"ruleId":"1525","severity":1,"message":"1526","line":50,"column":9,"nodeType":"1527","endLine":50,"endColumn":13},{"ruleId":"1461","severity":1,"message":"1593","line":3,"column":10,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1598","line":5,"column":10,"nodeType":"1463","messageId":"1464","endLine":5,"endColumn":19},{"ruleId":"1461","severity":1,"message":"1509","line":12,"column":9,"nodeType":"1463","messageId":"1464","endLine":12,"endColumn":16},{"ruleId":"1461","severity":1,"message":"1562","line":13,"column":11,"nodeType":"1463","messageId":"1464","endLine":13,"endColumn":22},{"ruleId":"1595","severity":1,"message":"1596","line":29,"column":15,"nodeType":"1527","endLine":38,"endColumn":17},{"ruleId":"1461","severity":1,"message":"1694","line":2,"column":8,"nodeType":"1463","messageId":"1464","endLine":2,"endColumn":25},{"ruleId":"1461","severity":1,"message":"1462","line":3,"column":27,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":36},{"ruleId":"1461","severity":1,"message":"1519","line":3,"column":38,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":49},{"ruleId":"1461","severity":1,"message":"1695","line":5,"column":8,"nodeType":"1463","messageId":"1464","endLine":5,"endColumn":22},{"ruleId":"1461","severity":1,"message":"1559","line":8,"column":10,"nodeType":"1463","messageId":"1464","endLine":8,"endColumn":19},{"ruleId":"1461","severity":1,"message":"1560","line":8,"column":21,"nodeType":"1463","messageId":"1464","endLine":8,"endColumn":33},{"ruleId":"1461","severity":1,"message":"1696","line":1,"column":10,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":27},{"ruleId":"1530","severity":1,"message":"1531","line":26,"column":21,"nodeType":"1532","messageId":"1533","endLine":26,"endColumn":23},{"ruleId":"1461","severity":1,"message":"1697","line":1,"column":8,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":12},{"ruleId":"1461","severity":1,"message":"1698","line":1,"column":8,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1697","line":2,"column":8,"nodeType":"1463","messageId":"1464","endLine":2,"endColumn":12},{"ruleId":"1461","severity":1,"message":"1477","line":4,"column":8,"nodeType":"1463","messageId":"1464","endLine":4,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1699","line":6,"column":8,"nodeType":"1463","messageId":"1464","endLine":6,"endColumn":29},{"ruleId":"1461","severity":1,"message":"1470","line":8,"column":8,"nodeType":"1463","messageId":"1464","endLine":8,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1542","line":9,"column":8,"nodeType":"1463","messageId":"1464","endLine":9,"endColumn":27},{"ruleId":"1461","severity":1,"message":"1517","line":1,"column":8,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":12},{"ruleId":"1461","severity":1,"message":"1518","line":2,"column":17,"nodeType":"1463","messageId":"1464","endLine":2,"endColumn":25},{"ruleId":"1461","severity":1,"message":"1462","line":2,"column":27,"nodeType":"1463","messageId":"1464","endLine":2,"endColumn":36},{"ruleId":"1461","severity":1,"message":"1519","line":2,"column":38,"nodeType":"1463","messageId":"1464","endLine":2,"endColumn":49},{"ruleId":"1461","severity":1,"message":"1521","line":3,"column":22,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":31},{"ruleId":"1461","severity":1,"message":"1522","line":3,"column":33,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":37},{"ruleId":"1461","severity":1,"message":"1641","line":4,"column":8,"nodeType":"1463","messageId":"1464","endLine":4,"endColumn":21},{"ruleId":"1461","severity":1,"message":"1523","line":5,"column":10,"nodeType":"1463","messageId":"1464","endLine":5,"endColumn":33},{"ruleId":"1461","severity":1,"message":"1700","line":7,"column":8,"nodeType":"1463","messageId":"1464","endLine":7,"endColumn":28},{"ruleId":"1461","severity":1,"message":"1475","line":8,"column":8,"nodeType":"1463","messageId":"1464","endLine":8,"endColumn":14},{"ruleId":"1461","severity":1,"message":"1535","line":20,"column":10,"nodeType":"1463","messageId":"1464","endLine":20,"endColumn":13},{"ruleId":"1461","severity":1,"message":"1537","line":20,"column":37,"nodeType":"1463","messageId":"1464","endLine":20,"endColumn":40},{"ruleId":"1461","severity":1,"message":"1568","line":23,"column":10,"nodeType":"1463","messageId":"1464","endLine":23,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1569","line":47,"column":10,"nodeType":"1463","messageId":"1464","endLine":47,"endColumn":16},{"ruleId":"1461","severity":1,"message":"1570","line":48,"column":10,"nodeType":"1463","messageId":"1464","endLine":48,"endColumn":17},{"ruleId":"1530","severity":1,"message":"1539","line":223,"column":21,"nodeType":"1532","messageId":"1533","endLine":223,"endColumn":23},{"ruleId":"1461","severity":1,"message":"1518","line":1,"column":17,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":25},{"ruleId":"1461","severity":1,"message":"1462","line":1,"column":27,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":36},{"ruleId":"1461","severity":1,"message":"1592","line":3,"column":24,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":34},{"ruleId":"1461","severity":1,"message":"1593","line":5,"column":10,"nodeType":"1463","messageId":"1464","endLine":5,"endColumn":20},{"ruleId":"1461","severity":1,"message":"1594","line":6,"column":10,"nodeType":"1463","messageId":"1464","endLine":6,"endColumn":23},{"ruleId":"1595","severity":1,"message":"1596","line":33,"column":15,"nodeType":"1527","endLine":42,"endColumn":17},{"ruleId":"1461","severity":1,"message":"1672","line":9,"column":10,"nodeType":"1463","messageId":"1464","endLine":9,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1499","line":66,"column":41,"nodeType":"1500","messageId":"1501","endLine":66,"endColumn":43},{"ruleId":"1493","severity":1,"message":"1701","line":88,"column":6,"nodeType":"1495","endLine":88,"endColumn":8,"suggestions":"1702"},{"ruleId":"1461","severity":1,"message":"1689","line":1,"column":10,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":23},{"ruleId":"1461","severity":1,"message":"1661","line":1,"column":50,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":60},{"ruleId":"1461","severity":1,"message":"1562","line":14,"column":11,"nodeType":"1463","messageId":"1464","endLine":14,"endColumn":22},{"ruleId":"1595","severity":1,"message":"1596","line":30,"column":15,"nodeType":"1527","endLine":39,"endColumn":17},{"ruleId":"1530","severity":1,"message":"1539","line":25,"column":29,"nodeType":"1532","messageId":"1533","endLine":25,"endColumn":31},{"ruleId":"1493","severity":1,"message":"1703","line":37,"column":6,"nodeType":"1495","endLine":37,"endColumn":8,"suggestions":"1704"},{"ruleId":"1595","severity":1,"message":"1596","line":66,"column":13,"nodeType":"1527","endLine":69,"endColumn":15},{"ruleId":"1530","severity":1,"message":"1531","line":89,"column":50,"nodeType":"1532","messageId":"1533","endLine":89,"endColumn":52},{"ruleId":"1530","severity":1,"message":"1531","line":105,"column":49,"nodeType":"1532","messageId":"1533","endLine":105,"endColumn":51},{"ruleId":"1595","severity":1,"message":"1596","line":13,"column":9,"nodeType":"1527","endLine":16,"endColumn":11},{"ruleId":"1493","severity":1,"message":"1673","line":20,"column":6,"nodeType":"1495","endLine":20,"endColumn":8,"suggestions":"1705"},{"ruleId":"1530","severity":1,"message":"1531","line":29,"column":27,"nodeType":"1532","messageId":"1533","endLine":29,"endColumn":29},{"ruleId":"1530","severity":1,"message":"1531","line":38,"column":27,"nodeType":"1532","messageId":"1533","endLine":38,"endColumn":29},{"ruleId":"1595","severity":1,"message":"1596","line":47,"column":9,"nodeType":"1527","endLine":50,"endColumn":11},{"ruleId":"1461","severity":1,"message":"1521","line":2,"column":10,"nodeType":"1463","messageId":"1464","endLine":2,"endColumn":19},{"ruleId":"1461","severity":1,"message":"1517","line":3,"column":8,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":12},{"ruleId":"1461","severity":1,"message":"1521","line":2,"column":10,"nodeType":"1463","messageId":"1464","endLine":2,"endColumn":19},{"ruleId":"1461","severity":1,"message":"1517","line":3,"column":8,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":12},{"ruleId":"1461","severity":1,"message":"1538","line":6,"column":10,"nodeType":"1463","messageId":"1464","endLine":6,"endColumn":26},{"ruleId":"1461","severity":1,"message":"1706","line":9,"column":3,"nodeType":"1463","messageId":"1464","endLine":9,"endColumn":34},{"ruleId":"1461","severity":1,"message":"1509","line":25,"column":9,"nodeType":"1463","messageId":"1464","endLine":25,"endColumn":16},{"ruleId":"1493","severity":1,"message":"1707","line":87,"column":6,"nodeType":"1495","endLine":87,"endColumn":46,"suggestions":"1708"},{"ruleId":"1530","severity":1,"message":"1539","line":123,"column":14,"nodeType":"1532","messageId":"1533","endLine":123,"endColumn":16},{"ruleId":"1461","severity":1,"message":"1709","line":7,"column":8,"nodeType":"1463","messageId":"1464","endLine":7,"endColumn":28},{"ruleId":"1461","severity":1,"message":"1689","line":1,"column":10,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":23},{"ruleId":"1461","severity":1,"message":"1661","line":1,"column":50,"nodeType":"1463","messageId":"1464","endLine":1,"endColumn":60},{"ruleId":"1461","severity":1,"message":"1710","line":3,"column":8,"nodeType":"1463","messageId":"1464","endLine":3,"endColumn":13},{"ruleId":"1461","severity":1,"message":"1580","line":4,"column":8,"nodeType":"1463","messageId":"1464","endLine":4,"endColumn":16},{"ruleId":"1461","severity":1,"message":"1522","line":6,"column":21,"nodeType":"1463","messageId":"1464","endLine":6,"endColumn":25},{"ruleId":"1461","severity":1,"message":"1711","line":30,"column":9,"nodeType":"1463","messageId":"1464","endLine":30,"endColumn":16},{"ruleId":"1498","severity":1,"message":"1499","line":34,"column":27,"nodeType":"1500","messageId":"1501","endLine":34,"endColumn":29},{"ruleId":"1498","severity":1,"message":"1499","line":57,"column":29,"nodeType":"1500","messageId":"1501","endLine":57,"endColumn":31},{"ruleId":"1498","severity":1,"message":"1499","line":76,"column":29,"nodeType":"1500","messageId":"1501","endLine":76,"endColumn":31},{"ruleId":"1498","severity":1,"message":"1499","line":77,"column":40,"nodeType":"1500","messageId":"1501","endLine":77,"endColumn":42},{"ruleId":"1498","severity":1,"message":"1499","line":82,"column":27,"nodeType":"1500","messageId":"1501","endLine":82,"endColumn":29},{"ruleId":"1498","severity":1,"message":"1499","line":101,"column":27,"nodeType":"1500","messageId":"1501","endLine":101,"endColumn":29},{"ruleId":"1498","severity":1,"message":"1499","line":102,"column":41,"nodeType":"1500","messageId":"1501","endLine":102,"endColumn":43},{"ruleId":"1498","severity":1,"message":"1499","line":107,"column":32,"nodeType":"1500","messageId":"1501","endLine":107,"endColumn":34},{"ruleId":"1498","severity":1,"message":"1499","line":126,"column":32,"nodeType":"1500","messageId":"1501","endLine":126,"endColumn":34},{"ruleId":"1498","severity":1,"message":"1499","line":127,"column":41,"nodeType":"1500","messageId":"1501","endLine":127,"endColumn":43},{"ruleId":"1493","severity":1,"message":"1502","line":136,"column":6,"nodeType":"1495","endLine":136,"endColumn":8,"suggestions":"1712"},{"ruleId":"1461","severity":1,"message":"1713","line":180,"column":12,"nodeType":"1463","messageId":"1464","endLine":180,"endColumn":23},{"ruleId":"1461","severity":1,"message":"1580","line":4,"column":8,"nodeType":"1463","messageId":"1464","endLine":4,"endColumn":16},{"ruleId":"1461","severity":1,"message":"1713","line":55,"column":10,"nodeType":"1463","messageId":"1464","endLine":55,"endColumn":21},{"ruleId":"1461","severity":1,"message":"1714","line":274,"column":17,"nodeType":"1463","messageId":"1464","endLine":274,"endColumn":25},{"ruleId":"1461","severity":1,"message":"1580","line":4,"column":8,"nodeType":"1463","messageId":"1464","endLine":4,"endColumn":16},{"ruleId":"1461","severity":1,"message":"1522","line":6,"column":21,"nodeType":"1463","messageId":"1464","endLine":6,"endColumn":25},{"ruleId":"1461","severity":1,"message":"1711","line":30,"column":9,"nodeType":"1463","messageId":"1464","endLine":30,"endColumn":16},{"ruleId":"1498","severity":1,"message":"1499","line":34,"column":27,"nodeType":"1500","messageId":"1501","endLine":34,"endColumn":29},{"ruleId":"1498","severity":1,"message":"1499","line":78,"column":29,"nodeType":"1500","messageId":"1501","endLine":78,"endColumn":31},{"ruleId":"1498","severity":1,"message":"1499","line":118,"column":29,"nodeType":"1500","messageId":"1501","endLine":118,"endColumn":31},{"ruleId":"1498","severity":1,"message":"1499","line":119,"column":40,"nodeType":"1500","messageId":"1501","endLine":119,"endColumn":42},{"ruleId":"1498","severity":1,"message":"1499","line":124,"column":27,"nodeType":"1500","messageId":"1501","endLine":124,"endColumn":29},{"ruleId":"1498","severity":1,"message":"1499","line":165,"column":27,"nodeType":"1500","messageId":"1501","endLine":165,"endColumn":29},{"ruleId":"1498","severity":1,"message":"1499","line":166,"column":41,"nodeType":"1500","messageId":"1501","endLine":166,"endColumn":43},{"ruleId":"1498","severity":1,"message":"1499","line":171,"column":32,"nodeType":"1500","messageId":"1501","endLine":171,"endColumn":34},{"ruleId":"1498","severity":1,"message":"1499","line":211,"column":32,"nodeType":"1500","messageId":"1501","endLine":211,"endColumn":34},{"ruleId":"1498","severity":1,"message":"1499","line":212,"column":41,"nodeType":"1500","messageId":"1501","endLine":212,"endColumn":43},{"ruleId":"1493","severity":1,"message":"1502","line":221,"column":6,"nodeType":"1495","endLine":221,"endColumn":8,"suggestions":"1715"},{"ruleId":"1461","severity":1,"message":"1713","line":265,"column":12,"nodeType":"1463","messageId":"1464","endLine":265,"endColumn":23},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setAuthorizationToken' is defined but never used.","no-native-reassign",["1716"],"no-negated-in-lhs",["1717"],"'ListProjects' is defined but never used.","'DetailsProjectNull' is defined but never used.","'ListCountryEnabled' is defined but never used.","'Details' is defined but never used.","'MoreDetailsProject' is defined but never used.","'Header' is defined but never used.","'ListAddedUsers' is defined but never used.","'NetworkGraph' is defined but never used.","'getProjectsOfMonthApi' is defined but never used.","'Tweets' is defined but never used.","'CardInfo2' is defined but never used.","'getVideosByCountry' is defined but never used.","'getAllTweetsByCountryPagination' is defined but never used.","'useIntersectionObserver' is defined but never used.","'useInfiniteQuery' is defined but never used.","'getArticlesByCountry' is defined but never used.","'setExpert' is assigned a value but never used.","'limit' is assigned a value but never used.","'loadMoreButtonRef' is assigned a value but never used.","'getProjectOfMonthByCountryApi' is defined but never used.","'copTypeId' is assigned a value but never used.","'donorTypeId' is assigned a value but never used.","'beneficiaryTypeId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDataFromApi'. Either include it or remove the dependency array.","ArrayExpression",["1718"],"'multimedia' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useCallback has missing dependencies: 'graph' and 'idProject'. Either include them or remove the dependency array. You can also do a functional update 'setGraph(g => ...)' if you only need 'graph' in the 'setGraph' call.",["1719"],"'PublicFooter' is defined but never used.","'PublicHeader' is defined but never used.","'getAllArticlesByCountryPagination' is defined but never used.","'getArticlesAccepted' is defined but never used.","'setTest' is assigned a value but never used.","'history' is assigned a value but never used.","'getNumberProjectsByCountryNULL' is defined but never used.","'MTableOrganization' is defined but never used.","'deleteSubOrg' is assigned a value but never used.","'MTableInterview' is defined but never used.","'interview' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'codeCountry'. Either include it or remove the dependency array.",["1720"],"'Flag' is defined but never used.","'useState' is defined but never used.","'useCallback' is defined but never used.","'useHistory' is defined but never used.","'useParams' is defined but never used.","'Link' is defined but never used.","'getAllProjectsByCountry' is defined but never used.","'deleteProject' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'getAllVideosByCountryPagination' is defined but never used.","'getVideoAccepted' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useRef' is defined but never used.","'Row' is defined but never used.","'FormGroup' is defined but never used.","'Col' is defined but never used.","'getCountryByCode' is defined but never used.","Expected '!==' and instead saw '!='.","'YoutubeVideo' is defined but never used.","'AddTechnicalDetails' is defined but never used.","'ListProjectsValides' is defined but never used.","'enableExpertOfMonth' is defined but never used.","'disabledExpertOfMonth' is defined but never used.","'getExpert' is defined but never used.","'MtableExpert' is defined but never used.","'idExpert' is assigned a value but never used.",["1721"],"'deleteExp' is assigned a value but never used.","'fakeLogo' is defined but never used.",["1722"],"'InputSearch' is defined but never used.","'getNumberProjects' is defined but never used.","'getDisabledCountries' is defined but never used.","'numberallprojects' is assigned a value but never used.","'setnumberallprojects' is assigned a value but never used.","'deletePjt' is assigned a value but never used.","'getAllwebmasters' is defined but never used.","'webmaster' is assigned a value but never used.","'setWebmaster' is assigned a value but never used.","'test' is assigned a value but never used.","'codeCountry' is assigned a value but never used.","'id' is assigned a value but never used.",["1723"],"React Hook useEffect has a missing dependency: 'searchText'. Either include it or remove the dependency array. If 'settempText' needs the current value of 'searchText', you can also switch to useReducer instead of useState and read 'searchText' in the reducer.",["1724"],["1725"],"'getAllCops' is defined but never used.","'status' is assigned a value but never used.","'project' is assigned a value but never used.",["1726"],"React Hook useCallback has a missing dependency: 'suborganization?.logo'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLogoPreview' needs the current value of 'suborganization.logo'.",["1727"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",["1716"],["1717"],"'ReactDOM' is defined but never used.","'SimpleMap' is defined but never used.","'CardInfoExpert' is defined but never used.","'getExpertArticleByIdExpert' is defined but never used.","'urlImageAdapter' is defined but never used.","'isDesktopOrLaptop' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'idInterview'. Either include it or remove the dependency array.",["1728"],"'index' is assigned a value but never used.","'Checkbox' is defined but never used.","'country' is assigned a value but never used.",["1729"],"'AiFillEdit' is defined but never used.","'FcCalendar' is defined but never used.","'CgDetailsMore' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'AiFillDelete' is defined but never used.","'FaRegEdit' is defined but never used.","'deleteOrganization' is defined but never used.","'reloadTableData' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"1730","text":"1731"},{"range":"1732","text":"1731"},"'AiOutlineCluster' is defined but never used.","'logo' is assigned a value but never used.","'getAllHeadExpertsWithIdAndName' is defined but never used.","'Select' is defined but never used.","'getEnabledCountries' is defined but never used.","'AddExpert' is defined but never used.","'AddWebmaster' is defined but never used.","'idInterview' is assigned a value but never used.","'content' is assigned a value but never used.","'setContent' is assigned a value but never used.","'setCountry' is assigned a value but never used.","'selectedOption' is assigned a value but never used.","'setSelectedOption' is assigned a value but never used.","'optionscountry' is assigned a value but never used.","'setOptionscountry' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'setValue' is assigned a value but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'AiOutlineProfile' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["1733"],"'data' is assigned a value but never used.",["1734"],"'getImpactsByProject' is defined but never used.","React Hook useCallback has a missing dependency: 'idProject'. Either include it or remove the dependency array.",["1735"],"React Hook useEffect has a missing dependency: 'impact.outcomes'. Either include it or remove the dependency array. If 'setOutcomes' needs the current value of 'impact.outcomes', you can also switch to useReducer instead of useState and read 'impact.outcomes' in the reducer.",["1736"],"React Hook useEffect has a missing dependency: 'outcome?.outputs'. Either include it or remove the dependency array. If 'setOutputs' needs the current value of 'outcome.outputs', you can also switch to useReducer instead of useState and read 'outcome.outputs' in the reducer.",["1737"],"React Hook useEffect has a missing dependency: 'output?.activities'. Either include it or remove the dependency array. If 'setActivities' needs the current value of 'output.activities', you can also switch to useReducer instead of useState and read 'output.activities' in the reducer.",["1738"],"'MTableProject' is defined but never used.","'projects' is assigned a value but never used.","'multimedia1' is assigned a value but never used.",{"range":"1739","text":"1731"},"'impacts' is assigned a value but never used.","'setImpacts' is assigned a value but never used.",["1740"],"'editModalIsOpen' is assigned a value but never used.","'displayNodeType' is assigned a value but never used.","'setDisplayNodeType' is assigned a value but never used.","'parentNode' is assigned a value but never used.","'setParantNode' is assigned a value but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.",["1741"],"'initialiseGraph' is assigned a value but never used.","'edges' is assigned a value but never used.","'nodes' is assigned a value but never used.","'closeEditModal' is defined but never used.","'getAllProjectsOfMonthByDonors' is defined but never used.","'putRequest' is defined but never used.","'accept' is assigned a value but never used.","'getDonorsApi' is defined but never used.","'getImplementersApi' is defined but never used.","'searchText' is assigned a value but never used.","'setSearchText' is assigned a value but never used.","'BusinessCenterIcon' is defined but never used.","'useSelector' is defined but never used.","'myAccount' is assigned a value but never used.","'setMyAccount' is assigned a value but never used.","'numberviews' is assigned a value but never used.","'user' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'userInfo?.user?._id'. Either include it or remove the dependency array.",["1742"],["1743"],"React Hook useCallback has a missing dependency: 'postId'. Either include it or remove the dependency array.",["1744"],"React Hook useEffect has missing dependencies: 'postId' and 'userInfo?.user?._id'. Either include them or remove the dependency array.",["1745"],"'isFetching' is assigned a value but never used.","'newComment' is assigned a value but never used.","'ExpertForm' is defined but never used.","'TableExpert' is defined but never used.",["1746"],"'LoginForm' is defined but never used.","'SideImage' is defined but never used.","'RegistrationForm' is defined but never used.","'history' is defined but never used.","'deleteRequest' is defined but never used.","'updateExpert' is defined but never used.","'idUser' is assigned a value but never used.",["1747"],"'deleteUserr' is assigned a value but never used.","'TableOrganization' is defined but never used.","'TableWebmaster' is defined but never used.","'getInvitationsApi' is defined but never used.","'Feed' is defined but never used.","'TableProject' is defined but never used.","'TableProjectsLinkedin' is defined but never used.","'TableProjectAccepted' is defined but never used.","React Hook useCallback has missing dependencies: 'graph' and 'userInfo?.user?._id'. Either include them or remove the dependency array. You can also do a functional update 'setGraph(g => ...)' if you only need 'graph' in the 'setGraph' call.",["1748"],"React Hook useCallback has missing dependencies: 'idUser' and 'userInfo?.user?._id'. Either include them or remove the dependency array.",["1749"],["1750"],"'getAllOrganizationsByPagination' is defined but never used.","React Hook useCallback has a missing dependency: 'organization?.logo'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLogoPreview' needs the current value of 'organization.logo'.",["1751"],"'PublicFooterHomepage' is defined but never used.","'Color' is defined but never used.","'impactX' is assigned a value but never used.",["1752"],"'randomColor' is defined but never used.","'setState' is assigned a value but never used.",["1753"],"no-global-assign","no-unsafe-negation",{"desc":"1754","fix":"1755"},{"desc":"1756","fix":"1757"},{"desc":"1758","fix":"1759"},{"desc":"1758","fix":"1760"},{"desc":"1761","fix":"1762"},{"desc":"1763","fix":"1764"},{"desc":"1765","fix":"1766"},{"desc":"1763","fix":"1767"},{"desc":"1768","fix":"1769"},{"desc":"1770","fix":"1771"},{"desc":"1772","fix":"1773"},{"desc":"1758","fix":"1774"},[1926,1926]," rel=\"noreferrer\"",[2487,2487],{"desc":"1775","fix":"1776"},{"desc":"1758","fix":"1777"},{"desc":"1778","fix":"1779"},{"desc":"1780","fix":"1781"},{"desc":"1782","fix":"1783"},{"desc":"1784","fix":"1785"},[287,287],{"desc":"1778","fix":"1786"},{"desc":"1756","fix":"1787"},{"desc":"1788","fix":"1789"},{"desc":"1754","fix":"1790"},{"desc":"1791","fix":"1792"},{"desc":"1793","fix":"1794"},{"desc":"1758","fix":"1795"},{"desc":"1758","fix":"1796"},{"desc":"1797","fix":"1798"},{"desc":"1799","fix":"1800"},{"desc":"1801","fix":"1802"},{"desc":"1803","fix":"1804"},{"desc":"1756","fix":"1805"},{"desc":"1756","fix":"1806"},"Update the dependencies array to be: [getDataFromApi]",{"range":"1807","text":"1808"},"Update the dependencies array to be: [graph, idProject]",{"range":"1809","text":"1810"},"Update the dependencies array to be: [codeCountry]",{"range":"1811","text":"1812"},{"range":"1813","text":"1812"},"Update the dependencies array to be: [codeCountry, idProject]",{"range":"1814","text":"1815"},"Update the dependencies array to be: [codeCountry, getDataFromApi]",{"range":"1816","text":"1817"},"Update the dependencies array to be: [searchText]",{"range":"1818","text":"1819"},{"range":"1820","text":"1817"},"Update the dependencies array to be: [codeCountry, idProject, setValue]",{"range":"1821","text":"1822"},"Update the dependencies array to be: [idSubOrganization, suborganization?.logo, setValue]",{"range":"1823","text":"1824"},"Update the dependencies array to be: [idInterview]",{"range":"1825","text":"1826"},{"range":"1827","text":"1812"},"Update the dependencies array to be: [codeCountry, idWebmaster, setValue]",{"range":"1828","text":"1829"},{"range":"1830","text":"1812"},"Update the dependencies array to be: [idProject]",{"range":"1831","text":"1832"},"Update the dependencies array to be: [impact.outcomes]",{"range":"1833","text":"1834"},"Update the dependencies array to be: [outcome?.outputs]",{"range":"1835","text":"1836"},"Update the dependencies array to be: [output?.activities]",{"range":"1837","text":"1838"},{"range":"1839","text":"1832"},{"range":"1840","text":"1810"},"Update the dependencies array to be: [idProfile, userInfo?.user?._id]",{"range":"1841","text":"1842"},{"range":"1843","text":"1808"},"Update the dependencies array to be: [postId]",{"range":"1844","text":"1845"},"Update the dependencies array to be: [isIntersecting, postId, userInfo?.user?._id]",{"range":"1846","text":"1847"},{"range":"1848","text":"1812"},{"range":"1849","text":"1812"},"Update the dependencies array to be: [graph, userInfo?.user?._id]",{"range":"1850","text":"1851"},"Update the dependencies array to be: [idUser, userInfo?.user?._id]",{"range":"1852","text":"1853"},"Update the dependencies array to be: [userInfo?.user?._id]",{"range":"1854","text":"1855"},"Update the dependencies array to be: [idOrganization, organization?.logo, setValue]",{"range":"1856","text":"1857"},{"range":"1858","text":"1810"},{"range":"1859","text":"1810"},[1180,1182],"[getDataFromApi]",[3085,3087],"[graph, idProject]",[941,943],"[codeCountry]",[956,958],[4846,4857],"[codeCountry, idProject]",[678,691],"[codeCountry, getDataFromApi]",[252,254],"[searchText]",[582,595],[6537,6558],"[codeCountry, idProject, setValue]",[2349,2392],"[idSubOrganization, suborganization?.logo, setValue]",[715,717],"[idInterview]",[1913,1915],[1683,1706],"[codeCountry, idWebmaster, setValue]",[587,589],[887,889],"[idProject]",[670,672],"[impact.outcomes]",[668,670],"[outcome?.outputs]",[637,639],"[output?.activities]",[1536,1538],[4316,4318],[1243,1254],"[idProfile, userInfo?.user?._id]",[1305,1307],[1926,1928],"[postId]",[2207,2223],"[isIntersecting, postId, userInfo?.user?._id]",[1228,1230],[833,835],[2082,2084],"[graph, userInfo?.user?._id]",[1217,1219],"[idUser, userInfo?.user?._id]",[644,646],"[userInfo?.user?._id]",[2684,2724],"[idOrganization, organization?.logo, setValue]",[3626,3628],[5965,5967]]