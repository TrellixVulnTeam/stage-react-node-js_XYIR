{"ast":null,"code":"import { deleteRequest, getRequest, postRequest, putRequest } from \"./index\";\nexport const getOrganization = async organizationId => {\n  try {\n    const {\n      data\n    } = await getRequest(`organization/${organizationId}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getDonorsOfMonth = async (limit, page, searchText) => {\n  try {\n    const res = await getRequest(`organization/funderOfMonth?searchText=${searchText}&limit=${limit}&page=${page}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getDonorsOfMonthScrolling = async ({\n  pageParam = 1,\n  queryKey\n}) => {\n  const [search, limitPage] = queryKey;\n  const {\n    data\n  } = await getRequest(`organization/funderOfMonth?searchText=${search}&limit=${limitPage}&page=${pageParam}`);\n  return {\n    data: data === null || data === void 0 ? void 0 : data.data,\n    page: pageParam\n  };\n};\nexport const getImplementersOfMonth = async (limit, page) => {\n  try {\n    const res = await getRequest(`organization/implementerOfMonth?searchText=&limit=${limit}&page=${page}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getImplementersOfMonthScrolling = async ({\n  pageParam = 1,\n  queryKey\n}) => {\n  const [search, limitPage] = queryKey;\n  const {\n    data\n  } = await getRequest(`organization/implementerOfMonth?searchText=${search}&limit=${limitPage}&page=${pageParam}`);\n  return {\n    data: data.data,\n    page: pageParam\n  };\n};\nexport const getDonors = async () => {\n  try {\n    const res = await getRequest(\"organization\");\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllOrganizations = async () => {\n  try {\n    const res = await getRequest(\"organization\");\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}; // get all organization  with fields ID and Name just to improve performance\n\nexport const getAllHeadOrganizationsWithIdAndName = async () => {\n  try {\n    const res = await getRequest(\"organization/headOrganizationWithIdAndName\");\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const AddOrganization = async organization => {\n  try {\n    const res = await postRequest(\"organization\", organization);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n_c = AddOrganization;\nexport const getSubsidiaryOrganization = async () => {\n  try {\n    const res = await getRequest(\"organization/subsidiaryOrganization\");\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteOrganization = async orgId => {\n  try {\n    const res = await deleteRequest(`organization/${orgId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getNumberOrganizationsByCountry = async codeCountry => {\n  try {\n    const res = await getRequest(`organization/numberByCodeCountry/${codeCountry}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllOrganizationsByCountry = async codeCountry => {\n  try {\n    const res = await getRequest(`organization/ByCodeCountry/${codeCountry}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllOrganizationsByPagination = async ({\n  pageParam = 1,\n  queryKey\n}) => {\n  const [limit] = queryKey;\n\n  try {\n    const {\n      data\n    } = await postRequest(`organization/getAllOrganizationsByPagination?limit=${limit}&page=${pageParam}`);\n    return {\n      data: data.data,\n      page: pageParam\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateOrganization = async (idOrganization, organization) => {\n  try {\n    const res = await putRequest(`organization/${idOrganization}`, organization);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getOrganizationByType = async orgType => {\n  try {\n    const res = await getRequest(`organization/byType/${orgType}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getDonorsApi = async codeCountry => {\n  try {\n    const res = await getRequest(`organization/donors/${codeCountry}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getImplementersApi = async codeCountry => {\n  try {\n    const res = await getRequest(`organization/implementers/${codeCountry}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const enableDonorOfMonth = async donorId => {\n  try {\n    const res = await putRequest(`organization/enableDonorOfMonth/${donorId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const disabledDonorOfMonth = async donorId => {\n  try {\n    const res = await putRequest(`organization/disabledDonorOfMonth/${donorId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const enableImplementerOfMonth = async implementerId => {\n  try {\n    const res = await putRequest(`organization/enabelImplementerOfMonth/${implementerId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const disabledImplementerOfMonth = async implementerId => {\n  try {\n    const res = await putRequest(`organization/disabledImplementerOfMonth/${implementerId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AddOrganization\");","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/organizationApi.js"],"names":["deleteRequest","getRequest","postRequest","putRequest","getOrganization","organizationId","data","error","console","log","getDonorsOfMonth","limit","page","searchText","res","getDonorsOfMonthScrolling","pageParam","queryKey","search","limitPage","getImplementersOfMonth","getImplementersOfMonthScrolling","getDonors","getAllOrganizations","getAllHeadOrganizationsWithIdAndName","AddOrganization","organization","getSubsidiaryOrganization","deleteOrganization","orgId","getNumberOrganizationsByCountry","codeCountry","getAllOrganizationsByCountry","getAllOrganizationsByPagination","updateOrganization","idOrganization","getOrganizationByType","orgType","getDonorsApi","getImplementersApi","enableDonorOfMonth","donorId","disabledDonorOfMonth","enableImplementerOfMonth","implementerId","disabledImplementerOfMonth"],"mappings":"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","sourcesContent":["import { deleteRequest, getRequest, postRequest, putRequest } from \"./index\";\n\nexport const getOrganization = async (organizationId) => {\n  try {\n    const { data } = await getRequest(`organization/${organizationId}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getDonorsOfMonth = async (limit, page, searchText) => {\n  try {\n    const res = await getRequest(\n      `organization/funderOfMonth?searchText=${searchText}&limit=${limit}&page=${page}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getDonorsOfMonthScrolling = async ({\n  pageParam = 1,\n  queryKey,\n}) => {\n  const [search, limitPage] = queryKey;\n  const { data } = await getRequest(\n    `organization/funderOfMonth?searchText=${search}&limit=${limitPage}&page=${pageParam}`\n  );\n\n  return { data: data?.data, page: pageParam };\n};\n\nexport const getImplementersOfMonth = async (limit, page) => {\n  try {\n    const res = await getRequest(\n      `organization/implementerOfMonth?searchText=&limit=${limit}&page=${page}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getImplementersOfMonthScrolling = async ({\n  pageParam = 1,\n  queryKey,\n}) => {\n  const [search, limitPage] = queryKey;\n  const { data } = await getRequest(\n    `organization/implementerOfMonth?searchText=${search}&limit=${limitPage}&page=${pageParam}`\n  );\n\n  return {\n    data: data.data,\n    page: pageParam,\n  };\n};\n\nexport const getDonors = async () => {\n  try {\n    const res = await getRequest(\"organization\");\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getAllOrganizations = async () => {\n  try {\n    const res = await getRequest(\"organization\");\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n// get all organization  with fields ID and Name just to improve performance\nexport const getAllHeadOrganizationsWithIdAndName = async () => {\n  try {\n    const res = await getRequest(\"organization/headOrganizationWithIdAndName\");\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const AddOrganization = async (organization) => {\n  try {\n    const res = await postRequest(\"organization\", organization);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSubsidiaryOrganization = async () => {\n  try {\n    const res = await getRequest(\"organization/subsidiaryOrganization\");\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteOrganization = async (orgId) => {\n  try {\n    const res = await deleteRequest(`organization/${orgId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getNumberOrganizationsByCountry = async (codeCountry) => {\n  try {\n    const res = await getRequest(\n      `organization/numberByCodeCountry/${codeCountry}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getAllOrganizationsByCountry = async (codeCountry) => {\n  try {\n    const res = await getRequest(`organization/ByCodeCountry/${codeCountry}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getAllOrganizationsByPagination = async ({\n  pageParam = 1,\n  queryKey,\n}) => {\n  const [limit] = queryKey;\n  try {\n    const { data } = await postRequest(\n      `organization/getAllOrganizationsByPagination?limit=${limit}&page=${pageParam}`\n    );\n    return { data: data.data, page: pageParam };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateOrganization = async (idOrganization, organization) => {\n  try {\n    const res = await putRequest(\n      `organization/${idOrganization}`,\n      organization\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getOrganizationByType = async (orgType) => {\n  try {\n    const res = await getRequest(`organization/byType/${orgType}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getDonorsApi = async (codeCountry) => {\n  try {\n    const res = await getRequest(`organization/donors/${codeCountry}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getImplementersApi = async (codeCountry) => {\n  try {\n    const res = await getRequest(`organization/implementers/${codeCountry}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const enableDonorOfMonth = async (donorId) => {\n  try {\n    const res = await putRequest(`organization/enableDonorOfMonth/${donorId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const disabledDonorOfMonth = async (donorId) => {\n  try {\n    const res = await putRequest(\n      `organization/disabledDonorOfMonth/${donorId}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const enableImplementerOfMonth = async (implementerId) => {\n  try {\n    const res = await putRequest(\n      `organization/enabelImplementerOfMonth/${implementerId}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const disabledImplementerOfMonth = async (implementerId) => {\n  try {\n    const res = await putRequest(\n      `organization/disabledImplementerOfMonth/${implementerId}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}