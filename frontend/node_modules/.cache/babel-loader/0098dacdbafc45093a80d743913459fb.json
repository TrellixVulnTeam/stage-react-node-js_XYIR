{"ast":null,"code":"import { deleteRequest, getRequest, postRequest, putRequest } from \"apis\";\nexport const addPostApi = async post => {\n  try {\n    const res = await postRequest(\"post/\", post);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsApi = async () => {\n  try {\n    const res = await getRequest(\"post/\");\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const addLikeToPostApi = async (userId, postId) => {\n  try {\n    const res = await postRequest(`post/like/${userId}/${postId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteLikeFromPostApi = async (likeId, postId) => {\n  try {\n    const res = await postRequest(`post/dislike/${likeId}/${postId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const incrementViewApi = async (postId, userId) => {\n  try {\n    const res = await putRequest(`post/incrementView/${postId}/${userId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getLastPostApi = async userId => {\n  try {\n    const res = await getRequest(`post/getLastPost/${userId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/postApi.js"],"names":["deleteRequest","getRequest","postRequest","putRequest","addPostApi","post","res","data","error","console","log","getPostsApi","addLikeToPostApi","userId","postId","deleteLikeFromPostApi","likeId","incrementViewApi","getLastPostApi"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,WAApC,EAAiDC,UAAjD,QAAmE,MAAnE;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAP,IAAgB;AACxC,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMJ,WAAW,CAAC,OAAD,EAAUG,IAAV,CAA7B;AACA,WAAOC,GAAG,CAACC,IAAX;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAPM;AASP,OAAO,MAAMG,WAAW,GAAG,YAAY;AACrC,MAAI;AACF,UAAML,GAAG,GAAG,MAAML,UAAU,CAAC,OAAD,CAA5B;AACA,WAAOK,GAAG,CAACC,IAAX;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAPM;AASP,OAAO,MAAMI,gBAAgB,GAAG,OAAOC,MAAP,EAAeC,MAAf,KAA0B;AACxD,MAAI;AACF,UAAMR,GAAG,GAAG,MAAMJ,WAAW,CAAE,aAAYW,MAAO,IAAGC,MAAO,EAA/B,CAA7B;AACA,WAAOR,GAAG,CAACC,IAAX;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAPM;AASP,OAAO,MAAMO,qBAAqB,GAAG,OAAOC,MAAP,EAAeF,MAAf,KAA0B;AAC7D,MAAI;AACF,UAAMR,GAAG,GAAG,MAAMJ,WAAW,CAAE,gBAAec,MAAO,IAAGF,MAAO,EAAlC,CAA7B;AACA,WAAOR,GAAG,CAACC,IAAX;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAPM;AASP,OAAO,MAAMS,gBAAgB,GAAG,OAAOH,MAAP,EAAeD,MAAf,KAA0B;AACxD,MAAI;AACF,UAAMP,GAAG,GAAG,MAAMH,UAAU,CAAE,sBAAqBW,MAAO,IAAGD,MAAO,EAAxC,CAA5B;AACA,WAAOP,GAAG,CAACC,IAAX;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAPM;AAQP,OAAO,MAAMU,cAAc,GAAG,MAAOL,MAAP,IAAkB;AAC9C,MAAI;AACF,UAAMP,GAAG,GAAG,MAAML,UAAU,CAAE,oBAAmBY,MAAO,EAA5B,CAA5B;AACA,WAAOP,GAAG,CAACC,IAAX;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAPM","sourcesContent":["import { deleteRequest, getRequest, postRequest, putRequest } from \"apis\";\n\nexport const addPostApi = async (post) => {\n  try {\n    const res = await postRequest(\"post/\", post);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPostsApi = async () => {\n  try {\n    const res = await getRequest(\"post/\");\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const addLikeToPostApi = async (userId, postId) => {\n  try {\n    const res = await postRequest(`post/like/${userId}/${postId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteLikeFromPostApi = async (likeId, postId) => {\n  try {\n    const res = await postRequest(`post/dislike/${likeId}/${postId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const incrementViewApi = async (postId, userId) => {\n  try {\n    const res = await putRequest(`post/incrementView/${postId}/${userId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getLastPostApi = async (userId) => {\n  try {\n    const res = await getRequest(`post/getLastPost/${userId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}