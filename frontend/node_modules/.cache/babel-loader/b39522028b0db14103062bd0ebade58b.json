{"ast":null,"code":"var _jsxFileName = \"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/MoreDetailsProject.js\",\n    _s = $RefreshSig$();\n\nimport Flag from \"react-world-flags\";\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport JoditEditor from \"jodit-react\";\nimport moment from \"moment\";\nimport { AiFillFileAdd } from \"react-icons/ai\";\nimport Select from \"react-select\";\nimport { getCountryByCode } from \"../../../apis/countryApi\";\nimport { AddProject, getProject2, updateProject } from \"../../../apis/projectApi\";\nimport \"./OrganizationForm.css\";\nimport { getThematiques } from \"apis/thematiqueApi\";\nimport { getStatus } from \"apis/statusApi\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Row, FormGroup, FormLabel, Col } from \"react-bootstrap\";\nimport \"./ProjectForm.css\";\nimport { getOrganizationByType } from \"apis/organizationApi\";\nimport { getAllCops } from \"apis/userApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MoreDetailsProject = () => {\n  _s();\n\n  const {\n    codeCountry,\n    idProject,\n    multimedia\n  } = useParams();\n  const history = useHistory();\n  const editor = useRef(null);\n  const ObjEditor = useRef(null);\n  const [content, setContent] = useState(\"\");\n  const [objectives, setObjectives] = useState(\"\");\n  const [thematiquesOptions, setThematiquesOptions] = useState();\n  const [fundersOptions, setFundersOptions] = useState();\n  const [selectedFunder, setSelectedFunder] = useState(null);\n  const [subFundersOptions, setSubFundersOptions] = useState();\n  const [selectedSubFunder, setSelectedSubFunder] = useState(null);\n  const [implementersOptions, setImplementersOptions] = useState();\n  const [selectedImplementer, setSelectedImplementer] = useState(null);\n  const [subImplementersOptions, setSubImplementersOptions] = useState();\n  const [selectedSubImplementer, setSelectedSubImplementer] = useState(null);\n  const [statusOptions, setStatusOptions] = useState();\n  const [copOptions, setCopOptions] = useState();\n  const [selectedCop, setSelectedCop] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [selectedStatus, setSelectedStatus] = useState(null);\n  const [status, setStatus] = useState(null);\n  const [project, setProject] = useState();\n  const [country, setCountry] = useState();\n  const [projectLogoPreview, setProjectLogoPreview] = useState(null);\n  const [projectLogo, setProjectLogo] = useState();\n  const [approvalDate, setApprovalDate] = useState();\n  const [actualStart, setActualStart] = useState();\n  const [plannedEnd, setPlannedEnd] = useState();\n  const [actualEnd, setActualEnd] = useState();\n  const [loading, setLoading] = useState(false);\n  const config = {\n    readonly: false,\n    placeholder: \"Description of the project\"\n  };\n  const configObj = {\n    readonly: false,\n    placeholder: \"Ojectives of the project\"\n  };\n  const {\n    register,\n    handleSubmit,\n    setValue\n  } = useForm();\n  const getDataFromApi = useCallback(async () => {\n    const thematiques = await getThematiques();\n    setThematiquesOptions(thematiques === null || thematiques === void 0 ? void 0 : thematiques.map(thematique => {\n      return {\n        value: thematique._id,\n        label: thematique.name\n      };\n    }));\n    const funders = await getOrganizationByType(\"Funding Agencies\");\n    const subfund = funders === null || funders === void 0 ? void 0 : funders.map(funder => {\n      return {\n        value: funder._id,\n        label: funder.name\n      };\n    });\n    setFundersOptions(subfund);\n    setSubFundersOptions(subfund);\n    const implementers = await getOrganizationByType(\"Implementing NGO\");\n    const subImpl = implementers === null || implementers === void 0 ? void 0 : implementers.map(implementer => {\n      return {\n        value: implementer._id,\n        label: implementer.name\n      };\n    });\n    setImplementersOptions(subImpl);\n    setSubImplementersOptions(subImpl);\n    const status = await getStatus();\n    setStatus(status);\n    setStatusOptions(status === null || status === void 0 ? void 0 : status.map(sta => {\n      return {\n        value: sta === null || sta === void 0 ? void 0 : sta._id,\n        label: sta === null || sta === void 0 ? void 0 : sta.name\n      };\n    }));\n    const country = await getCountryByCode(codeCountry);\n    setCountry(country);\n    const cops = await getAllCops();\n    setCopOptions(cops === null || cops === void 0 ? void 0 : cops.map(cop => {\n      return {\n        value: cop === null || cop === void 0 ? void 0 : cop._id,\n        label: cop === null || cop === void 0 ? void 0 : cop.fullname\n      };\n    }));\n\n    if (idProject !== undefined) {\n      var _project$thematique, _project$thematique2, _project$status, _project$status2, _project$funder, _project$funder2, _project$sub_funder$, _project$sub_funder$2, _project$implementer, _project$implementer2, _project$sub_implemen, _project$sub_implemen2, _project$task_manager, _project$task_manager2;\n\n      const project = await getProject2(idProject);\n      setProject(project);\n      setProjectLogoPreview(urlImageAdapter(project === null || project === void 0 ? void 0 : project.image_url));\n      if (project.thematique) setSelectedOption({\n        value: project === null || project === void 0 ? void 0 : (_project$thematique = project.thematique) === null || _project$thematique === void 0 ? void 0 : _project$thematique._id,\n        label: project === null || project === void 0 ? void 0 : (_project$thematique2 = project.thematique) === null || _project$thematique2 === void 0 ? void 0 : _project$thematique2.name\n      });\n      if (project.status) setSelectedStatus({\n        value: project === null || project === void 0 ? void 0 : (_project$status = project.status) === null || _project$status === void 0 ? void 0 : _project$status._id,\n        label: project === null || project === void 0 ? void 0 : (_project$status2 = project.status) === null || _project$status2 === void 0 ? void 0 : _project$status2.name\n      });\n      if (project.funder) setSelectedFunder({\n        value: project === null || project === void 0 ? void 0 : (_project$funder = project.funder) === null || _project$funder === void 0 ? void 0 : _project$funder._id,\n        label: project === null || project === void 0 ? void 0 : (_project$funder2 = project.funder) === null || _project$funder2 === void 0 ? void 0 : _project$funder2.name\n      });\n      if (project.sub_funder) setSelectedSubFunder({\n        value: project === null || project === void 0 ? void 0 : (_project$sub_funder$ = project.sub_funder[0]) === null || _project$sub_funder$ === void 0 ? void 0 : _project$sub_funder$._id,\n        label: project === null || project === void 0 ? void 0 : (_project$sub_funder$2 = project.sub_funder[0]) === null || _project$sub_funder$2 === void 0 ? void 0 : _project$sub_funder$2.name\n      });\n      if (project.implementer) setSelectedImplementer({\n        value: project === null || project === void 0 ? void 0 : (_project$implementer = project.implementer) === null || _project$implementer === void 0 ? void 0 : _project$implementer._id,\n        label: project === null || project === void 0 ? void 0 : (_project$implementer2 = project.implementer) === null || _project$implementer2 === void 0 ? void 0 : _project$implementer2.name\n      });\n      if (project.sub_implementer) setSelectedSubImplementer({\n        value: project === null || project === void 0 ? void 0 : (_project$sub_implemen = project.sub_implementer[0]) === null || _project$sub_implemen === void 0 ? void 0 : _project$sub_implemen._id,\n        label: project === null || project === void 0 ? void 0 : (_project$sub_implemen2 = project.sub_implementer[0]) === null || _project$sub_implemen2 === void 0 ? void 0 : _project$sub_implemen2.name\n      });\n      if (project.task_manager) setSelectedCop({\n        value: project === null || project === void 0 ? void 0 : (_project$task_manager = project.task_manager) === null || _project$task_manager === void 0 ? void 0 : _project$task_manager._id,\n        label: project === null || project === void 0 ? void 0 : (_project$task_manager2 = project.task_manager) === null || _project$task_manager2 === void 0 ? void 0 : _project$task_manager2.fullname\n      });\n      if (project.description) setContent(project === null || project === void 0 ? void 0 : project.description);\n      if (project.objectives) setObjectives(project === null || project === void 0 ? void 0 : project.objectives);\n      if (project.approval_date) setApprovalDate(moment(project === null || project === void 0 ? void 0 : project.approval_date).toDate());\n      if (project.actual_start) setActualStart(moment(project === null || project === void 0 ? void 0 : project.actual_start).toDate());\n      if (project.actual_end) setActualEnd(moment(project === null || project === void 0 ? void 0 : project.actual_end).toDate());\n      if (project.planned_end) setPlannedEnd(moment(project === null || project === void 0 ? void 0 : project.planned_end).toDate()); //setContent(project?.task_manager);\n\n      if (project.name) setValue(\"name\", project === null || project === void 0 ? void 0 : project.name);\n      if (project.total_cost) setValue(\"total_cost\", project === null || project === void 0 ? void 0 : project.total_cost);\n      if (project.budget) setValue(\"budget\", project === null || project === void 0 ? void 0 : project.budget);\n      if (project.task_manager) setValue(\"task_manager\", project === null || project === void 0 ? void 0 : project.task_manager);\n      if (project.image_url) setValue(\"image_url\", project === null || project === void 0 ? void 0 : project.image_url);\n    }\n  }, [idProject, setValue]);\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const onSubmit = async data => {\n    //const project = await getProject2(selectedOption?.value);\n    let formData = new FormData();\n    formData.append(\"namefr\", \"\");\n    formData.append(\"country\", country === null || country === void 0 ? void 0 : country._id);\n    if (selectedOption) formData.append(\"thematique\", selectedOption === null || selectedOption === void 0 ? void 0 : selectedOption.value);\n    if (selectedStatus) formData.append(\"status\", selectedStatus === null || selectedStatus === void 0 ? void 0 : selectedStatus.value);\n    if (selectedFunder) formData.append(\"funder\", selectedFunder === null || selectedFunder === void 0 ? void 0 : selectedFunder.value);\n    if (selectedSubFunder) formData.append(\"sub_funder\", [selectedSubFunder === null || selectedSubFunder === void 0 ? void 0 : selectedSubFunder.value]);\n    if (selectedImplementer) formData.append(\"implementer\", selectedImplementer === null || selectedImplementer === void 0 ? void 0 : selectedImplementer.value);\n    if (selectedSubImplementer) formData.append(\"sub_implementer\", [selectedSubImplementer === null || selectedSubImplementer === void 0 ? void 0 : selectedSubImplementer.value]);\n    if (data.total_cost !== \"\") formData.append(\"total_cost\", data.total_cost); // if (data.budget === \"\") formData.append(\"budget\", null);\n    //else formData.append(\"budget\", data.budget);\n\n    if (approvalDate) formData.append(\"approval_date\", approvalDate);\n    if (actualStart) formData.append(\"actual_start\", actualStart);\n    if (actualEnd) formData.append(\"actual_end\", actualEnd);\n    if (plannedEnd) formData.append(\"planned_end\", plannedEnd);\n    if (selectedCop) formData.append(\"task_manager\", selectedCop === null || selectedCop === void 0 ? void 0 : selectedCop.value);\n    formData.append(\"name\", data.name);\n    formData.append(\"description\", content);\n    formData.append(\"objectives\", objectives);\n    if (projectLogo != undefined) formData.append(\"projectImage\", projectLogo);\n\n    if (idProject !== undefined) {\n      setLoading(true);\n      await updateProject(idProject, formData);\n      setLoading(false);\n    } else {\n      formData.append(\"validation\", 1);\n      await AddProject(formData);\n      history.push(`/web-master/validationProjects/projectsV/${codeCountry}`);\n    }\n  };\n\n  const handleThematiqueChange = selected => {\n    setSelectedOption(selected);\n  };\n\n  const handleChangeStatus = selected => {\n    setSelectedStatus(selected);\n  };\n\n  const imagePreview = e => {\n    setProjectLogoPreview(URL.createObjectURL(e.target.files[0]));\n    setProjectLogo(e.target.files[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-lg-6 centralize mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-org-form\",\n              type: \"text\",\n              id: \"total_cost\",\n              spellCheck: \"false\",\n              ...register(\"total_cost\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"placeholder\",\n              style: {\n                color: \"black\"\n              },\n              children: \"Total Cost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-lg-6 centralize \",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            className: \"label__form\",\n            children: \"COP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Select COP \",\n            value: selectedCop,\n            onChange: selected => setSelectedCop(selected),\n            options: copOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-lg-6 centralize mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            className: \"label__form\",\n            children: \"Thematic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Select the thematic \",\n            value: selectedOption,\n            onChange: handleThematiqueChange,\n            options: thematiquesOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            className: \"label__form\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(JoditEditor, {\n            ref: editor,\n            value: content,\n            config: config,\n            tabIndex: 1,\n            onBlur: newContent => setContent(newContent)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), \" \", !loading ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit(onSubmit),\n          type: \"submit\",\n          className: idProject !== undefined ? `btn btn-warning w-100 h-25 shadow-none my-3` : `btn btn-primary w-100 h-25 shadow-none my-3`,\n          children: idProject !== undefined ? \"Save Modifications\" : \"Add Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border text-warning m-auto\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sr-only\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MoreDetailsProject, \"m2xb8qVq2amp2KEdjkP7So8mfq8=\", false, function () {\n  return [useParams, useHistory, useForm];\n});\n\n_c = MoreDetailsProject;\nexport default MoreDetailsProject.length;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoreDetailsProject\");","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/MoreDetailsProject.js"],"names":["Flag","React","useState","useRef","useEffect","useCallback","useHistory","useParams","Link","useForm","JoditEditor","moment","AiFillFileAdd","Select","getCountryByCode","AddProject","getProject2","updateProject","getThematiques","getStatus","urlImageAdapter","DatePicker","Row","FormGroup","FormLabel","Col","getOrganizationByType","getAllCops","MoreDetailsProject","codeCountry","idProject","multimedia","history","editor","ObjEditor","content","setContent","objectives","setObjectives","thematiquesOptions","setThematiquesOptions","fundersOptions","setFundersOptions","selectedFunder","setSelectedFunder","subFundersOptions","setSubFundersOptions","selectedSubFunder","setSelectedSubFunder","implementersOptions","setImplementersOptions","selectedImplementer","setSelectedImplementer","subImplementersOptions","setSubImplementersOptions","selectedSubImplementer","setSelectedSubImplementer","statusOptions","setStatusOptions","copOptions","setCopOptions","selectedCop","setSelectedCop","selectedOption","setSelectedOption","selectedStatus","setSelectedStatus","status","setStatus","project","setProject","country","setCountry","projectLogoPreview","setProjectLogoPreview","projectLogo","setProjectLogo","approvalDate","setApprovalDate","actualStart","setActualStart","plannedEnd","setPlannedEnd","actualEnd","setActualEnd","loading","setLoading","config","readonly","placeholder","configObj","register","handleSubmit","setValue","getDataFromApi","thematiques","map","thematique","value","_id","label","name","funders","subfund","funder","implementers","subImpl","implementer","sta","cops","cop","fullname","undefined","image_url","sub_funder","sub_implementer","task_manager","description","approval_date","toDate","actual_start","actual_end","planned_end","total_cost","budget","onSubmit","data","formData","FormData","append","push","handleThematiqueChange","selected","handleChangeStatus","imagePreview","e","URL","createObjectURL","target","files","color","newContent","length"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,mBAAjB;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,EAA6CC,WAA7C,QAAgE,OAAhE;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,IAAhC,QAA4C,kBAA5C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SACEC,UADF,EAEEC,WAFF,EAGEC,aAHF,QAIO,0BAJP;AAKA,OAAO,wBAAP;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,SAAzB,EAAoCC,GAApC,QAA+C,iBAA/C;AACA,OAAO,mBAAP;AACA,SAASC,qBAAT,QAAsC,sBAAtC;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AACA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA;AAA1B,MAAyCxB,SAAS,EAAxD;AACA,QAAMyB,OAAO,GAAG1B,UAAU,EAA1B;AACA,QAAM2B,MAAM,GAAG9B,MAAM,CAAC,IAAD,CAArB;AACA,QAAM+B,SAAS,GAAG/B,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACgC,OAAD,EAAUC,UAAV,IAAwBlC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACmC,UAAD,EAAaC,aAAb,IAA8BpC,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACqC,kBAAD,EAAqBC,qBAArB,IAA8CtC,QAAQ,EAA5D;AACA,QAAM,CAACuC,cAAD,EAAiBC,iBAAjB,IAAsCxC,QAAQ,EAApD;AACA,QAAM,CAACyC,cAAD,EAAiBC,iBAAjB,IAAsC1C,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAAC2C,iBAAD,EAAoBC,oBAApB,IAA4C5C,QAAQ,EAA1D;AACA,QAAM,CAAC6C,iBAAD,EAAoBC,oBAApB,IAA4C9C,QAAQ,CAAC,IAAD,CAA1D;AACA,QAAM,CAAC+C,mBAAD,EAAsBC,sBAAtB,IAAgDhD,QAAQ,EAA9D;AACA,QAAM,CAACiD,mBAAD,EAAsBC,sBAAtB,IAAgDlD,QAAQ,CAAC,IAAD,CAA9D;AACA,QAAM,CAACmD,sBAAD,EAAyBC,yBAAzB,IAAsDpD,QAAQ,EAApE;AACA,QAAM,CAACqD,sBAAD,EAAyBC,yBAAzB,IAAsDtD,QAAQ,CAAC,IAAD,CAApE;AACA,QAAM,CAACuD,aAAD,EAAgBC,gBAAhB,IAAoCxD,QAAQ,EAAlD;AACA,QAAM,CAACyD,UAAD,EAAaC,aAAb,IAA8B1D,QAAQ,EAA5C;AACA,QAAM,CAAC2D,WAAD,EAAcC,cAAd,IAAgC5D,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAAC6D,cAAD,EAAiBC,iBAAjB,IAAsC9D,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAAC+D,cAAD,EAAiBC,iBAAjB,IAAsChE,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACiE,MAAD,EAASC,SAAT,IAAsBlE,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACmE,OAAD,EAAUC,UAAV,IAAwBpE,QAAQ,EAAtC;AACA,QAAM,CAACqE,OAAD,EAAUC,UAAV,IAAwBtE,QAAQ,EAAtC;AACA,QAAM,CAACuE,kBAAD,EAAqBC,qBAArB,IAA8CxE,QAAQ,CAAC,IAAD,CAA5D;AACA,QAAM,CAACyE,WAAD,EAAcC,cAAd,IAAgC1E,QAAQ,EAA9C;AACA,QAAM,CAAC2E,YAAD,EAAeC,eAAf,IAAkC5E,QAAQ,EAAhD;AACA,QAAM,CAAC6E,WAAD,EAAcC,cAAd,IAAgC9E,QAAQ,EAA9C;AACA,QAAM,CAAC+E,UAAD,EAAaC,aAAb,IAA8BhF,QAAQ,EAA5C;AACA,QAAM,CAACiF,SAAD,EAAYC,YAAZ,IAA4BlF,QAAQ,EAA1C;AACA,QAAM,CAACmF,OAAD,EAAUC,UAAV,IAAwBpF,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMqF,MAAM,GAAG;AACbC,IAAAA,QAAQ,EAAE,KADG;AAEbC,IAAAA,WAAW,EAAE;AAFA,GAAf;AAIA,QAAMC,SAAS,GAAG;AAChBF,IAAAA,QAAQ,EAAE,KADM;AAEhBC,IAAAA,WAAW,EAAE;AAFG,GAAlB;AAKA,QAAM;AAAEE,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAuCpF,OAAO,EAApD;AAEA,QAAMqF,cAAc,GAAGzF,WAAW,CAAC,YAAY;AAC7C,UAAM0F,WAAW,GAAG,MAAM7E,cAAc,EAAxC;AACAsB,IAAAA,qBAAqB,CACnBuD,WADmB,aACnBA,WADmB,uBACnBA,WAAW,CAAEC,GAAb,CAAkBC,UAAD,IAAgB;AAC/B,aAAO;AACLC,QAAAA,KAAK,EAAED,UAAU,CAACE,GADb;AAELC,QAAAA,KAAK,EAAEH,UAAU,CAACI;AAFb,OAAP;AAID,KALD,CADmB,CAArB;AAQA,UAAMC,OAAO,GAAG,MAAM5E,qBAAqB,CAAC,kBAAD,CAA3C;AACA,UAAM6E,OAAO,GAAGD,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAEN,GAAT,CAAcQ,MAAD,IAAY;AACvC,aAAO;AACLN,QAAAA,KAAK,EAAEM,MAAM,CAACL,GADT;AAELC,QAAAA,KAAK,EAAEI,MAAM,CAACH;AAFT,OAAP;AAID,KALe,CAAhB;AAMA3D,IAAAA,iBAAiB,CAAC6D,OAAD,CAAjB;AACAzD,IAAAA,oBAAoB,CAACyD,OAAD,CAApB;AAEA,UAAME,YAAY,GAAG,MAAM/E,qBAAqB,CAAC,kBAAD,CAAhD;AACA,UAAMgF,OAAO,GAAGD,YAAH,aAAGA,YAAH,uBAAGA,YAAY,CAAET,GAAd,CAAmBW,WAAD,IAAiB;AACjD,aAAO;AACLT,QAAAA,KAAK,EAAES,WAAW,CAACR,GADd;AAELC,QAAAA,KAAK,EAAEO,WAAW,CAACN;AAFd,OAAP;AAID,KALe,CAAhB;AAMAnD,IAAAA,sBAAsB,CAACwD,OAAD,CAAtB;AACApD,IAAAA,yBAAyB,CAACoD,OAAD,CAAzB;AACA,UAAMvC,MAAM,GAAG,MAAMhD,SAAS,EAA9B;AACAiD,IAAAA,SAAS,CAACD,MAAD,CAAT;AACAT,IAAAA,gBAAgB,CACdS,MADc,aACdA,MADc,uBACdA,MAAM,CAAE6B,GAAR,CAAaY,GAAD,IAAS;AACnB,aAAO;AACLV,QAAAA,KAAK,EAAEU,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAET,GADP;AAELC,QAAAA,KAAK,EAAEQ,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAEP;AAFP,OAAP;AAID,KALD,CADc,CAAhB;AAQA,UAAM9B,OAAO,GAAG,MAAMzD,gBAAgB,CAACe,WAAD,CAAtC;AACA2C,IAAAA,UAAU,CAACD,OAAD,CAAV;AAEA,UAAMsC,IAAI,GAAG,MAAMlF,UAAU,EAA7B;AACAiC,IAAAA,aAAa,CACXiD,IADW,aACXA,IADW,uBACXA,IAAI,CAAEb,GAAN,CAAWc,GAAD,IAAS;AACjB,aAAO;AACLZ,QAAAA,KAAK,EAAEY,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAEX,GADP;AAELC,QAAAA,KAAK,EAAEU,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAEC;AAFP,OAAP;AAID,KALD,CADW,CAAb;;AAQA,QAAIjF,SAAS,KAAKkF,SAAlB,EAA6B;AAAA;;AAC3B,YAAM3C,OAAO,GAAG,MAAMrD,WAAW,CAACc,SAAD,CAAjC;AACAwC,MAAAA,UAAU,CAACD,OAAD,CAAV;AACAK,MAAAA,qBAAqB,CAACtD,eAAe,CAACiD,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAE4C,SAAV,CAAhB,CAArB;AACA,UAAI5C,OAAO,CAAC4B,UAAZ,EACEjC,iBAAiB,CAAC;AAChBkC,QAAAA,KAAK,EAAE7B,OAAF,aAAEA,OAAF,8CAAEA,OAAO,CAAE4B,UAAX,wDAAE,oBAAqBE,GADZ;AAEhBC,QAAAA,KAAK,EAAE/B,OAAF,aAAEA,OAAF,+CAAEA,OAAO,CAAE4B,UAAX,yDAAE,qBAAqBI;AAFZ,OAAD,CAAjB;AAIF,UAAIhC,OAAO,CAACF,MAAZ,EACED,iBAAiB,CAAC;AAChBgC,QAAAA,KAAK,EAAE7B,OAAF,aAAEA,OAAF,0CAAEA,OAAO,CAAEF,MAAX,oDAAE,gBAAiBgC,GADR;AAEhBC,QAAAA,KAAK,EAAE/B,OAAF,aAAEA,OAAF,2CAAEA,OAAO,CAAEF,MAAX,qDAAE,iBAAiBkC;AAFR,OAAD,CAAjB;AAIF,UAAIhC,OAAO,CAACmC,MAAZ,EACE5D,iBAAiB,CAAC;AAChBsD,QAAAA,KAAK,EAAE7B,OAAF,aAAEA,OAAF,0CAAEA,OAAO,CAAEmC,MAAX,oDAAE,gBAAiBL,GADR;AAEhBC,QAAAA,KAAK,EAAE/B,OAAF,aAAEA,OAAF,2CAAEA,OAAO,CAAEmC,MAAX,qDAAE,iBAAiBH;AAFR,OAAD,CAAjB;AAIF,UAAIhC,OAAO,CAAC6C,UAAZ,EACElE,oBAAoB,CAAC;AACnBkD,QAAAA,KAAK,EAAE7B,OAAF,aAAEA,OAAF,+CAAEA,OAAO,CAAE6C,UAAT,CAAoB,CAApB,CAAF,yDAAE,qBAAwBf,GADZ;AAEnBC,QAAAA,KAAK,EAAE/B,OAAF,aAAEA,OAAF,gDAAEA,OAAO,CAAE6C,UAAT,CAAoB,CAApB,CAAF,0DAAE,sBAAwBb;AAFZ,OAAD,CAApB;AAIF,UAAIhC,OAAO,CAACsC,WAAZ,EACEvD,sBAAsB,CAAC;AACrB8C,QAAAA,KAAK,EAAE7B,OAAF,aAAEA,OAAF,+CAAEA,OAAO,CAAEsC,WAAX,yDAAE,qBAAsBR,GADR;AAErBC,QAAAA,KAAK,EAAE/B,OAAF,aAAEA,OAAF,gDAAEA,OAAO,CAAEsC,WAAX,0DAAE,sBAAsBN;AAFR,OAAD,CAAtB;AAIF,UAAIhC,OAAO,CAAC8C,eAAZ,EACE3D,yBAAyB,CAAC;AACxB0C,QAAAA,KAAK,EAAE7B,OAAF,aAAEA,OAAF,gDAAEA,OAAO,CAAE8C,eAAT,CAAyB,CAAzB,CAAF,0DAAE,sBAA6BhB,GADZ;AAExBC,QAAAA,KAAK,EAAE/B,OAAF,aAAEA,OAAF,iDAAEA,OAAO,CAAE8C,eAAT,CAAyB,CAAzB,CAAF,2DAAE,uBAA6Bd;AAFZ,OAAD,CAAzB;AAIF,UAAIhC,OAAO,CAAC+C,YAAZ,EACEtD,cAAc,CAAC;AACboC,QAAAA,KAAK,EAAE7B,OAAF,aAAEA,OAAF,gDAAEA,OAAO,CAAE+C,YAAX,0DAAE,sBAAuBjB,GADjB;AAEbC,QAAAA,KAAK,EAAE/B,OAAF,aAAEA,OAAF,iDAAEA,OAAO,CAAE+C,YAAX,2DAAE,uBAAuBL;AAFjB,OAAD,CAAd;AAIF,UAAI1C,OAAO,CAACgD,WAAZ,EAAyBjF,UAAU,CAACiC,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEgD,WAAV,CAAV;AACzB,UAAIhD,OAAO,CAAChC,UAAZ,EAAwBC,aAAa,CAAC+B,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEhC,UAAV,CAAb;AACxB,UAAIgC,OAAO,CAACiD,aAAZ,EACExC,eAAe,CAACnE,MAAM,CAAC0D,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEiD,aAAV,CAAN,CAA+BC,MAA/B,EAAD,CAAf;AACF,UAAIlD,OAAO,CAACmD,YAAZ,EACExC,cAAc,CAACrE,MAAM,CAAC0D,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEmD,YAAV,CAAN,CAA8BD,MAA9B,EAAD,CAAd;AACF,UAAIlD,OAAO,CAACoD,UAAZ,EACErC,YAAY,CAACzE,MAAM,CAAC0D,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEoD,UAAV,CAAN,CAA4BF,MAA5B,EAAD,CAAZ;AACF,UAAIlD,OAAO,CAACqD,WAAZ,EACExC,aAAa,CAACvE,MAAM,CAAC0D,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEqD,WAAV,CAAN,CAA6BH,MAA7B,EAAD,CAAb,CAhDyB,CAkD3B;;AACA,UAAIlD,OAAO,CAACgC,IAAZ,EAAkBR,QAAQ,CAAC,MAAD,EAASxB,OAAT,aAASA,OAAT,uBAASA,OAAO,CAAEgC,IAAlB,CAAR;AAClB,UAAIhC,OAAO,CAACsD,UAAZ,EAAwB9B,QAAQ,CAAC,YAAD,EAAexB,OAAf,aAAeA,OAAf,uBAAeA,OAAO,CAAEsD,UAAxB,CAAR;AACxB,UAAItD,OAAO,CAACuD,MAAZ,EAAoB/B,QAAQ,CAAC,QAAD,EAAWxB,OAAX,aAAWA,OAAX,uBAAWA,OAAO,CAAEuD,MAApB,CAAR;AACpB,UAAIvD,OAAO,CAAC+C,YAAZ,EAA0BvB,QAAQ,CAAC,cAAD,EAAiBxB,OAAjB,aAAiBA,OAAjB,uBAAiBA,OAAO,CAAE+C,YAA1B,CAAR;AAC1B,UAAI/C,OAAO,CAAC4C,SAAZ,EAAuBpB,QAAQ,CAAC,WAAD,EAAcxB,OAAd,aAAcA,OAAd,uBAAcA,OAAO,CAAE4C,SAAvB,CAAR;AACxB;AACF,GA5GiC,EA4G/B,CAACnF,SAAD,EAAY+D,QAAZ,CA5G+B,CAAlC;AA8GAzF,EAAAA,SAAS,CAAC,MAAM;AACd0F,IAAAA,cAAc;AACf,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;;AAIA,QAAM+B,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAC/B;AACA,QAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0B,EAA1B;AACAF,IAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2B1D,OAA3B,aAA2BA,OAA3B,uBAA2BA,OAAO,CAAE4B,GAApC;AAEA,QAAIpC,cAAJ,EAAoBgE,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8BlE,cAA9B,aAA8BA,cAA9B,uBAA8BA,cAAc,CAAEmC,KAA9C;AAEpB,QAAIjC,cAAJ,EAAoB8D,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BhE,cAA1B,aAA0BA,cAA1B,uBAA0BA,cAAc,CAAEiC,KAA1C;AAEpB,QAAIvD,cAAJ,EAAoBoF,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BtF,cAA1B,aAA0BA,cAA1B,uBAA0BA,cAAc,CAAEuD,KAA1C;AAEpB,QAAInD,iBAAJ,EACEgF,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8B,CAAClF,iBAAD,aAACA,iBAAD,uBAACA,iBAAiB,CAAEmD,KAApB,CAA9B;AAEF,QAAI/C,mBAAJ,EACE4E,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+B9E,mBAA/B,aAA+BA,mBAA/B,uBAA+BA,mBAAmB,CAAE+C,KAApD;AAEF,QAAI3C,sBAAJ,EACEwE,QAAQ,CAACE,MAAT,CAAgB,iBAAhB,EAAmC,CAAC1E,sBAAD,aAACA,sBAAD,uBAACA,sBAAsB,CAAE2C,KAAzB,CAAnC;AAEF,QAAI4B,IAAI,CAACH,UAAL,KAAoB,EAAxB,EAA4BI,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8BH,IAAI,CAACH,UAAnC,EArBG,CAsB/B;AACA;;AAEA,QAAI9C,YAAJ,EAAkBkD,QAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiCpD,YAAjC;AAElB,QAAIE,WAAJ,EAAiBgD,QAAQ,CAACE,MAAT,CAAgB,cAAhB,EAAgClD,WAAhC;AAEjB,QAAII,SAAJ,EAAe4C,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8B9C,SAA9B;AAEf,QAAIF,UAAJ,EAAgB8C,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+BhD,UAA/B;AAEhB,QAAIpB,WAAJ,EAAiBkE,QAAQ,CAACE,MAAT,CAAgB,cAAhB,EAAgCpE,WAAhC,aAAgCA,WAAhC,uBAAgCA,WAAW,CAAEqC,KAA7C;AAEjB6B,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,IAAI,CAACzB,IAA7B;AAEA0B,IAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+B9F,OAA/B;AACA4F,IAAAA,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8B5F,UAA9B;AACA,QAAIsC,WAAW,IAAIqC,SAAnB,EAA8Be,QAAQ,CAACE,MAAT,CAAgB,cAAhB,EAAgCtD,WAAhC;;AAC9B,QAAI7C,SAAS,KAAKkF,SAAlB,EAA6B;AAC3B1B,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMrE,aAAa,CAACa,SAAD,EAAYiG,QAAZ,CAAnB;AACAzC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAJD,MAIO;AACLyC,MAAAA,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8B,CAA9B;AACA,YAAMlH,UAAU,CAACgH,QAAD,CAAhB;AACA/F,MAAAA,OAAO,CAACkG,IAAR,CAAc,4CAA2CrG,WAAY,EAArE;AACD;AACF,GAjDD;;AAmDA,QAAMsG,sBAAsB,GAAIC,QAAD,IAAc;AAC3CpE,IAAAA,iBAAiB,CAACoE,QAAD,CAAjB;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAID,QAAD,IAAc;AACvClE,IAAAA,iBAAiB,CAACkE,QAAD,CAAjB;AACD,GAFD;;AAGA,QAAME,YAAY,GAAIC,CAAD,IAAO;AAC1B7D,IAAAA,qBAAqB,CAAC8D,GAAG,CAACC,eAAJ,CAAoBF,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAApB,CAAD,CAArB;AACA/D,IAAAA,cAAc,CAAC2D,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAd;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,iCAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACE;AACE,cAAA,SAAS,EAAC,gBADZ;AAEE,cAAA,IAAI,EAAC,MAFP;AAGE,cAAA,EAAE,EAAC,YAHL;AAIE,cAAA,UAAU,EAAC,OAJb;AAAA,iBAKMhD,QAAQ,CAAC,YAAD;AALd;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE;AAAM,cAAA,SAAS,EAAC,aAAhB;AAA8B,cAAA,KAAK,EAAE;AAAEiD,gBAAAA,KAAK,EAAE;AAAT,eAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAeE;AAAK,UAAA,SAAS,EAAC,6BAAf;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,SAAS,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AACE,YAAA,WAAW,EAAC,aADd;AAEE,YAAA,KAAK,EAAE/E,WAFT;AAGE,YAAA,QAAQ,EAAGuE,QAAD,IAActE,cAAc,CAACsE,QAAD,CAHxC;AAIE,YAAA,OAAO,EAAEzE;AAJX;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,EAuBS,GAvBT,eAwBE;AAAK,UAAA,SAAS,EAAC,iCAAf;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,SAAS,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AACE,YAAA,WAAW,EAAC,sBADd;AAEE,YAAA,KAAK,EAAEI,cAFT;AAGE,YAAA,QAAQ,EAAEoE,sBAHZ;AAIE,YAAA,OAAO,EAAE5F;AAJX;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBF,EAgCS,GAhCT,eAiCE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,SAAS,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,WAAD;AACE,YAAA,GAAG,EAAEN,MADP;AAEE,YAAA,KAAK,EAAEE,OAFT;AAGE,YAAA,MAAM,EAAEoD,MAHV;AAIE,YAAA,QAAQ,EAAE,CAJZ;AAKE,YAAA,MAAM,EAAGsD,UAAD,IAAgBzG,UAAU,CAACyG,UAAD;AALpC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjCF,EA0CS,GA1CT,EA2CG,CAACxD,OAAD,gBACC;AACE,UAAA,OAAO,EAAEO,YAAY,CAACiC,QAAD,CADvB;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,SAAS,EACP/F,SAAS,KAAKkF,SAAd,GACK,6CADL,GAEK,6CANT;AAAA,oBASGlF,SAAS,KAAKkF,SAAd,GAA0B,oBAA1B,GAAiD;AATpD;AAAA;AAAA;AAAA;AAAA,gBADD,gBAaC;AAAK,UAAA,SAAS,EAAC,oCAAf;AAAoD,UAAA,IAAI,EAAC,QAAzD;AAAA,iCACE;AAAM,YAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAxDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmED,CA9RD;;GAAMpF,kB;UAC2CrB,S,EAC/BD,U,EAsC6BG,O;;;KAxCzCmB,kB;AAgSN,eAAeA,kBAAkB,CAACkH,MAAlC","sourcesContent":["import Flag from \"react-world-flags\";\n\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport JoditEditor from \"jodit-react\";\nimport moment from \"moment\";\nimport { AiFillFileAdd } from \"react-icons/ai\";\nimport Select from \"react-select\";\nimport { getCountryByCode } from \"../../../apis/countryApi\";\nimport {\n  AddProject,\n  getProject2,\n  updateProject,\n} from \"../../../apis/projectApi\";\nimport \"./OrganizationForm.css\";\nimport { getThematiques } from \"apis/thematiqueApi\";\nimport { getStatus } from \"apis/statusApi\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Row, FormGroup, FormLabel, Col } from \"react-bootstrap\";\nimport \"./ProjectForm.css\";\nimport { getOrganizationByType } from \"apis/organizationApi\";\nimport { getAllCops } from \"apis/userApi\";\nconst MoreDetailsProject = () => {\n  const { codeCountry, idProject, multimedia } = useParams();\n  const history = useHistory();\n  const editor = useRef(null);\n  const ObjEditor = useRef(null);\n  const [content, setContent] = useState(\"\");\n  const [objectives, setObjectives] = useState(\"\");\n  const [thematiquesOptions, setThematiquesOptions] = useState();\n  const [fundersOptions, setFundersOptions] = useState();\n  const [selectedFunder, setSelectedFunder] = useState(null);\n  const [subFundersOptions, setSubFundersOptions] = useState();\n  const [selectedSubFunder, setSelectedSubFunder] = useState(null);\n  const [implementersOptions, setImplementersOptions] = useState();\n  const [selectedImplementer, setSelectedImplementer] = useState(null);\n  const [subImplementersOptions, setSubImplementersOptions] = useState();\n  const [selectedSubImplementer, setSelectedSubImplementer] = useState(null);\n  const [statusOptions, setStatusOptions] = useState();\n  const [copOptions, setCopOptions] = useState();\n  const [selectedCop, setSelectedCop] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [selectedStatus, setSelectedStatus] = useState(null);\n  const [status, setStatus] = useState(null);\n  const [project, setProject] = useState();\n  const [country, setCountry] = useState();\n  const [projectLogoPreview, setProjectLogoPreview] = useState(null);\n  const [projectLogo, setProjectLogo] = useState();\n  const [approvalDate, setApprovalDate] = useState();\n  const [actualStart, setActualStart] = useState();\n  const [plannedEnd, setPlannedEnd] = useState();\n  const [actualEnd, setActualEnd] = useState();\n  const [loading, setLoading] = useState(false);\n  const config = {\n    readonly: false,\n    placeholder: \"Description of the project\",\n  };\n  const configObj = {\n    readonly: false,\n    placeholder: \"Ojectives of the project\",\n  };\n\n  const { register, handleSubmit, setValue } = useForm();\n\n  const getDataFromApi = useCallback(async () => {\n    const thematiques = await getThematiques();\n    setThematiquesOptions(\n      thematiques?.map((thematique) => {\n        return {\n          value: thematique._id,\n          label: thematique.name,\n        };\n      })\n    );\n    const funders = await getOrganizationByType(\"Funding Agencies\");\n    const subfund = funders?.map((funder) => {\n      return {\n        value: funder._id,\n        label: funder.name,\n      };\n    });\n    setFundersOptions(subfund);\n    setSubFundersOptions(subfund);\n\n    const implementers = await getOrganizationByType(\"Implementing NGO\");\n    const subImpl = implementers?.map((implementer) => {\n      return {\n        value: implementer._id,\n        label: implementer.name,\n      };\n    });\n    setImplementersOptions(subImpl);\n    setSubImplementersOptions(subImpl);\n    const status = await getStatus();\n    setStatus(status);\n    setStatusOptions(\n      status?.map((sta) => {\n        return {\n          value: sta?._id,\n          label: sta?.name,\n        };\n      })\n    );\n    const country = await getCountryByCode(codeCountry);\n    setCountry(country);\n\n    const cops = await getAllCops();\n    setCopOptions(\n      cops?.map((cop) => {\n        return {\n          value: cop?._id,\n          label: cop?.fullname,\n        };\n      })\n    );\n    if (idProject !== undefined) {\n      const project = await getProject2(idProject);\n      setProject(project);\n      setProjectLogoPreview(urlImageAdapter(project?.image_url));\n      if (project.thematique)\n        setSelectedOption({\n          value: project?.thematique?._id,\n          label: project?.thematique?.name,\n        });\n      if (project.status)\n        setSelectedStatus({\n          value: project?.status?._id,\n          label: project?.status?.name,\n        });\n      if (project.funder)\n        setSelectedFunder({\n          value: project?.funder?._id,\n          label: project?.funder?.name,\n        });\n      if (project.sub_funder)\n        setSelectedSubFunder({\n          value: project?.sub_funder[0]?._id,\n          label: project?.sub_funder[0]?.name,\n        });\n      if (project.implementer)\n        setSelectedImplementer({\n          value: project?.implementer?._id,\n          label: project?.implementer?.name,\n        });\n      if (project.sub_implementer)\n        setSelectedSubImplementer({\n          value: project?.sub_implementer[0]?._id,\n          label: project?.sub_implementer[0]?.name,\n        });\n      if (project.task_manager)\n        setSelectedCop({\n          value: project?.task_manager?._id,\n          label: project?.task_manager?.fullname,\n        });\n      if (project.description) setContent(project?.description);\n      if (project.objectives) setObjectives(project?.objectives);\n      if (project.approval_date)\n        setApprovalDate(moment(project?.approval_date).toDate());\n      if (project.actual_start)\n        setActualStart(moment(project?.actual_start).toDate());\n      if (project.actual_end)\n        setActualEnd(moment(project?.actual_end).toDate());\n      if (project.planned_end)\n        setPlannedEnd(moment(project?.planned_end).toDate());\n\n      //setContent(project?.task_manager);\n      if (project.name) setValue(\"name\", project?.name);\n      if (project.total_cost) setValue(\"total_cost\", project?.total_cost);\n      if (project.budget) setValue(\"budget\", project?.budget);\n      if (project.task_manager) setValue(\"task_manager\", project?.task_manager);\n      if (project.image_url) setValue(\"image_url\", project?.image_url);\n    }\n  }, [idProject, setValue]);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const onSubmit = async (data) => {\n    //const project = await getProject2(selectedOption?.value);\n    let formData = new FormData();\n    formData.append(\"namefr\", \"\");\n    formData.append(\"country\", country?._id);\n\n    if (selectedOption) formData.append(\"thematique\", selectedOption?.value);\n\n    if (selectedStatus) formData.append(\"status\", selectedStatus?.value);\n\n    if (selectedFunder) formData.append(\"funder\", selectedFunder?.value);\n\n    if (selectedSubFunder)\n      formData.append(\"sub_funder\", [selectedSubFunder?.value]);\n\n    if (selectedImplementer)\n      formData.append(\"implementer\", selectedImplementer?.value);\n\n    if (selectedSubImplementer)\n      formData.append(\"sub_implementer\", [selectedSubImplementer?.value]);\n\n    if (data.total_cost !== \"\") formData.append(\"total_cost\", data.total_cost);\n    // if (data.budget === \"\") formData.append(\"budget\", null);\n    //else formData.append(\"budget\", data.budget);\n\n    if (approvalDate) formData.append(\"approval_date\", approvalDate);\n\n    if (actualStart) formData.append(\"actual_start\", actualStart);\n\n    if (actualEnd) formData.append(\"actual_end\", actualEnd);\n\n    if (plannedEnd) formData.append(\"planned_end\", plannedEnd);\n\n    if (selectedCop) formData.append(\"task_manager\", selectedCop?.value);\n\n    formData.append(\"name\", data.name);\n\n    formData.append(\"description\", content);\n    formData.append(\"objectives\", objectives);\n    if (projectLogo != undefined) formData.append(\"projectImage\", projectLogo);\n    if (idProject !== undefined) {\n      setLoading(true);\n      await updateProject(idProject, formData);\n      setLoading(false);\n    } else {\n      formData.append(\"validation\", 1);\n      await AddProject(formData);\n      history.push(`/web-master/validationProjects/projectsV/${codeCountry}`);\n    }\n  };\n\n  const handleThematiqueChange = (selected) => {\n    setSelectedOption(selected);\n  };\n\n  const handleChangeStatus = (selected) => {\n    setSelectedStatus(selected);\n  };\n  const imagePreview = (e) => {\n    setProjectLogoPreview(URL.createObjectURL(e.target.files[0]));\n    setProjectLogo(e.target.files[0]);\n  };\n\n  return (\n    <div className=\"container\">\n      <form>\n        <div className=\"row\">\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <div className=\"input-block\">\n              <input\n                className=\"input-org-form\"\n                type=\"text\"\n                id=\"total_cost\"\n                spellCheck=\"false\"\n                {...register(\"total_cost\")}\n              />\n              <span className=\"placeholder\" style={{ color: \"black\" }}>\n                Total Cost\n              </span>\n            </div>\n          </div>\n          <div className=\"col-12 col-lg-6 centralize \">\n            <FormLabel className=\"label__form\">COP</FormLabel>\n            <Select\n              placeholder=\"Select COP \"\n              value={selectedCop}\n              onChange={(selected) => setSelectedCop(selected)}\n              options={copOptions}\n            />\n          </div>{\" \"}\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <FormLabel className=\"label__form\">Thematic</FormLabel>\n            <Select\n              placeholder=\"Select the thematic \"\n              value={selectedOption}\n              onChange={handleThematiqueChange}\n              options={thematiquesOptions}\n            />\n          </div>{\" \"}\n          <div className=\"col-12 mt-4\">\n            <FormLabel className=\"label__form\">Description</FormLabel>\n            <JoditEditor\n              ref={editor}\n              value={content}\n              config={config}\n              tabIndex={1}\n              onBlur={(newContent) => setContent(newContent)}\n            />\n          </div>{\" \"}\n          {!loading ? (\n            <button\n              onClick={handleSubmit(onSubmit)}\n              type=\"submit\"\n              className={\n                idProject !== undefined\n                  ? `btn btn-warning w-100 h-25 shadow-none my-3`\n                  : `btn btn-primary w-100 h-25 shadow-none my-3`\n              }\n            >\n              {idProject !== undefined ? \"Save Modifications\" : \"Add Project\"}\n            </button>\n          ) : (\n            <div className=\"spinner-border text-warning m-auto\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default MoreDetailsProject.length;\n"]},"metadata":{},"sourceType":"module"}