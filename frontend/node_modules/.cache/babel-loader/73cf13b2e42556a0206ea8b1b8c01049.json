{"ast":null,"code":"var _jsxFileName = \"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/NetworkGraph2.js\",\n    _s = $RefreshSig$();\n\nimport Graph from \"react-graph-vis\";\nimport React, { useState } from \"react\";\nimport Color from \"color\";\nimport ReactDOM from \"react-dom\";\nimport \"./Graph.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  autoResize: true,\n  height: \"600\",\n  width: \"100%\",\n  interaction: {\n    navigationButtons: true,\n    keyboard: true,\n    tooltipDelay: 50\n  },\n  layout: {\n    randomSeed: undefined,\n    improvedLayout: true,\n    clusterThreshold: 150,\n    hierarchical: {\n      enabled: false,\n      levelSeparation: 150,\n      nodeSpacing: 100,\n      treeSpacing: 200,\n      blockShifting: true,\n      edgeMinimization: true,\n      parentCentralization: true,\n      // direction: 'UD',        // UD, DU, LR, RL\n      sortMethod: \"hubsize\",\n      // hubsize, directed\n      shakeTowards: \"leaves\" // roots, leaves\n\n    }\n  },\n  nodes: {\n    shape: \"box\",\n    widthConstraint: 120,\n    heightConstraint: 72,\n    shapeProperties: {\n      borderRadius: 20\n    }\n  },\n  edges: {\n    smooth: {\n      type: \"cubicBezier\",\n      forceDirection: \"horizontal\",\n      roundness: 0.9\n    },\n    color: \"white\"\n  }\n};\n\nfunction randomColor() {\n  const red = Math.floor(Math.random() * 256).toString(16).padStart(2, \"0\");\n  const green = Math.floor(Math.random() * 256).toString(16).padStart(2, \"0\");\n  const blue = Math.floor(Math.random() * 256).toString(16).padStart(2, \"0\");\n  return `#${red}${green}${blue}`;\n}\n\nfunction NetworkGraph2() {\n  _s();\n\n  var activities = [{\n    id: 1,\n    x: 0,\n    y: 0,\n    label: \"Activity 1 \",\n    title: \"user6 \\n CTO\",\n    shape: \"box\",\n    size: 50,\n    mass: 1,\n    physics: false,\n    color: \"#33FFDE\",\n    widthConstraint: 200,\n    heightConstraint: 20\n  }, {\n    id: 2,\n    x: 0,\n    y: 100,\n    label: \"Activity 2\",\n    shape: \"box\",\n    size: 50,\n    mass: 1,\n    physics: false,\n    color: \"#33FFDE\",\n    widthConstraint: 200,\n    heightConstraint: 20\n  }, {\n    id: 3,\n    x: 0,\n    y: 200,\n    label: \"Activity 3\",\n    shape: \"box\",\n    size: 50,\n    mass: 1,\n    physics: false,\n    color: \"#33FFDE\",\n    widthConstraint: 200,\n    heightConstraint: 20\n  }, {\n    id: 4,\n    x: 0,\n    y: 300,\n    label: \"Activity 4\",\n    shape: \"box\",\n    size: 50,\n    mass: 1,\n    physics: false,\n    color: \"#33FFDE\",\n    widthConstraint: 200,\n    heightConstraint: 20\n  }];\n  var outputs = [{\n    id: 10,\n    x: 300,\n    y: 0,\n    label: \"output 1 \",\n    shape: \"box\",\n    size: 50,\n    mass: 1,\n    physics: false,\n    color: \"#33F3FF\",\n    widthConstraint: 200,\n    heightConstraint: 50\n  }, {\n    id: 11,\n    x: 300,\n    y: 100,\n    label: \"output 2\",\n    shape: \"box\",\n    size: 50,\n    mass: 1,\n    physics: false,\n    color: \"#33F3FF\",\n    widthConstraint: 200,\n    heightConstraint: 50\n  }, {\n    id: 12,\n    x: 300,\n    y: 200,\n    label: \"output 3\",\n    shape: \"box\",\n    size: 50,\n    mass: 1,\n    physics: false,\n    color: \"#33F3FF\",\n    widthConstraint: 200,\n    heightConstraint: 50\n  }, {\n    id: 14,\n    x: 300,\n    y: 300,\n    label: \"Activity 4\",\n    shape: \"box\",\n    size: 50,\n    mass: 1,\n    physics: false,\n    color: \"#33F3FF\",\n    widthConstraint: 200,\n    heightConstraint: 50\n  }];\n  var outcomes = [{\n    id: 20,\n    x: 600,\n    y: 0,\n    label: \"outcome 1 \",\n    shape: \"box\",\n    size: 50,\n    mass: 1,\n    physics: false,\n    // color:\"#338DFF\",\n    widthConstraint: 200,\n    heightConstraint: 100\n  }, {\n    id: 21,\n    x: 600,\n    y: 150,\n    label: \"outcome 2\",\n    title: \"user5 \\n Data Analyst\",\n    shape: \"box\",\n    size: 50,\n    mass: 1,\n    physics: false,\n    //  color:\"#338DFF\",\n    widthConstraint: 200,\n    heightConstraint: 100\n  }, {\n    id: 22,\n    x: 600,\n    y: 300,\n    label: \"output 3\",\n    title: \"user5 \\n Data Analyst\",\n    shape: \"box\",\n    size: 50,\n    mass: 1,\n    physics: false,\n    color: \"#338DFF\",\n    widthConstraint: 200,\n    heightConstraint: 100\n  }].map((c, i) => ({ ...c,\n    color: {\n      border: Color(\"#ffffff\").darken(0.2).hex(),\n      background: \"#ffffff\",\n      highlight: {\n        border: Color(\"#ffffff\").darken(0.3).hex(),\n        background: Color(\"#ffffff\").darken(0.2).hex()\n      },\n      hover: {\n        border: Color(\"#ffffff\").darken(0.3).hex(),\n        background: Color(\"#ffffff\").darken(0.2).hex()\n      }\n    }\n  }));\n  var impacts = [{\n    id: 30,\n    x: 900,\n    y: 150,\n    label: \"impact 1\",\n    shape: \"box\",\n    size: 50,\n    mass: 1,\n    physics: false,\n    color: \"#240EA9\",\n    widthConstraint: 200,\n    heightConstraint: 200,\n    font: {\n      color: \"white\"\n    }\n  }];\n  const [state, setState] = useState({\n    counter: 5,\n    graph: {\n      nodes: [...activities, ...outputs, ...outcomes, ...impacts],\n      edges: [{\n        from: 10,\n        to: 20,\n        width: 2\n      }, {\n        from: 11,\n        to: 21,\n        width: 2\n      }, {\n        from: 2,\n        to: 10,\n        width: 2\n      }, {\n        from: 2,\n        to: 11,\n        width: 2\n      }, {\n        from: 2,\n        to: 12,\n        width: 2\n      }, {\n        from: 3,\n        to: 6,\n        width: 2\n      }, {\n        from: 20,\n        to: 30,\n        width: 2\n      }, {\n        from: 21,\n        to: 30,\n        width: 2\n      }, {\n        from: 22,\n        to: 30,\n        width: 2\n      }]\n    },\n    events: {\n      select: ({\n        nodes,\n        pointer: {\n          canvas\n        }\n      }) => {\n        // const position = nodePosition(2);\n        console.log(\"Selected nodes:\" + nodes);\n        console.log(\"Selected node: \" + nodes + canvas.x + \" \" + canvas.y);\n      } // doubleClick: ({ pointer: { canvas } }) => {\n      //   createNode(canvas.x, canvas.y);\n      // }\n\n    }\n  });\n  const {\n    graph,\n    events\n  } = state;\n  const positions = graph;\n  console.log(positions);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"network-graph\",\n    children: /*#__PURE__*/_jsxDEV(Graph, {\n      graph: graph,\n      options: options,\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NetworkGraph2, \"ciNxmNBwb5f/SXjr/l5cZZFi9u8=\");\n\n_c = NetworkGraph2;\nexport default NetworkGraph2;\n\nvar _c;\n\n$RefreshReg$(_c, \"NetworkGraph2\");","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/NetworkGraph2.js"],"names":["Graph","React","useState","Color","ReactDOM","options","autoResize","height","width","interaction","navigationButtons","keyboard","tooltipDelay","layout","randomSeed","undefined","improvedLayout","clusterThreshold","hierarchical","enabled","levelSeparation","nodeSpacing","treeSpacing","blockShifting","edgeMinimization","parentCentralization","sortMethod","shakeTowards","nodes","shape","widthConstraint","heightConstraint","shapeProperties","borderRadius","edges","smooth","type","forceDirection","roundness","color","randomColor","red","Math","floor","random","toString","padStart","green","blue","NetworkGraph2","activities","id","x","y","label","title","size","mass","physics","outputs","outcomes","map","c","i","border","darken","hex","background","highlight","hover","impacts","font","state","setState","counter","graph","from","to","events","select","pointer","canvas","console","log","positions"],"mappings":"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","sourcesContent":["import Graph from \"react-graph-vis\";\nimport React, { useState } from \"react\";\nimport Color from \"color\";\nimport ReactDOM from \"react-dom\";\nimport \"./Graph.css\";\n\nconst options = {\n  autoResize: true,\n  height: \"600\",\n  width: \"100%\",\n  interaction: {\n    navigationButtons: true,\n    keyboard: true,\n    tooltipDelay: 50,\n  },\n  layout: {\n    randomSeed: undefined,\n    improvedLayout: true,\n    clusterThreshold: 150,\n    hierarchical: {\n      enabled: false,\n      levelSeparation: 150,\n      nodeSpacing: 100,\n      treeSpacing: 200,\n      blockShifting: true,\n      edgeMinimization: true,\n      parentCentralization: true,\n      // direction: 'UD',        // UD, DU, LR, RL\n      sortMethod: \"hubsize\", // hubsize, directed\n      shakeTowards: \"leaves\", // roots, leaves\n    },\n  },\n\n  nodes: {\n    shape: \"box\",\n    widthConstraint: 120,\n    heightConstraint: 72,\n    shapeProperties: {\n      borderRadius: 20,\n    },\n  },\n  edges: {\n    smooth: {\n      type: \"cubicBezier\",\n      forceDirection: \"horizontal\",\n      roundness: 0.9,\n    },\n    color: \"white\",\n  },\n};\n\nfunction randomColor() {\n  const red = Math.floor(Math.random() * 256)\n    .toString(16)\n    .padStart(2, \"0\");\n  const green = Math.floor(Math.random() * 256)\n    .toString(16)\n    .padStart(2, \"0\");\n  const blue = Math.floor(Math.random() * 256)\n    .toString(16)\n    .padStart(2, \"0\");\n  return `#${red}${green}${blue}`;\n}\n\nfunction NetworkGraph2() {\n  var activities = [\n    {\n      id: 1,\n      x: 0,\n      y: 0,\n      label: \"Activity 1 \",\n      title: \"user6 \\n CTO\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#33FFDE\",\n      widthConstraint: 200,\n      heightConstraint: 20,\n    },\n\n    {\n      id: 2,\n      x: 0,\n      y: 100,\n      label: \"Activity 2\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#33FFDE\",\n      widthConstraint: 200,\n      heightConstraint: 20,\n    },\n\n    {\n      id: 3,\n      x: 0,\n      y: 200,\n      label: \"Activity 3\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#33FFDE\",\n      widthConstraint: 200,\n      heightConstraint: 20,\n    },\n\n    {\n      id: 4,\n      x: 0,\n      y: 300,\n      label: \"Activity 4\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#33FFDE\",\n      widthConstraint: 200,\n      heightConstraint: 20,\n    },\n  ];\n  var outputs = [\n    {\n      id: 10,\n      x: 300,\n      y: 0,\n      label: \"output 1 \",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#33F3FF\",\n      widthConstraint: 200,\n      heightConstraint: 50,\n    },\n\n    {\n      id: 11,\n      x: 300,\n      y: 100,\n      label: \"output 2\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#33F3FF\",\n      widthConstraint: 200,\n      heightConstraint: 50,\n    },\n\n    {\n      id: 12,\n      x: 300,\n      y: 200,\n      label: \"output 3\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#33F3FF\",\n      widthConstraint: 200,\n      heightConstraint: 50,\n    },\n\n    {\n      id: 14,\n      x: 300,\n      y: 300,\n      label: \"Activity 4\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#33F3FF\",\n      widthConstraint: 200,\n      heightConstraint: 50,\n    },\n  ];\n\n  var outcomes = [\n    {\n      id: 20,\n      x: 600,\n      y: 0,\n      label: \"outcome 1 \",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      // color:\"#338DFF\",\n      widthConstraint: 200,\n      heightConstraint: 100,\n    },\n\n    {\n      id: 21,\n      x: 600,\n      y: 150,\n      label: \"outcome 2\",\n      title: \"user5 \\n Data Analyst\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      //  color:\"#338DFF\",\n      widthConstraint: 200,\n      heightConstraint: 100,\n    },\n\n    {\n      id: 22,\n      x: 600,\n      y: 300,\n      label: \"output 3\",\n      title: \"user5 \\n Data Analyst\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#338DFF\",\n      widthConstraint: 200,\n      heightConstraint: 100,\n    },\n  ].map((c, i) => ({\n    ...c,\n    color: {\n      border: Color(\"#ffffff\")\n        .darken(0.2)\n        .hex(),\n      background: \"#ffffff\",\n      highlight: {\n        border: Color(\"#ffffff\")\n          .darken(0.3)\n          .hex(),\n        background: Color(\"#ffffff\")\n          .darken(0.2)\n          .hex(),\n      },\n      hover: {\n        border: Color(\"#ffffff\")\n          .darken(0.3)\n          .hex(),\n        background: Color(\"#ffffff\")\n          .darken(0.2)\n          .hex(),\n      },\n    },\n  }));\n\n  var impacts = [\n    {\n      id: 30,\n      x: 900,\n      y: 150,\n      label: \"impact 1\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#240EA9\",\n      widthConstraint: 200,\n      heightConstraint: 200,\n      font: {\n        color: \"white\",\n      },\n    },\n  ];\n\n  const [state, setState] = useState({\n    counter: 5,\n    graph: {\n      nodes: [...activities, ...outputs, ...outcomes, ...impacts],\n      edges: [\n        { from: 10, to: 20, width: 2 },\n        { from: 11, to: 21, width: 2 },\n        { from: 2, to: 10, width: 2 },\n        { from: 2, to: 11, width: 2 },\n        { from: 2, to: 12, width: 2 },\n        { from: 3, to: 6, width: 2 },\n        { from: 20, to: 30, width: 2 },\n        { from: 21, to: 30, width: 2 },\n        { from: 22, to: 30, width: 2 },\n      ],\n    },\n    events: {\n      select: ({ nodes, pointer: { canvas } }) => {\n        // const position = nodePosition(2);\n        console.log(\"Selected nodes:\" + nodes);\n        console.log(\"Selected node: \" + nodes + canvas.x + \" \" + canvas.y);\n      },\n      // doubleClick: ({ pointer: { canvas } }) => {\n      //   createNode(canvas.x, canvas.y);\n      // }\n    },\n  });\n  const { graph, events } = state;\n\n  const positions = graph;\n  console.log(positions);\n\n  return (\n    <div className=\"network-graph\">\n      <Graph graph={graph} options={options} events={events} />\n      {/* <Graph graph={graph} options={options} events={events} />\n      <Graph graph={graph} options={options} events={events} /> */}\n    </div>\n  );\n}\n\nexport default NetworkGraph2;\n"]},"metadata":{},"sourceType":"module"}