{"ast":null,"code":"import { getRequest, postRequest, deleteRequest, putRequest } from \"./index\";\nexport const getExpertsofMonth = async (limit, page) => {\n  try {\n    const {\n      data\n    } = await postRequest(`user/expertOfMonth?limit=${limit}&page=${page}`, {\n      searchText: \"\"\n    });\n    return data === null || data === void 0 ? void 0 : data.data;\n  } catch (error) {\n    console.log(error);\n  }\n\n  return [];\n};\nexport const getExpertsofMonthScrolling = async ({\n  pageParam = 1,\n  queryKey\n}) => {\n  const [search, limitPage] = queryKey;\n  const {\n    data\n  } = await postRequest(`user/expertOfMonth?limit=${limitPage}&page=${pageParam}`, {\n    searchText: search\n  });\n  return {\n    data: data === null || data === void 0 ? void 0 : data.data,\n    page: pageParam\n  };\n};\nexport const getExpert = async expert_id => {\n  try {\n    const {\n      data\n    } = await getRequest(`user/expertDetailData/${expert_id}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n\n  return [];\n};\nexport const deleteExpert = async ExpId => {\n  try {\n    const res = await deleteRequest(`user/${ExpId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllExpertsByCountry = async codeCountry => {\n  try {\n    const res = await getRequest(`user/ByCodeCountry/${codeCountry}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateExpert = async (idExpert, expert) => {\n  try {\n    const res = await putRequest(`user/${idExpert}`, expert);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const AddExpert = async expert => {\n  try {\n    const res = await postRequest(\"user\", expert);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n_c = AddExpert;\nexport const getAllHeadExpertsWithIdAndName = async () => {\n  try {\n    const res = await getRequest(\"user/headExpertWithIdAndName\");\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const enableExpertOfMonth = async expertId => {\n  try {\n    const res = await putRequest(`user/enableExpertOfMonth/${expertId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const disabledExpertOfMonth = async expertId => {\n  try {\n    const res = await putRequest(`user/disabledExpertOfMonth/${expertId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}; //webmaster\n\nexport const AddWebmaster = async webmaster => {\n  try {\n    const res = await postRequest(\"user/addWebmaster\", webmaster);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n_c2 = AddWebmaster;\nexport const deleteWebmaster = async webmasterId => {\n  try {\n    const res = await deleteRequest(`user/${webmasterId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllwebmasters = async () => {\n  try {\n    var _res$data;\n\n    const res = await getRequest(\"user/getAllwebmasters\");\n    return (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getOneWebmaster = async webmasterId => {\n  try {\n    const res = await getRequest(`user/${webmasterId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllCops = async () => {\n  try {\n    const res = await getRequest(`user/allCop`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddExpert\");\n$RefreshReg$(_c2, \"AddWebmaster\");","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/userApi.js"],"names":["getRequest","postRequest","deleteRequest","putRequest","getExpertsofMonth","limit","page","data","searchText","error","console","log","getExpertsofMonthScrolling","pageParam","queryKey","search","limitPage","getExpert","expert_id","deleteExpert","ExpId","res","getAllExpertsByCountry","codeCountry","updateExpert","idExpert","expert","AddExpert","getAllHeadExpertsWithIdAndName","enableExpertOfMonth","expertId","disabledExpertOfMonth","AddWebmaster","webmaster","deleteWebmaster","webmasterId","getAllwebmasters","getOneWebmaster","getAllCops"],"mappings":"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","sourcesContent":["import { getRequest, postRequest, deleteRequest, putRequest } from \"./index\";\n\nexport const getExpertsofMonth = async (limit, page) => {\n  try {\n    const { data } = await postRequest(\n      `user/expertOfMonth?limit=${limit}&page=${page}`,\n      {\n        searchText: \"\",\n      }\n    );\n    return data?.data;\n  } catch (error) {\n    console.log(error);\n  }\n  return [];\n};\n\nexport const getExpertsofMonthScrolling = async ({\n  pageParam = 1,\n  queryKey,\n}) => {\n  const [search, limitPage] = queryKey;\n  const { data } = await postRequest(\n    `user/expertOfMonth?limit=${limitPage}&page=${pageParam}`,\n    {\n      searchText: search,\n    }\n  );\n  return { data: data?.data, page: pageParam };\n};\n\nexport const getExpert = async (expert_id) => {\n  try {\n    const { data } = await getRequest(`user/expertDetailData/${expert_id}`);\n\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n  return [];\n};\nexport const deleteExpert = async (ExpId) => {\n  try {\n    const res = await deleteRequest(`user/${ExpId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllExpertsByCountry = async (codeCountry) => {\n  try {\n    const res = await getRequest(`user/ByCodeCountry/${codeCountry}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateExpert = async (idExpert, expert) => {\n  try {\n    const res = await putRequest(`user/${idExpert}`, expert);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const AddExpert = async (expert) => {\n  try {\n    const res = await postRequest(\"user\", expert);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getAllHeadExpertsWithIdAndName = async () => {\n  try {\n    const res = await getRequest(\"user/headExpertWithIdAndName\");\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const enableExpertOfMonth = async (expertId) => {\n  try {\n    const res = await putRequest(`user/enableExpertOfMonth/${expertId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const disabledExpertOfMonth = async (expertId) => {\n  try {\n    const res = await putRequest(`user/disabledExpertOfMonth/${expertId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//webmaster\nexport const AddWebmaster = async (webmaster) => {\n  try {\n    const res = await postRequest(\"user/addWebmaster\", webmaster);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteWebmaster = async (webmasterId) => {\n  try {\n    const res = await deleteRequest(`user/${webmasterId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllwebmasters = async () => {\n  try {\n    const res = await getRequest(\"user/getAllwebmasters\");\n    return res.data?.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getOneWebmaster = async (webmasterId) => {\n  try {\n    const res = await getRequest(`user/${webmasterId}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getAllCops = async () => {\n  try {\n    const res = await getRequest(`user/allCop`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}