{"ast":null,"code":"var _jsxFileName = \"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ProjectsByImplementers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getAllProjectsOfMonthByDonors, getAllProjectsOfMonthByImplementers } from \"../../apis/projectApi\";\nimport InputSearch from \"../../components/aidchannel/general/InputSearch\";\nimport ProjectCard from \"../../components/aidchannel/project/ProjectCard\";\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\nimport CountryHeader from \"components/layout/header/CountryHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProjectsByImplementers = () => {\n  _s();\n\n  const [projects, setProjects] = useState();\n  const {\n    idOrg,\n    codeCountry\n  } = useParams();\n  const [searchText, setSearchText] = useState(\"\");\n  const getDataFromApi = useCallback(async () => {\n    const proj = await getAllProjectsOfMonthByImplementers(idOrg, codeCountry);\n    setProjects(proj);\n  }, [idOrg, codeCountry]);\n  useEffect(() => {\n    getDataFromApi();\n  }, [idOrg, codeCountry, getDataFromApi]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CountryHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minHeight: \"100vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-5\",\n        children: [/*#__PURE__*/_jsxDEV(InputSearch, {\n          setSearchText: setSearchText,\n          searchText: searchText,\n          placeholder: `Search for projects`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: projects === null || projects === void 0 ? void 0 : projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-md-6 col-lg-4 my-4\",\n            children: /*#__PURE__*/_jsxDEV(ProjectCard, {\n              project: project\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PublicFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProjectsByImplementers, \"4/RHf4YtAJYJpfX3D3Dilftn4CI=\", false, function () {\n  return [useParams];\n});\n\n_c = ProjectsByImplementers;\nexport default ProjectsByImplementers;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectsByImplementers\");","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ProjectsByImplementers.js"],"names":["React","useState","useEffect","useCallback","useRef","useParams","getAllProjectsOfMonthByDonors","getAllProjectsOfMonthByImplementers","InputSearch","ProjectCard","PublicFooter","CountryHeader","ProjectsByImplementers","projects","setProjects","idOrg","codeCountry","searchText","setSearchText","getDataFromApi","proj","minHeight","map","project","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,EAAkDC,MAAlD,QAAgE,OAAhE;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,6BAAT,EAAwCC,mCAAxC,QAAmF,uBAAnF;AACA,OAAOC,WAAP,MAAwB,iDAAxB;AACA,OAAOC,WAAP,MAAwB,iDAAxB;AAEA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;;;;AAEA,MAAMC,sBAAsB,GAAG,MAAM;AAAA;;AACnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,EAAxC;AACA,QAAM;AAAEc,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAyBX,SAAS,EAAxC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMkB,cAAc,GAAGhB,WAAW,CAAC,YAAY;AAC7C,UAAMiB,IAAI,GAAG,MAAMb,mCAAmC,CAACQ,KAAD,EAAQC,WAAR,CAAtD;AACAF,IAAAA,WAAW,CAACM,IAAD,CAAX;AACD,GAHiC,EAG/B,CAACL,KAAD,EAAQC,WAAR,CAH+B,CAAlC;AAIAd,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,cAAc;AACf,GAFQ,EAEN,CAACJ,KAAD,EAAQC,WAAR,EAAqBG,cAArB,CAFM,CAAT;AAGA,sBACE;AAAA,4BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,KAAK,EAAE;AAAEE,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACE,QAAC,WAAD;AACE,UAAA,aAAa,EAAEH,aADjB;AAEE,UAAA,UAAU,EAAED,UAFd;AAGE,UAAA,WAAW,EAAG;AAHhB;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,oBACGJ,QADH,aACGA,QADH,uBACGA,QAAQ,CAAES,GAAV,CAAc,CAACC,OAAD,EAAUC,KAAV,kBACb;AAAiB,YAAA,SAAS,EAAC,+BAA3B;AAAA,mCACE,QAAC,WAAD;AAAa,cAAA,OAAO,EAAED;AAAtB,eAAoCC,KAApC;AAAA;AAAA;AAAA;AAAA;AADF,aAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAkBE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA,kBADF;AAsBD,CAjCD;;GAAMZ,sB;UAE2BP,S;;;KAF3BO,sB;AAmCN,eAAeA,sBAAf","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getAllProjectsOfMonthByDonors, getAllProjectsOfMonthByImplementers } from \"../../apis/projectApi\";\nimport InputSearch from \"../../components/aidchannel/general/InputSearch\";\nimport ProjectCard from \"../../components/aidchannel/project/ProjectCard\";\n\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\nimport CountryHeader from \"components/layout/header/CountryHeader\";\n\nconst ProjectsByImplementers = () => {\n  const [projects, setProjects] = useState();\n  const { idOrg, codeCountry } = useParams();\n  const [searchText, setSearchText] = useState(\"\");\n  const getDataFromApi = useCallback(async () => {\n    const proj = await getAllProjectsOfMonthByImplementers(idOrg, codeCountry);\n    setProjects(proj);\n  }, [idOrg, codeCountry]);\n  useEffect(() => {\n    getDataFromApi();\n  }, [idOrg, codeCountry, getDataFromApi]);\n  return (\n    <>\n      <CountryHeader />\n      <div style={{ minHeight: \"100vh\" }}>\n        <div className=\"container my-5\">\n          <InputSearch\n            setSearchText={setSearchText}\n            searchText={searchText}\n            placeholder={`Search for projects`}\n          />\n          <div className=\"row\">\n            {projects?.map((project, index) => (\n              <div key={index} className=\"col-12 col-md-6 col-lg-4 my-4\">\n                <ProjectCard project={project} key={index} />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      <PublicFooter />\n    </>\n  );\n};\n\nexport default ProjectsByImplementers;\n"]},"metadata":{},"sourceType":"module"}