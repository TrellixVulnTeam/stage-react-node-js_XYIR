{"ast":null,"code":"var _jsxFileName = \"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/ArticlesValides.js\",\n    _s = $RefreshSig$();\n\nimport { getArticlesAccepted } from \"apis/articleApi\";\nimport React, { useState, useRef } from \"react\";\nimport { useInfiniteQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport ArticleCard from \"components/aidchannel/articles/ArticleCard\";\nimport useIntersectionObserver from \"../../helpers/useIntersectionObserver\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ArticlesValides = () => {\n  _s();\n\n  const [limit] = useState(4);\n  const {\n    codeCountry\n  } = useParams();\n  const loadMoreButtonRef = useRef();\n  const [test, setTest] = useState(false);\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage\n  } = useInfiniteQuery([codeCountry, limit, test], getArticlesAccepted, {\n    getNextPageParam: (lastPage, pages) => {\n      if (lastPage.data.length === limit) return parseInt(lastPage.page) + 1;\n      return false;\n    }\n  });\n  console.log(data, \"data\");\n  useIntersectionObserver({\n    target: loadMoreButtonRef,\n    onIntersect: fetchNextPage,\n    enabled: hasNextPage\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-4 \",\n      children: data === null || data === void 0 ? void 0 : data.pages.map((group, i) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: group.data.map((article, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-0 border p-3 m-2\",\n          children: /*#__PURE__*/_jsxDEV(ArticleCard, {\n            article: article\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this))\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        ref: loadMoreButtonRef,\n        onClick: () => fetchNextPage(),\n        disabled: !hasNextPage || isFetchingNextPage,\n        children: isFetchingNextPage ? \"Loading more ....\" : hasNextPage ? \"Load More\" : \"Nothing more to load\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ArticlesValides, \"HJXJbRnx3Fc266uQBCog+hLYdJ4=\", false, function () {\n  return [useParams, useInfiniteQuery, useIntersectionObserver];\n});\n\n_c = ArticlesValides;\nexport default ArticlesValides;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticlesValides\");","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/ArticlesValides.js"],"names":["getArticlesAccepted","React","useState","useRef","useInfiniteQuery","useParams","ArticleCard","useIntersectionObserver","ArticlesValides","limit","codeCountry","loadMoreButtonRef","test","setTest","data","fetchNextPage","hasNextPage","isFetchingNextPage","getNextPageParam","lastPage","pages","length","parseInt","page","console","log","target","onIntersect","enabled","map","group","i","article","index","marginTop"],"mappings":";;;AAAA,SAASA,mBAAT,QAAoC,iBAApC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,WAAP,MAAwB,4CAAxB;AACA,OAAOC,uBAAP,MAAoC,uCAApC;;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,KAAD,IAAUP,QAAQ,CAAC,CAAD,CAAxB;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAkBL,SAAS,EAAjC;AACA,QAAMM,iBAAiB,GAAGR,MAAM,EAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,KAAD,CAAhC;AAEA,QAAM;AACJY,IAAAA,IADI;AAEJC,IAAAA,aAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA;AAJI,MAKFb,gBAAgB,CAAC,CAACM,WAAD,EAAcD,KAAd,EAAqBG,IAArB,CAAD,EAA6BZ,mBAA7B,EAAkD;AACpEkB,IAAAA,gBAAgB,EAAE,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACrC,UAAID,QAAQ,CAACL,IAAT,CAAcO,MAAd,KAAyBZ,KAA7B,EAAoC,OAAOa,QAAQ,CAACH,QAAQ,CAACI,IAAV,CAAR,GAA0B,CAAjC;AACpC,aAAO,KAAP;AACD;AAJmE,GAAlD,CALpB;AAYAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ,EAAkB,MAAlB;AAEAP,EAAAA,uBAAuB,CAAC;AACtBmB,IAAAA,MAAM,EAAEf,iBADc;AAEtBgB,IAAAA,WAAW,EAAEZ,aAFS;AAGtBa,IAAAA,OAAO,EAAEZ;AAHa,GAAD,CAAvB;AAMA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACGF,IADH,aACGA,IADH,uBACGA,IAAI,CAAEM,KAAN,CAAYS,GAAZ,CAAgB,CAACC,KAAD,EAAQC,CAAR,kBACf,QAAC,KAAD,CAAO,QAAP;AAAA,kBACGD,KAAK,CAAChB,IAAN,CAAWe,GAAX,CAAe,CAACG,OAAD,EAAUC,KAAV,kBACd;AAAiB,UAAA,SAAS,EAAC,qBAA3B;AAAA,iCACE,QAAC,WAAD;AAAa,YAAA,OAAO,EAAED;AAAtB,aAAoCC,KAApC;AAAA;AAAA;AAAA;AAAA;AADF,WAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,gBADD;AADH,SAAqBF,CAArB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAK,MAAA,KAAK,EAAE;AAAEG,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA,6BACE;AACE,QAAA,GAAG,EAAEvB,iBADP;AAEE,QAAA,OAAO,EAAE,MAAMI,aAAa,EAF9B;AAGE,QAAA,QAAQ,EAAE,CAACC,WAAD,IAAgBC,kBAH5B;AAAA,kBAKGA,kBAAkB,GACf,mBADe,GAEfD,WAAW,GACX,WADW,GAEX;AATN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AA4BD,CAtDD;;GAAMR,e;UAEoBH,S,EASpBD,gB,EASJG,uB;;;KApBIC,e;AAwDN,eAAeA,eAAf","sourcesContent":["import { getArticlesAccepted } from \"apis/articleApi\";\nimport React, { useState, useRef } from \"react\";\nimport { useInfiniteQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\n\nimport ArticleCard from \"components/aidchannel/articles/ArticleCard\";\nimport useIntersectionObserver from \"../../helpers/useIntersectionObserver\";\n\nconst ArticlesValides = () => {\n  const [limit] = useState(4);\n  const { codeCountry } = useParams();\n  const loadMoreButtonRef = useRef();\n  const [test, setTest] = useState(false);\n\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n  } = useInfiniteQuery([codeCountry, limit, test], getArticlesAccepted, {\n    getNextPageParam: (lastPage, pages) => {\n      if (lastPage.data.length === limit) return parseInt(lastPage.page) + 1;\n      return false;\n    },\n  });\n\n  console.log(data, \"data\");\n\n  useIntersectionObserver({\n    target: loadMoreButtonRef,\n    onIntersect: fetchNextPage,\n    enabled: hasNextPage,\n  });\n\n  return (\n    <>\n      <div className=\"row mt-4 \">\n        {data?.pages.map((group, i) => (\n          <React.Fragment key={i}>\n            {group.data.map((article, index) => (\n              <div key={index} className=\"mt-0 border p-3 m-2\">\n                <ArticleCard article={article} key={index} />\n              </div>\n            ))}\n          </React.Fragment>\n        ))}\n      </div>\n      <div style={{ marginTop: \"20px\" }}>\n        <button\n          ref={loadMoreButtonRef}\n          onClick={() => fetchNextPage()}\n          disabled={!hasNextPage || isFetchingNextPage}\n        >\n          {isFetchingNextPage\n            ? \"Loading more ....\"\n            : hasNextPage\n            ? \"Load More\"\n            : \"Nothing more to load\"}\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default ArticlesValides;\n"]},"metadata":{},"sourceType":"module"}