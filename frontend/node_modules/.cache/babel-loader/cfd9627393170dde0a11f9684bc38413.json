{"ast":null,"code":"import { getRequest, putRequest, postRequest } from \".\";\nexport const getAllVideosByCountryPagination = async ({\n  pageParam = 1,\n  queryKey\n}) => {\n  const [codeCountry, limit] = queryKey;\n\n  try {\n    const {\n      data\n    } = await getRequest(`youtube/videosByCountry/${codeCountry}?limit=${limit}&page=${pageParam}`);\n    return {\n      data: data.data,\n      page: pageParam\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getVideosByCountry = async (codeCountry, limit, page) => {\n  try {\n    const {\n      data\n    } = await getRequest(`youtube/videosByCountry/${codeCountry}?limit=${limit}&page=${page}`);\n    return data === null || data === void 0 ? void 0 : data.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const acceptVideo = async videoId => {\n  try {\n    await putRequest(`youtube/acceptVideo/${videoId}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const refuseVideo = async videoId => {\n  try {\n    await putRequest(`youtube/refuseVideo/${videoId}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getVideoAccepted = async ({\n  pageParam = 1,\n  queryKey\n}) => {\n  const [codeCountry, limit] = queryKey;\n\n  try {\n    const {\n      data\n    } = await getRequest(`youtube/VideosAccepted/${codeCountry}`);\n    return {\n      data: data.data,\n      page: pageParam\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getNumberVideosByCountry = async codeCountry => {\n  try {\n    const res = await getRequest(`youtube/numberByCodeCountry/${codeCountry}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getVideosbyChannelName = async ({\n  pageParam = 1,\n  queryKey\n}) => {\n  const [search, limitPage, codeCountry] = queryKey;\n  const {\n    data\n  } = await postRequest(`youtube/searchByChannelName?limit=${limitPage}&page=${pageParam}`, {\n    searchText: search,\n    code: codeCountry\n  });\n  return {\n    data: data.data,\n    page: pageParam\n  };\n};","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/youtubeApi.js"],"names":["getRequest","putRequest","postRequest","getAllVideosByCountryPagination","pageParam","queryKey","codeCountry","limit","data","page","error","console","log","getVideosByCountry","acceptVideo","videoId","refuseVideo","getVideoAccepted","getNumberVideosByCountry","res","getVideosbyChannelName","search","limitPage","searchText","code"],"mappings":"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","sourcesContent":["import { getRequest, putRequest, postRequest } from \".\";\n\nexport const getAllVideosByCountryPagination = async ({\n  pageParam = 1,\n  queryKey,\n}) => {\n  const [codeCountry, limit] = queryKey;\n  try {\n    const { data } = await getRequest(\n      `youtube/videosByCountry/${codeCountry}?limit=${limit}&page=${pageParam}`\n    );\n    return { data: data.data, page: pageParam };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getVideosByCountry = async (codeCountry, limit, page) => {\n  try {\n    const { data } = await getRequest(\n      `youtube/videosByCountry/${codeCountry}?limit=${limit}&page=${page}`\n    );\n    return data?.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const acceptVideo = async (videoId) => {\n  try {\n    await putRequest(`youtube/acceptVideo/${videoId}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const refuseVideo = async (videoId) => {\n  try {\n    await putRequest(`youtube/refuseVideo/${videoId}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getVideoAccepted = async ({ pageParam = 1, queryKey }) => {\n  const [codeCountry, limit] = queryKey;\n  try {\n    const { data } = await getRequest(`youtube/VideosAccepted/${codeCountry}`);\n    return { data: data.data, page: pageParam };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getNumberVideosByCountry = async (codeCountry) => {\n  try {\n    const res = await getRequest(`youtube/numberByCodeCountry/${codeCountry}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getVideosbyChannelName = async ({\n  pageParam = 1,\n  queryKey,\n}) => {\n  const [search, limitPage, codeCountry] = queryKey;\n  const { data } = await postRequest(\n    `youtube/searchByChannelName?limit=${limitPage}&page=${pageParam}`,\n    {\n      searchText: search,\n      code: codeCountry,\n    }\n  );\n\n  return { data: data.data, page: pageParam };\n};"]},"metadata":{},"sourceType":"module"}