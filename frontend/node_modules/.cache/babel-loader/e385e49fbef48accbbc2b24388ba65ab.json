{"ast":null,"code":"var _jsxFileName = \"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/superadmin/OrganizationForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport JoditEditor from \"jodit-react\";\nimport Select from \"react-select\";\nimport { getCountryByCode } from \"../../../apis/countryApi\";\nimport { AddOrganization, getAllOrganizationsByPagination, getOrganization, updateOrganization, getOrganizationByType, disabledImplementerOfMonth, disabledDonorOfMonth, enableImplementerOfMonth, enableDonorOfMonth } from \"../../../apis/organizationApi\";\nimport \"../webmaster/OrganizationForm.css\";\nimport fakeLogo from \"../../../assets/images/fakeLogo.png\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport { Checkbox } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddOrganizationForm = () => {\n  _s();\n\n  const history = useHistory(); // const { codeCountry, idSubOrganization } = useParams();\n\n  const {\n    idOrganization\n  } = useParams();\n  const editor = useRef(null);\n  const [content, setContent] = useState(\"\");\n  const [options, setOptions] = useState();\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [organization, setOrganization] = useState();\n  const [isResResData, setIsResData] = useState(false);\n  const [logoPreview, setLogoPreview] = useState(null);\n  const [logo, setLogo] = useState();\n  const [checkedD, setCheckedD] = useState();\n  const [checkedI, setCheckedI] = useState();\n  const config = {\n    readonly: false,\n    placeholder: \"Write Organization description\"\n  };\n  const {\n    register,\n    handleSubmit,\n    setValue //formState: { errors },\n\n  } = useForm();\n  const getDataFromApi = useCallback(async () => {\n    const organizations = await getAllOrganizationsByPagination();\n    setOptions(organizations === null || organizations === void 0 ? void 0 : organizations.map(org => {\n      return {\n        value: org._id,\n        label: org.name\n      };\n    }));\n\n    if (idOrganization !== undefined) {\n      var _Org$head_office_id, _Org$head_office_id2;\n\n      const Org = await getOrganization(idOrganization);\n      setOrganization(Org);\n      setLogoPreview(organization === null || organization === void 0 ? void 0 : organization.logo);\n      setSelectedOption({\n        value: Org === null || Org === void 0 ? void 0 : (_Org$head_office_id = Org.head_office_id) === null || _Org$head_office_id === void 0 ? void 0 : _Org$head_office_id._id,\n        label: Org === null || Org === void 0 ? void 0 : (_Org$head_office_id2 = Org.head_office_id) === null || _Org$head_office_id2 === void 0 ? void 0 : _Org$head_office_id2.name\n      });\n      setContent(Org === null || Org === void 0 ? void 0 : Org.description);\n      setValue(\"name\", Org === null || Org === void 0 ? void 0 : Org.name);\n      setValue(\"organization_size\", Org === null || Org === void 0 ? void 0 : Org.organization_size);\n      setValue(\"youtube_url\", Org === null || Org === void 0 ? void 0 : Org.youtube_url);\n\n      if (Org.twitter_username) {\n        setValue(\"twitter_username\", `https://twitter.com/${Org === null || Org === void 0 ? void 0 : Org.twitter_username}`);\n      }\n    } else {\n      setLogoPreview(fakeLogo);\n    }\n\n    setIsResData(true);\n  }, [idOrganization, setValue, isResResData]);\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const onSubmit = async data => {\n    var _data$twitter_usernam;\n\n    // const country = await getCountryByCode(codeCountry);\n    const orgTypes = await getOrganizationByType(selectedOption === null || selectedOption === void 0 ? void 0 : selectedOption.value);\n    const countries_with_offices = await getOrganizationByType(selectedOption === null || selectedOption === void 0 ? void 0 : selectedOption.value);\n    let formData = new FormData();\n    formData.append(\"organization_types\", JSON.stringify(orgTypes === null || orgTypes === void 0 ? void 0 : orgTypes.organization_types));\n    formData.append(\"countries_with_offices\", JSON.stringify(countries_with_offices === null || countries_with_offices === void 0 ? void 0 : countries_with_offices.countries_with_offices));\n    if (data.twitter_username === \"\") formData.append(\"twitter_username\", null);else formData.append(\"twitter_username\", data === null || data === void 0 ? void 0 : (_data$twitter_usernam = data.twitter_username) === null || _data$twitter_usernam === void 0 ? void 0 : _data$twitter_usernam.substring(20));\n    if (data.youtube_url === \"\") formData.append(\"youtube_url\", null);else formData.append(\"youtube_url\", data.youtube_url);\n    if (data.organization_size === \"\") formData.append(\"organization_size\", null);else formData.append(\"organization_size\", data.organization_size);\n    if (content === \"\") formData.append(\"description\", null);else formData.append(\"description\", content);\n    if (logo != undefined) formData.append(\"logoOrg\", logo);\n    formData.append(\"name\", data.name);\n    console.log(formData);\n\n    if (idOrganization !== undefined) {\n      await updateOrganization(idOrganization, formData);\n    } else {\n      await AddOrganization(formData);\n    } // history.push(`/web-master/organizations/${codeCountry}`);\n\n  };\n\n  const handleChange = selectedOption => {\n    setSelectedOption(selectedOption);\n  };\n\n  const handleChangeCheckboxImplementer = async () => {\n    setCheckedI(!checkedI);\n\n    if (checkedI === true) {\n      await disabledImplementerOfMonth(idOrganization);\n    } else {\n      await enableImplementerOfMonth(idOrganization);\n    }\n  };\n\n  const handleChangeCheckboxDonor = async () => {\n    setCheckedD(!checkedD);\n\n    if (checkedD === true) {\n      await disabledDonorOfMonth(idOrganization);\n    } else {\n      await enableDonorOfMonth(idOrganization);\n    }\n  };\n\n  const imagePreview = e => {\n    setLogoPreview(URL.createObjectURL(e.target.files[0]));\n    setLogo(e.target.files[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children:\n    /*#__PURE__*/\n\n    /*isResResData === true && logoPreview && */\n    _jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row pb-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group m-auto col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"ml-4 logo-file d-inline\",\n            htmlFor: \"logoOrg\",\n            children: logoPreview && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: urlImageAdapter(logoPreview),\n              alt: \"avatar\",\n              width: \"6%\",\n              className: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"form-control-file ml-4 shadow-none logo-file d-none\",\n            id: \"logoOrg\",\n            name: \"logoOrg\",\n            onChange: imagePreview,\n            multiple: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"centralize mt-4 col-12 col-lg-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-org-form\",\n              type: \"text\",\n              id: \"name\",\n              spellCheck: \"false\",\n              ...register(\"name\", {\n                required: \"Name required\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"placeholder\",\n              children: \"Name \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-lg-6 centralize mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-org-form\",\n              type: \"text\",\n              id: \"organization_size\",\n              spellCheck: \"false\",\n              ...register(\"organization_size\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"placeholder\",\n              children: \"Organization Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-lg-6 centralize mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-org-form\",\n              type: \"text\",\n              id: \"youtube_url\",\n              spellCheck: \"false\",\n              ...register(\"youtube_url\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"placeholder\",\n              children: \"Youtube Channel URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-lg-6 centralize mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-org-form\",\n              type: \"text\",\n              id: \"twitter_username\",\n              spellCheck: \"false\",\n              ...register(\"twitter_username\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"placeholder\",\n              children: \"Twitter URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-lg-6 centralize mt-4\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Select Organization type\",\n            value: selectedOption,\n            onChange: handleChange,\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-lg-6 centralize mt-4\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Select the Country office\",\n            value: selectedOption,\n            onChange: handleChange,\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              classname: \"col-12 col-lg-6  mr-5\",\n              checked: checkedD,\n              onChange: handleChangeCheckboxDonor,\n              inputProps: {\n                \"aria-label\": \"primary checkbox\"\n              },\n              style: {\n                color: \"blue\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label  mr-5\",\n              for: \"defaultCheck1\",\n              children: \"Donor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n              classname: \"\",\n              checked: checkedI,\n              onChange: handleChangeCheckboxImplementer,\n              inputProps: {\n                \"aria-label\": \"primary checkbox\"\n              },\n              style: {\n                color: \"blue\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              for: \"defaultCheck1\",\n              children: \"Implementer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 mt-4\",\n          children: /*#__PURE__*/_jsxDEV(JoditEditor, {\n            ref: editor,\n            value: content,\n            config: config,\n            tabIndex: 1,\n            onBlur: newContent => setContent(newContent)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit(onSubmit),\n          type: \"submit\",\n          className: \"btn btn-primary w-100 h-25 submit-login my-5 \",\n          children: idOrganization !== undefined ? \"Save Modifications\" : \"Add Organization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 54\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddOrganizationForm, \"ik9ux89Yp7/upNdNW7JCiVRkV2c=\", false, function () {\n  return [useHistory, useParams, useForm];\n});\n\n_c = AddOrganizationForm;\nexport default AddOrganizationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddOrganizationForm\");","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/superadmin/OrganizationForm.js"],"names":["React","useState","useRef","useEffect","useCallback","useHistory","useParams","useForm","JoditEditor","Select","getCountryByCode","AddOrganization","getAllOrganizationsByPagination","getOrganization","updateOrganization","getOrganizationByType","disabledImplementerOfMonth","disabledDonorOfMonth","enableImplementerOfMonth","enableDonorOfMonth","fakeLogo","urlImageAdapter","Checkbox","AddOrganizationForm","history","idOrganization","editor","content","setContent","options","setOptions","selectedOption","setSelectedOption","organization","setOrganization","isResResData","setIsResData","logoPreview","setLogoPreview","logo","setLogo","checkedD","setCheckedD","checkedI","setCheckedI","config","readonly","placeholder","register","handleSubmit","setValue","getDataFromApi","organizations","map","org","value","_id","label","name","undefined","Org","head_office_id","description","organization_size","youtube_url","twitter_username","onSubmit","data","orgTypes","countries_with_offices","formData","FormData","append","JSON","stringify","organization_types","substring","console","log","handleChange","handleChangeCheckboxImplementer","handleChangeCheckboxDonor","imagePreview","e","URL","createObjectURL","target","files","required","color","newContent"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport JoditEditor from \"jodit-react\";\nimport Select from \"react-select\";\nimport { getCountryByCode } from \"../../../apis/countryApi\";\nimport {\n  AddOrganization,\n  getAllOrganizationsByPagination,\n  getOrganization,\n  updateOrganization,\n  getOrganizationByType,\n  disabledImplementerOfMonth,\n  disabledDonorOfMonth,\n  enableImplementerOfMonth,\n  enableDonorOfMonth,\n} from \"../../../apis/organizationApi\";\nimport \"../webmaster/OrganizationForm.css\";\nimport fakeLogo from \"../../../assets/images/fakeLogo.png\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport { Checkbox } from \"@material-ui/core\";\n\nconst AddOrganizationForm = () => {\n  const history = useHistory();\n  // const { codeCountry, idSubOrganization } = useParams();\n  const { idOrganization } = useParams();\n  const editor = useRef(null);\n  const [content, setContent] = useState(\"\");\n  const [options, setOptions] = useState();\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [organization, setOrganization] = useState();\n  const [isResResData, setIsResData] = useState(false);\n  const [logoPreview, setLogoPreview] = useState(null);\n  const [logo, setLogo] = useState();\n  const [checkedD, setCheckedD] = useState();\n  const [checkedI, setCheckedI] = useState();\n\n  const config = {\n    readonly: false,\n    placeholder: \"Write Organization description\",\n  };\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    //formState: { errors },\n  } = useForm();\n\n  const getDataFromApi = useCallback(async () => {\n    const organizations = await getAllOrganizationsByPagination();\n    setOptions(\n      organizations?.map((org) => {\n        return {\n          value: org._id,\n          label: org.name,\n        };\n      })\n    );\n    if (idOrganization !== undefined) {\n      const Org = await getOrganization(idOrganization);\n      setOrganization(Org);\n      setLogoPreview(organization?.logo);\n\n      setSelectedOption({\n        value: Org?.head_office_id?._id,\n        label: Org?.head_office_id?.name,\n      });\n\n      setContent(Org?.description);\n      setValue(\"name\", Org?.name);\n      setValue(\"organization_size\", Org?.organization_size);\n      setValue(\"youtube_url\", Org?.youtube_url);\n\n      if (Org.twitter_username) {\n        setValue(\n          \"twitter_username\",\n          `https://twitter.com/${Org?.twitter_username}`\n        );\n      }\n    } else {\n      setLogoPreview(fakeLogo);\n    }\n    setIsResData(true);\n  }, [idOrganization, setValue, isResResData]);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const onSubmit = async (data) => {\n    // const country = await getCountryByCode(codeCountry);\n    const orgTypes = await getOrganizationByType(selectedOption?.value);\n    const countries_with_offices = await getOrganizationByType(\n      selectedOption?.value\n    );\n\n    let formData = new FormData();\n\n    formData.append(\n      \"organization_types\",\n      JSON.stringify(orgTypes?.organization_types)\n    );\n    formData.append(\n      \"countries_with_offices\",\n      JSON.stringify(countries_with_offices?.countries_with_offices)\n    );\n\n    if (data.twitter_username === \"\") formData.append(\"twitter_username\", null);\n    else\n      formData.append(\n        \"twitter_username\",\n        data?.twitter_username?.substring(20)\n      );\n\n    if (data.youtube_url === \"\") formData.append(\"youtube_url\", null);\n    else formData.append(\"youtube_url\", data.youtube_url);\n    if (data.organization_size === \"\")\n      formData.append(\"organization_size\", null);\n    else formData.append(\"organization_size\", data.organization_size);\n    if (content === \"\") formData.append(\"description\", null);\n    else formData.append(\"description\", content);\n    if (logo != undefined) formData.append(\"logoOrg\", logo);\n\n    formData.append(\"name\", data.name);\n\n    console.log(formData);\n    if (idOrganization !== undefined) {\n      await updateOrganization(idOrganization, formData);\n    } else {\n      await AddOrganization(formData);\n    }\n\n    // history.push(`/web-master/organizations/${codeCountry}`);\n  };\n\n  const handleChange = (selectedOption) => {\n    setSelectedOption(selectedOption);\n  };\n\n  const handleChangeCheckboxImplementer = async () => {\n    setCheckedI(!checkedI);\n    if (checkedI === true) {\n      await disabledImplementerOfMonth(idOrganization);\n    } else {\n      await enableImplementerOfMonth(idOrganization);\n    }\n  };\n  const handleChangeCheckboxDonor = async () => {\n    setCheckedD(!checkedD);\n    if (checkedD === true) {\n      await disabledDonorOfMonth(idOrganization);\n    } else {\n      await enableDonorOfMonth(idOrganization);\n    }\n  };\n\n  const imagePreview = (e) => {\n    setLogoPreview(URL.createObjectURL(e.target.files[0]));\n    setLogo(e.target.files[0]);\n  };\n\n  return (\n    <div className=\"container\">\n      {\n        /*isResResData === true && logoPreview && */ <form>\n          <div className=\"row pb-5\">\n            <div className=\"form-group m-auto col-12\">\n              <label className=\"ml-4 logo-file d-inline\" htmlFor=\"logoOrg\">\n                {logoPreview && (\n                  <img\n                    src={urlImageAdapter(logoPreview)}\n                    alt=\"avatar\"\n                    width=\"6%\"\n                    className=\"avatar\"\n                  />\n                )}\n              </label>\n              <input\n                type=\"file\"\n                className=\"form-control-file ml-4 shadow-none logo-file d-none\"\n                id=\"logoOrg\"\n                name=\"logoOrg\"\n                onChange={imagePreview}\n                multiple={false}\n              />\n            </div>\n            <div className=\"centralize mt-4 col-12 col-lg-6\">\n              <div className=\"input-block\">\n                <input\n                  className=\"input-org-form\"\n                  type=\"text\"\n                  id=\"name\"\n                  spellCheck=\"false\"\n                  {...register(\"name\", {\n                    required: \"Name required\",\n                  })}\n                />\n                <span className=\"placeholder\">Name </span>\n              </div>\n            </div>\n            <div className=\"col-12 col-lg-6 centralize mt-4\">\n              <div className=\"input-block\">\n                <input\n                  className=\"input-org-form\"\n                  type=\"text\"\n                  id=\"organization_size\"\n                  spellCheck=\"false\"\n                  {...register(\"organization_size\")}\n                />\n                <span className=\"placeholder\">Organization Size</span>\n              </div>\n            </div>\n            <div className=\"col-12 col-lg-6 centralize mt-4\">\n              <div className=\"input-block\">\n                <input\n                  className=\"input-org-form\"\n                  type=\"text\"\n                  id=\"youtube_url\"\n                  spellCheck=\"false\"\n                  {...register(\"youtube_url\")}\n                />\n                <span className=\"placeholder\">Youtube Channel URL</span>\n              </div>\n            </div>\n            <div className=\"col-12 col-lg-6 centralize mt-4\">\n              <div className=\"input-block\">\n                <input\n                  className=\"input-org-form\"\n                  type=\"text\"\n                  id=\"twitter_username\"\n                  spellCheck=\"false\"\n                  {...register(\"twitter_username\")}\n                />\n                <span className=\"placeholder\">Twitter URL</span>\n              </div>\n            </div>\n            <div className=\"col-12 col-lg-6 centralize mt-4\">\n              <Select\n                placeholder=\"Select Organization type\"\n                value={selectedOption}\n                onChange={handleChange}\n                options={options}\n              />\n            </div>{\" \"}\n            <div className=\"col-12 col-lg-6 centralize mt-4\">\n              <Select\n                placeholder=\"Select the Country office\"\n                value={selectedOption}\n                onChange={handleChange}\n                options={options}\n              />\n            </div>\n            <div>\n              {/* <h5> imp</h5> */}\n              <div className=\"form-check mt-4\">\n                <Checkbox\n                  classname=\"col-12 col-lg-6  mr-5\"\n                  checked={checkedD}\n                  onChange={handleChangeCheckboxDonor}\n                  inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                  style={{ color: \"blue\" }}\n                />\n                <label className=\"form-check-label  mr-5\" for=\"defaultCheck1\">\n                  Donor\n                </label>\n\n                <Checkbox\n                  classname=\"\"\n                  checked={checkedI}\n                  onChange={handleChangeCheckboxImplementer}\n                  inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                  style={{ color: \"blue\" }}\n                />\n                <label className=\"form-check-label\" for=\"defaultCheck1\">\n                  Implementer\n                </label>\n              </div>\n            </div>\n            <div className=\"col-12 mt-4\">\n              <JoditEditor\n                ref={editor}\n                value={content}\n                config={config}\n                tabIndex={1}\n                onBlur={(newContent) => setContent(newContent)}\n              />\n            </div>\n            <button\n              onClick={handleSubmit(onSubmit)}\n              type=\"submit\"\n              className=\"btn btn-primary w-100 h-25 submit-login my-5 \"\n            >\n              {idOrganization !== undefined\n                ? \"Save Modifications\"\n                : \"Add Organization\"}\n            </button>\n          </div>\n        </form>\n      }\n    </div>\n  );\n};\n\nexport default AddOrganizationForm;\n"]},"metadata":{},"sourceType":"module"}