{"ast":null,"code":"var _jsxFileName = \"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/TechnicalDetailsCanvas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { addImpactApi, deleteGraphApi, deleteImpactApi, getImpactsByProject, updateImpactApi } from \"apis/impactApi\";\nimport MultiSelectGraph from \"pages/webmaster/MultiSelectGraph\";\nimport Graph from \"react-graph-vis\";\nimport Modal from \"react-modal\";\nimport Select from \"react-select\";\nimport { useParams } from \"react-router-dom\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { addOutComeApi, deleteOutComeApi, getOutComeApi, updateOutcomeApi } from \"apis/outComeApi\";\nimport { addOutPutApi, deleteOutPutApi, getOutPutApi, updateOutputApi } from \"apis/outPutApi\";\nimport { addActivityApi, deleteActivityApi, getActivityApi, updateActivityApi } from \"apis/activityApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\n\nfunction TechnicalDetailsCanvas() {\n  _s();\n\n  var _graph$nodes4;\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [editModalIsOpen, setEditModalIsOpen] = useState(false);\n  const [selectedType, setSelectedType] = useState(null);\n  const [displayNodeType, setDisplayNodeType] = useState(null);\n  const [parentNode, setParantNode] = useState([]);\n  const [count, setCount] = useState(200);\n  const [name, setName] = useState(\"\");\n  const [selectedParents, setSelectedParents] = useState(\"\");\n  const [selectedNode, setSelectedNode] = useState();\n  const [refresh, setRefresh] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [eventNodes, setEventNode] = useState();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [graph, setGraph] = useState({\n    nodes: [],\n    edges: []\n  });\n  const divRef = useRef(null);\n  const sm = useMediaQuery({\n    query: \"(max-width: 700px)\"\n  });\n  const customStyles = {\n    content: {\n      top: \"50%\",\n      left: \"50%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      marginRight: \"-50%\",\n      transform: \"translate(-50%, -50%)\",\n      width: sm ? \"75%\" : \"60%\",\n      height: \"75%\"\n    }\n  };\n  const {\n    idProject\n  } = useParams();\n  const getDataFromApi = useCallback(async () => {\n    const {\n      impacts\n    } = await getImpactsByProject(idProject);\n    const impactsIds = impacts === null || impacts === void 0 ? void 0 : impacts.map(impact => impact === null || impact === void 0 ? void 0 : impact._id);\n    const {\n      outcomes\n    } = await getOutComeApi(impactsIds);\n    const outcomesIds = outcomes === null || outcomes === void 0 ? void 0 : outcomes.map(outcome => outcome === null || outcome === void 0 ? void 0 : outcome._id);\n    const {\n      outputs\n    } = await getOutPutApi(outcomesIds);\n    const outputsIds = outputs === null || outputs === void 0 ? void 0 : outputs.map(output => output === null || output === void 0 ? void 0 : output._id);\n    const {\n      activities\n    } = await getActivityApi(outputsIds);\n    let nodes = [];\n    let edges = [];\n    impacts === null || impacts === void 0 ? void 0 : impacts.map(impact => {\n      nodes.push({ ...impact,\n        ...{\n          id: impact === null || impact === void 0 ? void 0 : impact._id,\n          level: 0,\n          margin: 20,\n          shape: \"box\",\n          color: \"#34495E\",\n          font: {\n            color: \"white\"\n          }\n        }\n      });\n    });\n    outcomes === null || outcomes === void 0 ? void 0 : outcomes.map(outcome => {\n      nodes.push({ ...outcome,\n        ...{\n          id: outcome === null || outcome === void 0 ? void 0 : outcome._id,\n          level: 1,\n          margin: 20,\n          shape: \"box\",\n          color: \"#3f51b5\",\n          font: {\n            color: \"white\"\n          }\n        }\n      });\n    });\n    outcomes === null || outcomes === void 0 ? void 0 : outcomes.map(outcome => {\n      var _outcome$impacts;\n\n      outcome === null || outcome === void 0 ? void 0 : (_outcome$impacts = outcome.impacts) === null || _outcome$impacts === void 0 ? void 0 : _outcome$impacts.map(impactId => {\n        edges.push({\n          from: impactId,\n          to: outcome === null || outcome === void 0 ? void 0 : outcome._id\n        });\n      });\n    });\n    outputs === null || outputs === void 0 ? void 0 : outputs.map(output => {\n      nodes.push({ ...output,\n        ...{\n          id: output === null || output === void 0 ? void 0 : output._id,\n          level: 2,\n          margin: 20,\n          shape: \"box\",\n          color: \"#1ABC9C\",\n          font: {\n            color: \"white\"\n          }\n        }\n      });\n    });\n    outputs === null || outputs === void 0 ? void 0 : outputs.map(output => {\n      var _output$outComes;\n\n      output === null || output === void 0 ? void 0 : (_output$outComes = output.outComes) === null || _output$outComes === void 0 ? void 0 : _output$outComes.map(outcomeId => {\n        edges.push({\n          from: outcomeId,\n          to: output === null || output === void 0 ? void 0 : output._id\n        });\n      });\n    });\n    console.log(activities, \"activities\");\n    activities === null || activities === void 0 ? void 0 : activities.map(activity => {\n      nodes.push({ ...activity,\n        ...{\n          id: activity === null || activity === void 0 ? void 0 : activity._id,\n          level: 3,\n          margin: 20,\n          shape: \"box\",\n          color: \"#DC7633\",\n          font: {\n            color: \"white\"\n          }\n        }\n      });\n    });\n    activities === null || activities === void 0 ? void 0 : activities.map(activity => {\n      var _activity$outPuts;\n\n      activity === null || activity === void 0 ? void 0 : (_activity$outPuts = activity.outPuts) === null || _activity$outPuts === void 0 ? void 0 : _activity$outPuts.map(outputId => {\n        edges.push({\n          from: outputId,\n          to: activity === null || activity === void 0 ? void 0 : activity._id\n        });\n      });\n    });\n    setGraph({ ...graph,\n      nodes: nodes,\n      edges: edges\n    });\n  }, []);\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi, refresh]);\n  const options = {\n    layout: {\n      hierarchical: true\n    },\n    edges: {\n      color: \"#000000\"\n    },\n    interaction: {\n      zoomView: false\n    },\n    physics: {\n      forceAtlas2Based: {\n        gravitationalConstant: -26,\n        centralGravity: 0.005,\n        springLength: 230,\n        springConstant: 0.18\n      },\n      maxVelocity: 146,\n      solver: \"forceAtlas2Based\",\n      timestep: 0.35,\n      stabilization: {\n        enabled: true,\n        iterations: 2000,\n        updateInterval: 25\n      }\n    },\n    height: \"500px\"\n  };\n\n  const initialiseGraph = () => {\n    setGraph({\n      nodes: [],\n      edges: []\n    });\n  };\n\n  const events = {\n    select: event => {\n      var _graph$nodes;\n\n      var {\n        nodes,\n        edges\n      } = event;\n      const selected = (_graph$nodes = graph.nodes) === null || _graph$nodes === void 0 ? void 0 : _graph$nodes.filter(node => {\n        if ((node === null || node === void 0 ? void 0 : node.id) == nodes) return true;\n        return false;\n      });\n      setSelectedNode(selected[0]);\n      setOpenDialog(true);\n      divRef.current.style.position = \"absolute\";\n      divRef.current.style.left = event.pointer.DOM.x + 60 + \"px\";\n      divRef.current.style.top = event.pointer.DOM.y + 125 + \"px\";\n      setEventNode(nodes);\n    }\n  };\n\n  const deleteNode = async () => {\n    setOpenDialog(false);\n\n    if (window.confirm(`Are you sure you wish to delete ${selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.label} ?`)) {\n      if ((selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.type) === \"impact\") await deleteImpactApi(selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.id);else if ((selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.type) === \"outcome\") await deleteOutComeApi(selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.id);else if ((selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.type) === \"output\") await deleteOutPutApi(selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.id);else if ((selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.type) === \"activity\") await deleteActivityApi(selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.id);\n      setRefresh(!refresh);\n    }\n  };\n\n  const editNode = () => {\n    var nodes = eventNodes;\n    setOpenDialog(false);\n    setEditModalIsOpen(true);\n    setName(selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.label);\n    const selectType = typeOptions.filter(type => {\n      if ((type === null || type === void 0 ? void 0 : type.value) === (selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.type)) return true;\n      return false;\n    });\n    setSelectedType(selectType[0]);\n\n    if ((selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.type) !== \"impact\") {\n      let parents = [];\n\n      if ((selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.type) === \"outcome\") {\n        parents = graph === null || graph === void 0 ? void 0 : graph.nodes.filter(node => {\n          var _selectedNode$impacts;\n\n          if ((selectedNode === null || selectedNode === void 0 ? void 0 : (_selectedNode$impacts = selectedNode.impacts) === null || _selectedNode$impacts === void 0 ? void 0 : _selectedNode$impacts.includes(node === null || node === void 0 ? void 0 : node.id)) === true && (node === null || node === void 0 ? void 0 : node.type) === \"impact\") return true;\n          return false;\n        }).map(node => {\n          return {\n            value: node === null || node === void 0 ? void 0 : node.id,\n            label: node === null || node === void 0 ? void 0 : node.label\n          };\n        });\n      } else if ((selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.type) === \"output\") {\n        parents = graph === null || graph === void 0 ? void 0 : graph.nodes.filter(node => {\n          var _selectedNode$outCome;\n\n          if ((selectedNode === null || selectedNode === void 0 ? void 0 : (_selectedNode$outCome = selectedNode.outComes) === null || _selectedNode$outCome === void 0 ? void 0 : _selectedNode$outCome.includes(node === null || node === void 0 ? void 0 : node.id)) === true && (node === null || node === void 0 ? void 0 : node.type) === \"outcome\") return true;\n          return false;\n        }).map(node => {\n          return {\n            value: node === null || node === void 0 ? void 0 : node.id,\n            label: node === null || node === void 0 ? void 0 : node.label\n          };\n        });\n      } else if ((selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.type) === \"activity\") {\n        parents = graph === null || graph === void 0 ? void 0 : graph.nodes.filter(node => {\n          var _selectedNode$outPuts;\n\n          if ((selectedNode === null || selectedNode === void 0 ? void 0 : (_selectedNode$outPuts = selectedNode.outPuts) === null || _selectedNode$outPuts === void 0 ? void 0 : _selectedNode$outPuts.includes(node === null || node === void 0 ? void 0 : node.id)) === true && (node === null || node === void 0 ? void 0 : node.type) === \"output\") return true;\n          return false;\n        }).map(node => {\n          return {\n            value: node === null || node === void 0 ? void 0 : node.id,\n            label: node === null || node === void 0 ? void 0 : node.label\n          };\n        });\n      }\n\n      setSelectedParents(parents);\n    }\n\n    setEdit(true);\n    setModalIsOpen(true);\n  };\n\n  function closeModal() {\n    setModalIsOpen(false);\n    setEdit(false);\n    setName(\"\");\n    setSelectedType(null);\n    setSelectedParents([]);\n  }\n\n  function closeEditModal() {\n    setEditModalIsOpen(false);\n  }\n\n  const typeOptions = [{\n    value: \"impact\",\n    label: \"Impact\"\n  }, {\n    value: \"outcome\",\n    label: \"OutCome\"\n  }, {\n    value: \"output\",\n    label: \"OutPut\"\n  }, {\n    value: \"activity\",\n    label: \"Activity\"\n  }];\n\n  const handleTypeChange = selectedOption => {\n    setSelectedType(selectedOption);\n  };\n\n  const filtredTypes = typenode => {\n    var _graph$nodes2;\n\n    let type;\n    if (typenode === \"outcome\") type = \"impact\";\n    if (typenode === \"output\") type = \"outcome\";\n    if (typenode === \"activity\") type = \"output\";\n    const nodeType = graph === null || graph === void 0 ? void 0 : (_graph$nodes2 = graph.nodes) === null || _graph$nodes2 === void 0 ? void 0 : _graph$nodes2.filter(node => {\n      if ((node === null || node === void 0 ? void 0 : node.type) === type) return true;\n      return false;\n    });\n    return nodeType.map(nodetyp => {\n      return {\n        value: nodetyp === null || nodetyp === void 0 ? void 0 : nodetyp.id,\n        label: nodetyp === null || nodetyp === void 0 ? void 0 : nodetyp.label\n      };\n    });\n  };\n\n  const addNode = async parents => {\n    let level = 4;\n    let color = \"black\";\n    let node = {}; // if (edit) {\n    //   if (selectedNode?.type === \"impact\") {\n    //     await deleteImpactApi(selectedNode?.id);\n    //   }\n    // }\n\n    if ((selectedType === null || selectedType === void 0 ? void 0 : selectedType.value) === \"impact\") {\n      level = 0;\n      color = \"#34495E\";\n      const impact = {\n        label: name,\n        project: idProject\n      }; //initialiseGraph();\n\n      if (edit) {\n        node = await updateImpactApi(selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.id, impact);\n      } else {\n        node = await addImpactApi(impact);\n      } //setRefresh(!refresh);\n\n    } else if ((selectedType === null || selectedType === void 0 ? void 0 : selectedType.value) === \"outcome\") {\n      level = 1;\n      color = \"#3f51b5\";\n      const impacts = selectedParents === null || selectedParents === void 0 ? void 0 : selectedParents.map(parent => parent === null || parent === void 0 ? void 0 : parent.value);\n      const outcome = {\n        label: name,\n        impacts\n      }; //initialiseGraph();\n\n      if (edit) {\n        node = await updateOutcomeApi(selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.id, outcome);\n      } else {\n        node = await addOutComeApi(outcome);\n      } //setRefresh(!refresh);\n\n    }\n\n    if ((selectedType === null || selectedType === void 0 ? void 0 : selectedType.value) === \"output\") {\n      level = 2;\n      color = \"#1ABC9C\";\n      const outComes = selectedParents === null || selectedParents === void 0 ? void 0 : selectedParents.map(parent => parent === null || parent === void 0 ? void 0 : parent.value);\n      const output = {\n        label: name,\n        outComes\n      }; //initialiseGraph();\n\n      if (edit) {\n        node = await updateOutputApi(selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.id, output);\n      } else {\n        node = await addOutPutApi(output);\n      } //setRefresh(!refresh);\n\n    }\n\n    if ((selectedType === null || selectedType === void 0 ? void 0 : selectedType.value) === \"activity\") {\n      level = 3;\n      color = \"#DC7633\";\n      const outPuts = selectedParents === null || selectedParents === void 0 ? void 0 : selectedParents.map(parent => parent === null || parent === void 0 ? void 0 : parent.value);\n      const activity = {\n        label: name,\n        outPuts\n      }; //initialiseGraph();\n\n      if (edit) {\n        node = await updateActivityApi(selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.id, activity);\n      } else {\n        node = await addActivityApi(activity);\n      } //setRefresh(!refresh);\n\n    }\n\n    let edges = [];\n\n    if ((selectedType === null || selectedType === void 0 ? void 0 : selectedType.value) !== \"impact\") {\n      edges = selectedParents === null || selectedParents === void 0 ? void 0 : selectedParents.map(parent => {\n        var _node;\n\n        return {\n          from: parent === null || parent === void 0 ? void 0 : parent.value,\n          to: (_node = node) === null || _node === void 0 ? void 0 : _node._id\n        };\n      });\n    }\n\n    if (edit) {\n      var _graph$nodes3, _node2;\n\n      const newNodes = graph === null || graph === void 0 ? void 0 : (_graph$nodes3 = graph.nodes) === null || _graph$nodes3 === void 0 ? void 0 : _graph$nodes3.filter(node => {\n        if ((node === null || node === void 0 ? void 0 : node.id) === (selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.id)) return false;\n        return true;\n      });\n      let newEdges = graph === null || graph === void 0 ? void 0 : graph.edges;\n\n      if ((selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.type) !== \"impact\") {\n        var _graph$edges;\n\n        newEdges = graph === null || graph === void 0 ? void 0 : (_graph$edges = graph.edges) === null || _graph$edges === void 0 ? void 0 : _graph$edges.filter(edge => {\n          if ((edge === null || edge === void 0 ? void 0 : edge.to) === (selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.id)) return false;\n          return true;\n        });\n      }\n\n      setGraph({ ...graph,\n        nodes: [...newNodes, {\n          id: (_node2 = node) === null || _node2 === void 0 ? void 0 : _node2._id,\n          level: level,\n          label: name,\n          type: selectedType === null || selectedType === void 0 ? void 0 : selectedType.value,\n          title: \"node 4 tootip text\",\n          margin: 20,\n          shape: \"box\",\n          color: color,\n          font: {\n            color: \"white\"\n          },\n          ...node\n        }],\n        edges: [...newEdges, ...edges]\n      });\n    } else {\n      var _node3;\n\n      setGraph({ ...graph,\n        nodes: [...(graph === null || graph === void 0 ? void 0 : graph.nodes), {\n          id: (_node3 = node) === null || _node3 === void 0 ? void 0 : _node3._id,\n          level: level,\n          label: name,\n          type: selectedType === null || selectedType === void 0 ? void 0 : selectedType.value,\n          title: \"node 4 tootip text\",\n          margin: 20,\n          shape: \"box\",\n          color: color,\n          font: {\n            color: \"white\"\n          },\n          ...node\n        }],\n        edges: [...(graph === null || graph === void 0 ? void 0 : graph.edges), ...edges]\n      });\n    }\n  };\n\n  const resetGraph = async () => {\n    if (window.confirm(`Are you sure you wish to reset the graph`)) {\n      setGraph({\n        nodes: [],\n        edges: []\n      });\n      await deleteGraphApi(idProject);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success shadow-none\",\n      onClick: () => setModalIsOpen(true),\n      children: \"Add Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 7\n    }, this), (graph === null || graph === void 0 ? void 0 : (_graph$nodes4 = graph.nodes) === null || _graph$nodes4 === void 0 ? void 0 : _graph$nodes4.length) > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-danger shadow-none mx-2\",\n      onClick: resetGraph,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 9\n    }, this), openDialog && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: divRef,\n      style: {\n        zIndex: \"2\",\n        padding: \"20px\",\n        backgroundColor: \"white\"\n      },\n      className: \"border\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteNode,\n        className: \"btn btn-danger border shadow-none my-1 w-100\",\n        children: [\"Delete \", selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.label]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-warning border shadow-none w-100\",\n        onClick: editNode,\n        children: [\"Edit \", selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.label]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn border shadow-none w-100 my-1\",\n        onClick: () => setOpenDialog(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Graph, {\n      graph: graph,\n      options: options,\n      events: events,\n      getNetwork: network => {//  if you want access to vis.js network api you can set the state in a parent component using this property\n      }\n    }, Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      style: customStyles,\n      contentLabel: \"Example Modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\" \", edit ? \"Edit Node\" : \"Add Node\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mb-2\",\n            children: \"Node Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: name,\n            onChange: e => setName(e.target.value),\n            type: \"text\",\n            class: \"form-control\",\n            placeholder: \"Node Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 11\n        }, this), !edit && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mb-2\",\n            children: \"Node Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedType,\n            onChange: handleTypeChange,\n            options: typeOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 13\n        }, this), (selectedType === null || selectedType === void 0 ? void 0 : selectedType.value) !== undefined && (selectedType === null || selectedType === void 0 ? void 0 : selectedType.value) !== \"impact\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mb-2\",\n            children: \"Parent Nodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(MultiSelectGraph, {\n            selectedValues: selectedParents,\n            higherLevelNode: filtredTypes(selectedType === null || selectedType === void 0 ? void 0 : selectedType.value),\n            addNode: addNode,\n            setModalIsOpen: setModalIsOpen,\n            setSelectedParents: setSelectedParents\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [edit ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success mx-3\",\n            onClick: () => {\n              addNode(selectedParents);\n              setModalIsOpen(false);\n              setName(\"\");\n              setSelectedType(undefined);\n              setSelectedParents(undefined);\n            },\n            children: \"Edit Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success shadow-none mx-3\",\n            onClick: () => {\n              addNode(selectedParents);\n              setModalIsOpen(false);\n              setName(\"\");\n              setSelectedType(undefined);\n              setSelectedParents(undefined);\n            },\n            children: \"Add Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary shadow-none\",\n            onClick: closeModal,\n            children: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 483,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TechnicalDetailsCanvas, \"FWnRmJ73ImX4FIh2Jmr55Kja1L8=\", false, function () {\n  return [useMediaQuery, useParams];\n});\n\n_c = TechnicalDetailsCanvas;\nexport default TechnicalDetailsCanvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"TechnicalDetailsCanvas\");","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/TechnicalDetailsCanvas.js"],"names":["React","useState","useEffect","useCallback","useRef","addImpactApi","deleteGraphApi","deleteImpactApi","getImpactsByProject","updateImpactApi","MultiSelectGraph","Graph","Modal","Select","useParams","useMediaQuery","addOutComeApi","deleteOutComeApi","getOutComeApi","updateOutcomeApi","addOutPutApi","deleteOutPutApi","getOutPutApi","updateOutputApi","addActivityApi","deleteActivityApi","getActivityApi","updateActivityApi","setAppElement","TechnicalDetailsCanvas","modalIsOpen","setModalIsOpen","editModalIsOpen","setEditModalIsOpen","selectedType","setSelectedType","displayNodeType","setDisplayNodeType","parentNode","setParantNode","count","setCount","name","setName","selectedParents","setSelectedParents","selectedNode","setSelectedNode","refresh","setRefresh","edit","setEdit","eventNodes","setEventNode","openDialog","setOpenDialog","graph","setGraph","nodes","edges","divRef","sm","query","customStyles","content","top","left","right","bottom","marginRight","transform","width","height","idProject","getDataFromApi","impacts","impactsIds","map","impact","_id","outcomes","outcomesIds","outcome","outputs","outputsIds","output","activities","push","id","level","margin","shape","color","font","impactId","from","to","outComes","outcomeId","console","log","activity","outPuts","outputId","options","layout","hierarchical","interaction","zoomView","physics","forceAtlas2Based","gravitationalConstant","centralGravity","springLength","springConstant","maxVelocity","solver","timestep","stabilization","enabled","iterations","updateInterval","initialiseGraph","events","select","event","selected","filter","node","current","style","position","pointer","DOM","x","y","deleteNode","window","confirm","label","type","editNode","selectType","typeOptions","value","parents","includes","closeModal","closeEditModal","handleTypeChange","selectedOption","filtredTypes","typenode","nodeType","nodetyp","addNode","project","parent","newNodes","newEdges","edge","title","resetGraph","length","zIndex","padding","backgroundColor","network","Math","random","e","target","undefined"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport {\n  addImpactApi,\n  deleteGraphApi,\n  deleteImpactApi,\n  getImpactsByProject,\n  updateImpactApi,\n} from \"apis/impactApi\";\nimport MultiSelectGraph from \"pages/webmaster/MultiSelectGraph\";\nimport Graph from \"react-graph-vis\";\nimport Modal from \"react-modal\";\nimport Select from \"react-select\";\nimport { useParams } from \"react-router-dom\";\nimport { useMediaQuery } from \"react-responsive\";\nimport {\n  addOutComeApi,\n  deleteOutComeApi,\n  getOutComeApi,\n  updateOutcomeApi,\n} from \"apis/outComeApi\";\nimport {\n  addOutPutApi,\n  deleteOutPutApi,\n  getOutPutApi,\n  updateOutputApi,\n} from \"apis/outPutApi\";\nimport {\n  addActivityApi,\n  deleteActivityApi,\n  getActivityApi,\n  updateActivityApi,\n} from \"apis/activityApi\";\n\nModal.setAppElement(\"#root\");\n\nfunction TechnicalDetailsCanvas() {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [editModalIsOpen, setEditModalIsOpen] = useState(false);\n  const [selectedType, setSelectedType] = useState(null);\n  const [displayNodeType, setDisplayNodeType] = useState(null);\n  const [parentNode, setParantNode] = useState([]);\n  const [count, setCount] = useState(200);\n  const [name, setName] = useState(\"\");\n  const [selectedParents, setSelectedParents] = useState(\"\");\n  const [selectedNode, setSelectedNode] = useState();\n  const [refresh, setRefresh] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [eventNodes, setEventNode] = useState();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [graph, setGraph] = useState({\n    nodes: [],\n    edges: [],\n  });\n\n  const divRef = useRef(null);\n\n  const sm = useMediaQuery({\n    query: \"(max-width: 700px)\",\n  });\n\n  const customStyles = {\n    content: {\n      top: \"50%\",\n      left: \"50%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      marginRight: \"-50%\",\n      transform: \"translate(-50%, -50%)\",\n      width: sm ? \"75%\" : \"60%\",\n      height: \"75%\",\n    },\n  };\n\n  const { idProject } = useParams();\n\n  const getDataFromApi = useCallback(async () => {\n    const { impacts } = await getImpactsByProject(idProject);\n    const impactsIds = impacts?.map((impact) => impact?._id);\n    const { outcomes } = await getOutComeApi(impactsIds);\n    const outcomesIds = outcomes?.map((outcome) => outcome?._id);\n    const { outputs } = await getOutPutApi(outcomesIds);\n    const outputsIds = outputs?.map((output) => output?._id);\n    const { activities } = await getActivityApi(outputsIds);\n\n    let nodes = [];\n    let edges = [];\n    impacts?.map((impact) => {\n      nodes.push({\n        ...impact,\n        ...{\n          id: impact?._id,\n          level: 0,\n          margin: 20,\n          shape: \"box\",\n          color: \"#34495E\",\n          font: {\n            color: \"white\",\n          },\n        },\n      });\n    });\n    outcomes?.map((outcome) => {\n      nodes.push({\n        ...outcome,\n        ...{\n          id: outcome?._id,\n          level: 1,\n          margin: 20,\n          shape: \"box\",\n          color: \"#3f51b5\",\n          font: {\n            color: \"white\",\n          },\n        },\n      });\n    });\n\n    outcomes?.map((outcome) => {\n      outcome?.impacts?.map((impactId) => {\n        edges.push({ from: impactId, to: outcome?._id });\n      });\n    });\n\n    outputs?.map((output) => {\n      nodes.push({\n        ...output,\n        ...{\n          id: output?._id,\n          level: 2,\n          margin: 20,\n          shape: \"box\",\n          color: \"#1ABC9C\",\n          font: {\n            color: \"white\",\n          },\n        },\n      });\n    });\n\n    outputs?.map((output) => {\n      output?.outComes?.map((outcomeId) => {\n        edges.push({ from: outcomeId, to: output?._id });\n      });\n    });\n    console.log(activities, \"activities\");\n    activities?.map((activity) => {\n      nodes.push({\n        ...activity,\n        ...{\n          id: activity?._id,\n          level: 3,\n          margin: 20,\n          shape: \"box\",\n          color: \"#DC7633\",\n          font: {\n            color: \"white\",\n          },\n        },\n      });\n    });\n\n    activities?.map((activity) => {\n      activity?.outPuts?.map((outputId) => {\n        edges.push({ from: outputId, to: activity?._id });\n      });\n    });\n    setGraph({\n      ...graph,\n      nodes: nodes,\n      edges: edges,\n    });\n  }, []);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi, refresh]);\n\n  const options = {\n    layout: {\n      hierarchical: true,\n    },\n    edges: {\n      color: \"#000000\",\n    },\n    interaction: {\n      zoomView: false,\n    },\n    physics: {\n      forceAtlas2Based: {\n        gravitationalConstant: -26,\n        centralGravity: 0.005,\n        springLength: 230,\n        springConstant: 0.18,\n      },\n      maxVelocity: 146,\n      solver: \"forceAtlas2Based\",\n      timestep: 0.35,\n      stabilization: {\n        enabled: true,\n        iterations: 2000,\n        updateInterval: 25,\n      },\n    },\n\n    height: \"500px\",\n  };\n\n  const initialiseGraph = () => {\n    setGraph({\n      nodes: [],\n      edges: [],\n    });\n  };\n\n  const events = {\n    select: (event) => {\n      var { nodes, edges } = event;\n      const selected = graph.nodes?.filter((node) => {\n        if (node?.id == nodes) return true;\n        return false;\n      });\n      setSelectedNode(selected[0]);\n      setOpenDialog(true);\n      divRef.current.style.position = \"absolute\";\n      divRef.current.style.left = event.pointer.DOM.x + 60 + \"px\";\n      divRef.current.style.top = event.pointer.DOM.y + 125 + \"px\";\n\n      setEventNode(nodes);\n    },\n  };\n  const deleteNode = async () => {\n    setOpenDialog(false);\n    if (\n      window.confirm(`Are you sure you wish to delete ${selectedNode?.label} ?`)\n    ) {\n      if (selectedNode?.type === \"impact\")\n        await deleteImpactApi(selectedNode?.id);\n      else if (selectedNode?.type === \"outcome\")\n        await deleteOutComeApi(selectedNode?.id);\n      else if (selectedNode?.type === \"output\")\n        await deleteOutPutApi(selectedNode?.id);\n      else if (selectedNode?.type === \"activity\")\n        await deleteActivityApi(selectedNode?.id);\n      setRefresh(!refresh);\n    }\n  };\n  const editNode = () => {\n    var nodes = eventNodes;\n    setOpenDialog(false);\n    setEditModalIsOpen(true);\n\n    setName(selectedNode?.label);\n    const selectType = typeOptions.filter((type) => {\n      if (type?.value === selectedNode?.type) return true;\n      return false;\n    });\n    setSelectedType(selectType[0]);\n    if (selectedNode?.type !== \"impact\") {\n      let parents = [];\n      if (selectedNode?.type === \"outcome\") {\n        parents = graph?.nodes\n          .filter((node) => {\n            if (\n              selectedNode?.impacts?.includes(node?.id) === true &&\n              node?.type === \"impact\"\n            )\n              return true;\n            return false;\n          })\n          .map((node) => {\n            return { value: node?.id, label: node?.label };\n          });\n      } else if (selectedNode?.type === \"output\") {\n        parents = graph?.nodes\n          .filter((node) => {\n            if (\n              selectedNode?.outComes?.includes(node?.id) === true &&\n              node?.type === \"outcome\"\n            )\n              return true;\n            return false;\n          })\n          .map((node) => {\n            return { value: node?.id, label: node?.label };\n          });\n      } else if (selectedNode?.type === \"activity\") {\n        parents = graph?.nodes\n          .filter((node) => {\n            if (\n              selectedNode?.outPuts?.includes(node?.id) === true &&\n              node?.type === \"output\"\n            )\n              return true;\n            return false;\n          })\n          .map((node) => {\n            return { value: node?.id, label: node?.label };\n          });\n      }\n\n      setSelectedParents(parents);\n    }\n    setEdit(true);\n    setModalIsOpen(true);\n  };\n\n  function closeModal() {\n    setModalIsOpen(false);\n    setEdit(false);\n    setName(\"\");\n    setSelectedType(null);\n    setSelectedParents([]);\n  }\n  function closeEditModal() {\n    setEditModalIsOpen(false);\n  }\n  const typeOptions = [\n    { value: \"impact\", label: \"Impact\" },\n    { value: \"outcome\", label: \"OutCome\" },\n    { value: \"output\", label: \"OutPut\" },\n    { value: \"activity\", label: \"Activity\" },\n  ];\n\n  const handleTypeChange = (selectedOption) => {\n    setSelectedType(selectedOption);\n  };\n\n  const filtredTypes = (typenode) => {\n    let type;\n    if (typenode === \"outcome\") type = \"impact\";\n    if (typenode === \"output\") type = \"outcome\";\n    if (typenode === \"activity\") type = \"output\";\n    const nodeType = graph?.nodes?.filter((node) => {\n      if (node?.type === type) return true;\n      return false;\n    });\n    return nodeType.map((nodetyp) => {\n      return {\n        value: nodetyp?.id,\n        label: nodetyp?.label,\n      };\n    });\n  };\n\n  const addNode = async (parents) => {\n    let level = 4;\n    let color = \"black\";\n    let node = {};\n    // if (edit) {\n    //   if (selectedNode?.type === \"impact\") {\n    //     await deleteImpactApi(selectedNode?.id);\n    //   }\n    // }\n    if (selectedType?.value === \"impact\") {\n      level = 0;\n      color = \"#34495E\";\n      const impact = { label: name, project: idProject };\n      //initialiseGraph();\n      if (edit) {\n        node = await updateImpactApi(selectedNode?.id, impact);\n      } else {\n        node = await addImpactApi(impact);\n      }\n\n      //setRefresh(!refresh);\n    } else if (selectedType?.value === \"outcome\") {\n      level = 1;\n      color = \"#3f51b5\";\n      const impacts = selectedParents?.map((parent) => parent?.value);\n      const outcome = { label: name, impacts };\n      //initialiseGraph();\n      if (edit) {\n        node = await updateOutcomeApi(selectedNode?.id, outcome);\n      } else {\n        node = await addOutComeApi(outcome);\n      }\n\n      //setRefresh(!refresh);\n    }\n    if (selectedType?.value === \"output\") {\n      level = 2;\n      color = \"#1ABC9C\";\n      const outComes = selectedParents?.map((parent) => parent?.value);\n      const output = { label: name, outComes };\n      //initialiseGraph();\n      if (edit) {\n        node = await updateOutputApi(selectedNode?.id, output);\n      } else {\n        node = await addOutPutApi(output);\n      }\n\n      //setRefresh(!refresh);\n    }\n    if (selectedType?.value === \"activity\") {\n      level = 3;\n      color = \"#DC7633\";\n      const outPuts = selectedParents?.map((parent) => parent?.value);\n      const activity = { label: name, outPuts };\n      //initialiseGraph();\n      if (edit) {\n        node = await updateActivityApi(selectedNode?.id, activity);\n      } else {\n        node = await addActivityApi(activity);\n      }\n\n      //setRefresh(!refresh);\n    }\n    let edges = [];\n    if (selectedType?.value !== \"impact\") {\n      edges = selectedParents?.map((parent) => {\n        return { from: parent?.value, to: node?._id };\n      });\n    }\n    if (edit) {\n      const newNodes = graph?.nodes?.filter((node) => {\n        if (node?.id === selectedNode?.id) return false;\n        return true;\n      });\n      let newEdges = graph?.edges;\n      if (selectedNode?.type !== \"impact\") {\n        newEdges = graph?.edges?.filter((edge) => {\n          if (edge?.to === selectedNode?.id) return false;\n          return true;\n        });\n      }\n\n      setGraph({\n        ...graph,\n        nodes: [\n          ...newNodes,\n          {\n            id: node?._id,\n            level: level,\n            label: name,\n            type: selectedType?.value,\n            title: \"node 4 tootip text\",\n            margin: 20,\n            shape: \"box\",\n            color: color,\n            font: {\n              color: \"white\",\n            },\n            ...node,\n          },\n        ],\n        edges: [...newEdges, ...edges],\n      });\n    } else {\n      setGraph({\n        ...graph,\n        nodes: [\n          ...graph?.nodes,\n          {\n            id: node?._id,\n            level: level,\n            label: name,\n            type: selectedType?.value,\n            title: \"node 4 tootip text\",\n            margin: 20,\n            shape: \"box\",\n            color: color,\n            font: {\n              color: \"white\",\n            },\n            ...node,\n          },\n        ],\n        edges: [...graph?.edges, ...edges],\n      });\n    }\n  };\n  const resetGraph = async () => {\n    if (window.confirm(`Are you sure you wish to reset the graph`)) {\n      setGraph({\n        nodes: [],\n        edges: [],\n      });\n      await deleteGraphApi(idProject);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <button\n        className=\"btn btn-success shadow-none\"\n        onClick={() => setModalIsOpen(true)}\n      >\n        Add Node\n      </button>\n      {graph?.nodes?.length > 0 && (\n        <button\n          className=\"btn btn-danger shadow-none mx-2\"\n          onClick={resetGraph}\n        >\n          Reset\n        </button>\n      )}\n      {openDialog && (\n        <div\n          ref={divRef}\n          style={{\n            zIndex: \"2\",\n            padding: \"20px\",\n            backgroundColor: \"white\",\n          }}\n          className=\"border\"\n        >\n          <button\n            onClick={deleteNode}\n            className=\"btn btn-danger border shadow-none my-1 w-100\"\n          >\n            Delete {selectedNode?.label}\n          </button>\n          <button\n            className=\"btn btn-warning border shadow-none w-100\"\n            onClick={editNode}\n          >\n            Edit {selectedNode?.label}\n          </button>\n          <button\n            className=\"btn border shadow-none w-100 my-1\"\n            onClick={() => setOpenDialog(false)}\n          >\n            Close\n          </button>\n        </div>\n      )}\n\n      <Graph\n        key={Math.random()}\n        graph={graph}\n        options={options}\n        events={events}\n        getNetwork={(network) => {\n          //  if you want access to vis.js network api you can set the state in a parent component using this property\n        }}\n      />\n\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Example Modal\"\n      >\n        <div className=\"container my-auto\">\n          <h2> {edit ? \"Edit Node\" : \"Add Node\"}</h2>\n          <div className=\"mt-3\">\n            <label className=\"mb-2\">Node Name</label>\n            <input\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"Node Name\"\n            />\n          </div>\n          {!edit && (\n            <div className=\"mt-3\">\n              <label className=\"mb-2\">Node Type</label>\n              <Select\n                value={selectedType}\n                onChange={handleTypeChange}\n                options={typeOptions}\n              />\n            </div>\n          )}\n          {selectedType?.value !== undefined &&\n            selectedType?.value !== \"impact\" && (\n              <div className=\"mt-3\">\n                <label className=\"mb-2\">Parent Nodes</label>\n                <MultiSelectGraph\n                  selectedValues={selectedParents}\n                  higherLevelNode={filtredTypes(selectedType?.value)}\n                  addNode={addNode}\n                  setModalIsOpen={setModalIsOpen}\n                  setSelectedParents={setSelectedParents}\n                />\n              </div>\n            )}\n\n          <div className=\"mt-3\">\n            {edit ? (\n              <button\n                className=\"btn btn-success mx-3\"\n                onClick={() => {\n                  addNode(selectedParents);\n                  setModalIsOpen(false);\n                  setName(\"\");\n                  setSelectedType(undefined);\n                  setSelectedParents(undefined);\n                }}\n              >\n                Edit Node\n              </button>\n            ) : (\n              <button\n                className=\"btn btn-success shadow-none mx-3\"\n                onClick={() => {\n                  addNode(selectedParents);\n                  setModalIsOpen(false);\n                  setName(\"\");\n                  setSelectedType(undefined);\n                  setSelectedParents(undefined);\n                }}\n              >\n                Add Node\n              </button>\n            )}\n\n            <button\n              className=\"btn btn-secondary shadow-none\"\n              onClick={closeModal}\n            >\n              close\n            </button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nexport default TechnicalDetailsCanvas;\n"]},"metadata":{},"sourceType":"module"}