{"ast":null,"code":"var _jsxFileName = \"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/TableExpert.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport MaterialTable from \"material-table\";\nimport { FcCalendar } from \"react-icons/fc\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport { deleteExpert } from \"apis/userApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TableExpert = () => {\n  _s();\n\n  const orgTableRef = /*#__PURE__*/React.createRef();\n  const history = useHistory();\n  const {\n    codeCountry\n  } = useParams();\n\n  const reloadTableData = () => {\n    orgTableRef.current.onQueryChange();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      tableRef: orgTableRef,\n      title: \"List of experts\",\n      columns: [{\n        field: \"image_url\",\n        title: \"Profil\",\n        render: rowData => /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img-fluid\",\n          src: urlImageAdapter(rowData === null || rowData === void 0 ? void 0 : rowData.interviewImage),\n          style: {\n            verticalAlign: \"middle\",\n            width: \"50px\",\n            height: \"50px\",\n            borderRadius: \"50%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this),\n        cellStyle: {\n          width: \"15%\",\n          textAlign: \"center\"\n        }\n      }, {\n        title: \"Full Name\",\n        field: \"fullname\",\n        cellStyle: {\n          width: \"25%\",\n          textAlign: \"center\"\n        }\n      }, {\n        title: \"Email\",\n        field: \"email\",\n        cellStyle: {\n          width: \"25%\",\n          textAlign: \"center\"\n        }\n      }, {\n        title: \"Phone\",\n        field: \"phone\",\n        cellStyle: {\n          width: \"25%\",\n          textAlign: \"center\"\n        }\n      }, {\n        title: \"Expert of the month\",\n        field: \"expert_of_month\",\n        cellStyle: {\n          width: \"25%\",\n          textAlign: \"center\"\n        }\n      }],\n      data: query => new Promise((resolve, reject) => {\n        let url = `${process.env.REACT_APP_BACKEND}user/byCodeCountryPagination/${codeCountry}?`;\n        url += \"limit=\" + query.pageSize;\n        url += \"&page=\" + (query.page + 1);\n        axios.post(url, {\n          searchText: query.search\n        }).then(result => {\n          resolve({\n            data: result.data.data,\n            page: result.data.page - 1,\n            totalCount: result.data.totalCount\n          });\n        });\n      }),\n      options: {\n        filtering: false,\n        search: true,\n        sorting: false,\n        headerStyle: {\n          backgroundColor: \"#0069d9\",\n          textAlign: \"center\",\n          color: \"white\"\n        },\n        actionsColumnIndex: -1\n      },\n      actions: [{\n        icon: \"refresh\",\n        tooltip: \"Refresh Data\",\n        isFreeAction: true,\n        onClick: () => orgTableRef.current && orgTableRef.current.onQueryChange()\n      }, {\n        icon: () => /*#__PURE__*/_jsxDEV(FcCalendar, {\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this),\n        tooltip: \"Expert of the month\",\n        onClick: (event, interview) => {\n          history.push(`/web-master/add-expert-article/${codeCountry}/${interview === null || interview === void 0 ? void 0 : interview._id}`);\n        }\n      }, {\n        icon: () => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger border-none shadow-none\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this),\n        onClick: async (event, user) => {\n          if (window.confirm(`Are you sure you wish to delete ${user.fullname} ?`)) {\n            try {\n              await deleteExpert(user === null || user === void 0 ? void 0 : user._id);\n              reloadTableData();\n              reloadTableData();\n            } catch (error) {\n              console.log(error);\n            }\n          }\n        }\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TableExpert, \"OHHtikjGZ02fsTP2OGKOZ0ErWbY=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = TableExpert;\nexport default TableExpert;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableExpert\");","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/TableExpert.js"],"names":["React","MaterialTable","FcCalendar","useHistory","useParams","axios","urlImageAdapter","deleteExpert","TableExpert","orgTableRef","createRef","history","codeCountry","reloadTableData","current","onQueryChange","field","title","render","rowData","interviewImage","verticalAlign","width","height","borderRadius","cellStyle","textAlign","query","Promise","resolve","reject","url","process","env","REACT_APP_BACKEND","pageSize","page","post","searchText","search","then","result","data","totalCount","filtering","sorting","headerStyle","backgroundColor","color","actionsColumnIndex","icon","tooltip","isFreeAction","onClick","event","interview","push","_id","user","window","confirm","fullname","error","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport MaterialTable from \"material-table\";\nimport { FcCalendar } from \"react-icons/fc\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport axios from \"axios\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport { deleteExpert } from \"apis/userApi\";\n\nconst TableExpert = () => {\n  const orgTableRef = React.createRef();\n  const history = useHistory();\n  const { codeCountry } = useParams();\n\n  const reloadTableData = () => {\n    orgTableRef.current.onQueryChange();\n  };\n\n  return (\n    <div>\n      <MaterialTable\n        tableRef={orgTableRef}\n        title=\"List of experts\"\n        columns={[\n          {\n            field: \"image_url\",\n            title: \"Profil\",\n            render: (rowData) => (\n              <img\n                className=\"img-fluid\"\n                src={urlImageAdapter(rowData?.interviewImage)}\n                style={{\n                  verticalAlign: \"middle\",\n                  width: \"50px\",\n                  height: \"50px\",\n                  borderRadius: \"50%\",\n                }}\n              />\n            ),\n            cellStyle: {\n              width: \"15%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Full Name\",\n            field: \"fullname\",\n            cellStyle: {\n              width: \"25%\",\n\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Email\",\n            field: \"email\",\n            cellStyle: {\n              width: \"25%\",\n\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Phone\",\n            field: \"phone\",\n            cellStyle: {\n              width: \"25%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Expert of the month\",\n            field: \"expert_of_month\",\n            cellStyle: {\n              width: \"25%\",\n              textAlign: \"center\",\n            },\n          },\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) => {\n            let url = `${process.env.REACT_APP_BACKEND}user/byCodeCountryPagination/${codeCountry}?`;\n            url += \"limit=\" + query.pageSize;\n            url += \"&page=\" + (query.page + 1);\n            axios\n              .post(url, {\n                searchText: query.search,\n              })\n              .then((result) => {\n                resolve({\n                  data: result.data.data,\n                  page: result.data.page - 1,\n                  totalCount: result.data.totalCount,\n                });\n              });\n          })\n        }\n        options={{\n          filtering: false,\n          search: true,\n          sorting: false,\n          headerStyle: {\n            backgroundColor: \"#0069d9\",\n            textAlign: \"center\",\n            color: \"white\",\n          },\n          actionsColumnIndex: -1,\n        }}\n        actions={[\n          {\n            icon: \"refresh\",\n            tooltip: \"Refresh Data\",\n            isFreeAction: true,\n            onClick: () =>\n              orgTableRef.current && orgTableRef.current.onQueryChange(),\n          },\n          {\n            icon: () => <FcCalendar size={30} />,\n            tooltip: \"Expert of the month\",\n            onClick: (event, interview) => {\n              history.push(\n                `/web-master/add-expert-article/${codeCountry}/${interview?._id}`\n              );\n            },\n          },\n          {\n            icon: () => (\n              <button className=\"btn btn-danger border-none shadow-none\">\n                Delete\n              </button>\n            ),\n            onClick: async (event, user) => {\n              if (\n                window.confirm(\n                  `Are you sure you wish to delete ${user.fullname} ?`\n                )\n              ) {\n                try {\n                  await deleteExpert(user?._id);\n                  reloadTableData();\n                  reloadTableData();\n                } catch (error) {\n                  console.log(error);\n                }\n              }\n            },\n          },\n        ]}\n      />\n    </div>\n  );\n};\n\nexport default TableExpert;\n"]},"metadata":{},"sourceType":"module"}