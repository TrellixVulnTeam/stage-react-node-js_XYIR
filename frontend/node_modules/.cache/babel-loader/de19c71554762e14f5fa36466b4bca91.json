{"ast":null,"code":"var _jsxFileName = \"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/post/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { forwardRef, useState, useCallback, useEffect, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Avatar } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport { useInfiniteQuery } from \"react-query\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\nimport InputOption from \"../inputOption/InputOption\";\nimport \"./Post.css\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport Comment from \"../comment/Comment\";\nimport { addCommentApi, getCommentsApi, getNumberCommentsApi } from \"apis/commentApi\";\nimport useIntersectionObserve from \"helpers/useIntersectionObserver\";\nimport useIntersectionObserver from \"@react-hook/intersection-observer\";\nimport { incrementViewApi } from \"apis/postApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = /*#__PURE__*/forwardRef(_c = _s(({\n  name,\n  description,\n  message,\n  photoUrl,\n  isLike,\n  createdAt,\n  likes,\n  onLike,\n  disableLike,\n  postImage,\n  userId,\n  postId,\n  views\n}, ref) => {\n  var _userInfo$user3;\n\n  _s();\n\n  const history = useHistory();\n  const [commentInput, setCommentInput] = useState(\"\");\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n  const [numberComments, setNumberComments] = useState(0);\n  const [limit] = useState(2);\n  const [refreh, setRefresh] = useState(false);\n  const loadMoreButtonRef = useRef();\n  const [postRef, setPostRef] = useState();\n  const {\n    isIntersecting\n  } = useIntersectionObserver(postRef);\n  const getDataFromApi = useCallback(async () => {\n    const numberComments = await getNumberCommentsApi(postId);\n    setNumberComments(numberComments);\n  }, []);\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi, refreh]);\n  useEffect(() => {\n    async function fetchData() {\n      if (isIntersecting) {\n        var _userInfo$user;\n\n        await incrementViewApi(postId, userInfo === null || userInfo === void 0 ? void 0 : (_userInfo$user = userInfo.user) === null || _userInfo$user === void 0 ? void 0 : _userInfo$user._id);\n      }\n    }\n\n    fetchData();\n  }, [isIntersecting]);\n  const {\n    data,\n    fetchNextPage,\n    isFetching,\n    hasNextPage,\n    isFetchingNextPage\n  } = useInfiniteQuery([limit, postId, refreh], getCommentsApi, {\n    getNextPageParam: (lastPage, pages) => {\n      if (lastPage.data.length === limit) return parseInt(lastPage.page) + 1;\n      return false;\n    }\n  });\n  useIntersectionObserve({\n    target: loadMoreButtonRef,\n    onIntersect: fetchNextPage,\n    enabled: hasNextPage\n  });\n\n  const onPostComment = async () => {\n    var _userInfo$user2;\n\n    const comment = {\n      content: commentInput,\n      post: postId,\n      user: userInfo === null || userInfo === void 0 ? void 0 : (_userInfo$user2 = userInfo.user) === null || _userInfo$user2 === void 0 ? void 0 : _userInfo$user2._id,\n      parent_id: null\n    };\n    const newComment = await addCommentApi(comment);\n    setRefresh(!refreh);\n    setCommentInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setPostRef,\n    className: \"post border\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post__header\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: photoUrl,\n        children: name[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          onClick: () => history.push(`/linkedin/profil/${userId}`),\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m-0\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m-0\",\n          children: moment(createdAt).startOf(\"minute\").fromNow()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post__body\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"comment_message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), postImage && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: postImage,\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row ml-3 mt-2\",\n      style: {\n        color: \"gray\",\n        fontSize: \"13px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-9\",\n        children: [/*#__PURE__*/_jsxDEV(ThumbUpAltOutlinedIcon, {\n          className: \"mb-1\",\n          style: {\n            color: \"#0e76a8\",\n            width: \"15px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), \" \", likes.length, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-4\",\n          children: [numberComments, \" comments\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [views, \" views\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post__buttons\",\n      children: [/*#__PURE__*/_jsxDEV(InputOption, {\n        Icon: ThumbUpAltOutlinedIcon,\n        title: \"Like\",\n        color: isLike ? \"#0e76a8\" : \"gray\",\n        onLike: onLike,\n        disableLike: disableLike\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n        Icon: ChatOutlinedIcon,\n        title: \"Comment\",\n        color: \"gray\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n        Icon: ShareOutlinedIcon,\n        title: \"Share\",\n        color: \"gray\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n        Icon: SendOutlinedIcon,\n        title: \"Send\",\n        color: \"gray\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment_input row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2 col-sm-1\",\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          className: \"comment_avatar mt-2\",\n          src: urlImageAdapter(userInfo === null || userInfo === void 0 ? void 0 : (_userInfo$user3 = userInfo.user) === null || _userInfo$user3 === void 0 ? void 0 : _userInfo$user3.image_url)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment__inputContainer col-10 col-11 mb-0\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment__input\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onClick: () => {},\n            children: /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n              className: \"textarea\",\n              placeholder: \"Add a comment ...\",\n              value: commentInput,\n              onChange: e => setCommentInput(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), commentInput !== \"\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onPostComment,\n        className: \"comment_post_btn btn btn-primary ml-5 shadow-none\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments mt-3\",\n      children: [data === null || data === void 0 ? void 0 : data.pages.map((group, i) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: group.data.map((comment, index) => /*#__PURE__*/_jsxDEV(Comment, {\n          user: comment === null || comment === void 0 ? void 0 : comment.user,\n          content: comment === null || comment === void 0 ? void 0 : comment.content\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }, this))\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"load_comments ml-2\",\n          onClick: () => fetchNextPage(),\n          disabled: !hasNextPage || isFetchingNextPage,\n          children: isFetchingNextPage ? \"Loading more...\" : hasNextPage && \"Load more comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 7\n  }, this);\n}, \"TXuirRjff88TfxKSlbPXQl1TCuI=\", false, function () {\n  return [useHistory, useIntersectionObserver, useInfiniteQuery, useIntersectionObserve];\n}));\n_c2 = Post;\nexport default Post;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Post$forwardRef\");\n$RefreshReg$(_c2, \"Post\");","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/components/linkedin/post/Post.js"],"names":["React","forwardRef","useState","useCallback","useEffect","useRef","useHistory","Avatar","moment","useInfiniteQuery","TextareaAutosize","ThumbUpAltOutlinedIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","InputOption","urlImageAdapter","Comment","addCommentApi","getCommentsApi","getNumberCommentsApi","useIntersectionObserve","useIntersectionObserver","incrementViewApi","Post","name","description","message","photoUrl","isLike","createdAt","likes","onLike","disableLike","postImage","userId","postId","views","ref","history","commentInput","setCommentInput","userInfo","JSON","parse","localStorage","getItem","numberComments","setNumberComments","limit","refreh","setRefresh","loadMoreButtonRef","postRef","setPostRef","isIntersecting","getDataFromApi","fetchData","user","_id","data","fetchNextPage","isFetching","hasNextPage","isFetchingNextPage","getNextPageParam","lastPage","pages","length","parseInt","page","target","onIntersect","enabled","onPostComment","comment","content","post","parent_id","newComment","push","startOf","fromNow","color","fontSize","width","image_url","e","value","map","group","i","index"],"mappings":"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","sourcesContent":["import React, {\n  forwardRef,\n  useState,\n  useCallback,\n  useEffect,\n  useRef,\n} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Avatar } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport { useInfiniteQuery } from \"react-query\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\nimport InputOption from \"../inputOption/InputOption\";\nimport \"./Post.css\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport Comment from \"../comment/Comment\";\nimport {\n  addCommentApi,\n  getCommentsApi,\n  getNumberCommentsApi,\n} from \"apis/commentApi\";\nimport useIntersectionObserve from \"helpers/useIntersectionObserver\";\nimport useIntersectionObserver from \"@react-hook/intersection-observer\";\nimport { incrementViewApi } from \"apis/postApi\";\n\nconst Post = forwardRef(\n  (\n    {\n      name,\n      description,\n      message,\n      photoUrl,\n      isLike,\n      createdAt,\n      likes,\n      onLike,\n      disableLike,\n      postImage,\n      userId,\n      postId,\n      views,\n    },\n    ref\n  ) => {\n    const history = useHistory();\n    const [commentInput, setCommentInput] = useState(\"\");\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    const [numberComments, setNumberComments] = useState(0);\n    const [limit] = useState(2);\n    const [refreh, setRefresh] = useState(false);\n    const loadMoreButtonRef = useRef();\n    const [postRef, setPostRef] = useState();\n    const { isIntersecting } = useIntersectionObserver(postRef);\n\n    const getDataFromApi = useCallback(async () => {\n      const numberComments = await getNumberCommentsApi(postId);\n      setNumberComments(numberComments);\n    }, []);\n\n    useEffect(() => {\n      getDataFromApi();\n    }, [getDataFromApi, refreh]);\n\n    useEffect(() => {\n      async function fetchData() {\n        if (isIntersecting) {\n          await incrementViewApi(postId, userInfo?.user?._id);\n        }\n      }\n      fetchData();\n    }, [isIntersecting]);\n\n    const {\n      data,\n      fetchNextPage,\n      isFetching,\n      hasNextPage,\n      isFetchingNextPage,\n    } = useInfiniteQuery([limit, postId, refreh], getCommentsApi, {\n      getNextPageParam: (lastPage, pages) => {\n        if (lastPage.data.length === limit) return parseInt(lastPage.page) + 1;\n        return false;\n      },\n    });\n\n    useIntersectionObserve({\n      target: loadMoreButtonRef,\n      onIntersect: fetchNextPage,\n      enabled: hasNextPage,\n    });\n\n    const onPostComment = async () => {\n      const comment = {\n        content: commentInput,\n        post: postId,\n        user: userInfo?.user?._id,\n        parent_id: null,\n      };\n      const newComment = await addCommentApi(comment);\n      setRefresh(!refreh);\n      setCommentInput(\"\");\n    };\n    return (\n      <div ref={setPostRef} className=\"post border\">\n        <div className=\"post__header\">\n          <Avatar src={photoUrl}>{name[0]}</Avatar>\n          <div className=\"post__info\">\n            <h2 onClick={() => history.push(`/linkedin/profil/${userId}`)}>\n              {name}\n            </h2>\n            <p className=\"m-0\">{description}</p>\n            <p className=\"m-0\">\n              {moment(createdAt)\n                .startOf(\"minute\")\n                .fromNow()}\n            </p>\n          </div>\n        </div>\n        <div className=\"post__body\">\n          <p className=\"comment_message\">{message}</p>\n          {postImage && <img src={postImage} width=\"100%\" />}\n        </div>\n        <div\n          className=\"row ml-3 mt-2\"\n          style={{ color: \"gray\", fontSize: \"13px\" }}\n        >\n          <div className=\"col-9\">\n            <ThumbUpAltOutlinedIcon\n              className=\"mb-1\"\n              style={{ color: \"#0e76a8\", width: \"15px\" }}\n            />{\" \"}\n            {likes.length}{\" \"}\n            <span className=\"ml-4\">{numberComments} comments</span>\n          </div>\n\n          <div className=\"col-3\">\n            <span>{views} views</span>\n          </div>\n        </div>\n        <div className=\"post__buttons\">\n          <InputOption\n            Icon={ThumbUpAltOutlinedIcon}\n            title=\"Like\"\n            color={isLike ? \"#0e76a8\" : \"gray\"}\n            onLike={onLike}\n            disableLike={disableLike}\n          />\n          <InputOption Icon={ChatOutlinedIcon} title=\"Comment\" color=\"gray\" />\n          <InputOption Icon={ShareOutlinedIcon} title=\"Share\" color=\"gray\" />\n          <InputOption Icon={SendOutlinedIcon} title=\"Send\" color=\"gray\" />\n        </div>\n        <div className=\"comment_input row\">\n          <div className=\"col-2 col-sm-1\">\n            <Avatar\n              className=\"comment_avatar mt-2\"\n              src={urlImageAdapter(userInfo?.user?.image_url)}\n            ></Avatar>\n          </div>\n\n          <div className=\"comment__inputContainer col-10 col-11 mb-0\">\n            <div className=\"comment__input\">\n              <form onClick={() => {}}>\n                <TextareaAutosize\n                  className=\"textarea\"\n                  placeholder=\"Add a comment ...\"\n                  value={commentInput}\n                  onChange={(e) => setCommentInput(e.target.value)}\n                />\n              </form>\n            </div>\n          </div>\n          {commentInput !== \"\" && (\n            <button\n              onClick={onPostComment}\n              className=\"comment_post_btn btn btn-primary ml-5 shadow-none\"\n            >\n              Post\n            </button>\n          )}\n        </div>\n        <div className=\"comments mt-3\">\n          {data?.pages.map((group, i) => (\n            <React.Fragment key={i}>\n              {group.data.map((comment, index) => (\n                <Comment\n                  key={index}\n                  user={comment?.user}\n                  content={comment?.content}\n                />\n              ))}\n            </React.Fragment>\n          ))}\n          <div>\n            <div\n              className=\"load_comments ml-2\"\n              onClick={() => fetchNextPage()}\n              disabled={!hasNextPage || isFetchingNextPage}\n            >\n              {isFetchingNextPage\n                ? \"Loading more...\"\n                : hasNextPage && \"Load more comments\"}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}