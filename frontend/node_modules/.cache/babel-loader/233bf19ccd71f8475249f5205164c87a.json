{"ast":null,"code":"import { getRequest, putRequest, postRequest } from \".\";\nexport const getAllArticlesByCountryPagination = async ({\n  pageParam = 1,\n  queryKey\n}) => {\n  const [codeCountry, limit] = queryKey;\n\n  try {\n    const {\n      data\n    } = await getRequest(`article/articlesByCountry/${codeCountry}?limit=${limit}&page=${pageParam}`);\n    return {\n      data: data.data,\n      page: pageParam\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getArticlesByCountry = async (codeCountry, limit, page) => {\n  try {\n    const {\n      data\n    } = await getRequest(`article/articlesByCountry/${codeCountry}?limit=${limit}&page=${page}`);\n    return data === null || data === void 0 ? void 0 : data.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const acceptArticle = async articleId => {\n  try {\n    await putRequest(`article/acceptArticle/${articleId}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const refuseArticle = async articleId => {\n  try {\n    await putRequest(`article/refuseArticle/${articleId}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getArticlesAccepted = async ({\n  pageParam = 1,\n  queryKey\n}) => {\n  const [codeCountry, limit] = queryKey;\n\n  try {\n    const {\n      data\n    } = await getRequest(`article/ArticlesAccepted/${codeCountry}`);\n    return {\n      data: data.data,\n      page: pageParam\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getArticlesbyKeyword = async ({\n  pageParam = 1,\n  queryKey\n}) => {\n  const [search, limitPage, codeCountry] = queryKey;\n  const {\n    data\n  } = await postRequest(`article/searchByKeyword?limit=${limitPage}&page=${pageParam}`, {\n    searchText: search,\n    code: codeCountry\n  });\n  return {\n    data: data.data,\n    page: pageParam\n  };\n};\nexport const getArticleAcceptedByCountry = async (codeCountry, limit, page) => {\n  try {\n    const {\n      data\n    } = await getRequest(`article/ArticlesAccepted/${codeCountry}?limit=${limit}&page=${page}`);\n    return data === null || data === void 0 ? void 0 : data.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getNumberArticlesByCountry = async codeCountry => {\n  try {\n    const res = await getRequest(`article/numberByCodeCountry/${codeCountry}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getarticlesScrolling = async ({\n  pageParam = 1,\n  queryKey\n}) => {\n  const [search, codeCountry, limitPage] = queryKey;\n  const {\n    data\n  } = await postRequest(`article/articlesOfCountry?limit=${limitPage}&page=${pageParam}`, {\n    code: codeCountry,\n    searchText: search\n  });\n  return {\n    data: data === null || data === void 0 ? void 0 : data.data,\n    page: pageParam\n  };\n};","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/articleApi.js"],"names":["getRequest","putRequest","postRequest","getAllArticlesByCountryPagination","pageParam","queryKey","codeCountry","limit","data","page","error","console","log","getArticlesByCountry","acceptArticle","articleId","refuseArticle","getArticlesAccepted","getArticlesbyKeyword","search","limitPage","searchText","code","getArticleAcceptedByCountry","getNumberArticlesByCountry","res","getarticlesScrolling"],"mappings":"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","sourcesContent":["import { getRequest, putRequest, postRequest } from \".\";\n\nexport const getAllArticlesByCountryPagination = async ({\n  pageParam = 1,\n  queryKey,\n}) => {\n  const [codeCountry, limit] = queryKey;\n  try {\n    const { data } = await getRequest(\n      `article/articlesByCountry/${codeCountry}?limit=${limit}&page=${pageParam}`\n    );\n    return { data: data.data, page: pageParam };\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getArticlesByCountry = async (codeCountry, limit, page) => {\n  try {\n    const { data } = await getRequest(\n      `article/articlesByCountry/${codeCountry}?limit=${limit}&page=${page}`\n    );\n    return data?.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const acceptArticle = async (articleId) => {\n  try {\n    await putRequest(`article/acceptArticle/${articleId}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const refuseArticle = async (articleId) => {\n  try {\n    await putRequest(`article/refuseArticle/${articleId}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getArticlesAccepted = async ({ pageParam = 1, queryKey }) => {\n  const [codeCountry, limit] = queryKey;\n  try {\n    const { data } = await getRequest(\n      `article/ArticlesAccepted/${codeCountry}`\n    );\n    return { data: data.data, page: pageParam };\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getArticlesbyKeyword= async ({ pageParam = 1, queryKey }) => {\n  const [search, limitPage, codeCountry] = queryKey;\n  const { data } = await postRequest(\n    `article/searchByKeyword?limit=${limitPage}&page=${pageParam}`,\n    {\n      searchText: search,\n      code: codeCountry,\n    }\n  );\n\n  return { data: data.data, page: pageParam };\n};\nexport const getArticleAcceptedByCountry = async (codeCountry, limit, page) => {\n  try {\n    const { data } = await getRequest(\n      `article/ArticlesAccepted/${codeCountry}?limit=${limit}&page=${page}`\n    );\n    return data?.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getNumberArticlesByCountry = async (codeCountry) => {\n  try {\n    const res = await getRequest(`article/numberByCodeCountry/${codeCountry}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getarticlesScrolling = async ({ pageParam = 1, queryKey }) => {\n  const [search, codeCountry, limitPage] = queryKey;\n  const {\n    data,\n  } = await postRequest(\n    `article/articlesOfCountry?limit=${limitPage}&page=${pageParam}`,\n    { code: codeCountry, searchText: search }\n  );\n  return { data: data?.data, page: pageParam };\n};"]},"metadata":{},"sourceType":"module"}