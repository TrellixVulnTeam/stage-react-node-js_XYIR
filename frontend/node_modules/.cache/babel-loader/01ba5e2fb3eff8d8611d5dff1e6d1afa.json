{"ast":null,"code":"var _jsxFileName = \"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/ProjectValidation.js\",\n    _s = $RefreshSig$();\n\nimport ProjectCard from \"components/aidchannel/project/ProjectCard\";\nimport React, { useState, useRef } from \"react\";\nimport { useInfiniteQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport { acceptProject, getAllProjectsByCountryPagination, refuseProject } from \"../../apis/projectApi\";\nimport YoutubeVideo from \"../../components/aidchannel/youtubeVideos/YoutubeVideo\";\nimport useIntersectionObserver from \"../../helpers/useIntersectionObserver\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProjectValidation = () => {\n  _s();\n\n  const [limit] = useState(4);\n  const {\n    codeCountry\n  } = useParams();\n  const loadMoreButtonRef = useRef();\n  const [test, setTest] = useState(false);\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage\n  } = useInfiniteQuery([codeCountry, limit, test], getAllProjectsByCountryPagination, {\n    getNextPageParam: (lastPage, pages) => {\n      if (lastPage.data.length === limit) return parseInt(lastPage.page) + 1;\n      return false;\n    }\n  });\n  console.log(data, \"data\");\n  useIntersectionObserver({\n    target: loadMoreButtonRef,\n    onIntersect: fetchNextPage,\n    enabled: hasNextPage\n  });\n\n  const accept = async projectId => {\n    await acceptProject(projectId);\n    setTest(!test);\n  };\n\n  const refuse = async projectId => {\n    await refuseProject(projectId);\n    setTest(!test);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row ml-5 mt-4 d-md-flex\",\n      children: data === null || data === void 0 ? void 0 : data.pages.map((group, i) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: group.data.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12  p-2 col-lg-5 mx-auto mt-3 border\",\n          children: [/*#__PURE__*/_jsxDEV(ProjectCard, {\n            project: project\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => accept(project === null || project === void 0 ? void 0 : project._id),\n            className: \"btn btn-success shadow-none mr-4\",\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => refuse(project === null || project === void 0 ? void 0 : project._id),\n            className: \"btn btn-danger shadow-none\",\n            children: \"Refuse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this))\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        ref: loadMoreButtonRef,\n        onClick: () => fetchNextPage(),\n        disabled: !hasNextPage || isFetchingNextPage,\n        children: isFetchingNextPage ? \"Loading more ....\" : hasNextPage ? \"Load More\" : \"Nothing more to load\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProjectValidation, \"HJXJbRnx3Fc266uQBCog+hLYdJ4=\", false, function () {\n  return [useParams, useInfiniteQuery, useIntersectionObserver];\n});\n\n_c = ProjectValidation;\nexport default ProjectValidation;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectValidation\");","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/ProjectValidation.js"],"names":["ProjectCard","React","useState","useRef","useInfiniteQuery","useParams","acceptProject","getAllProjectsByCountryPagination","refuseProject","YoutubeVideo","useIntersectionObserver","ProjectValidation","limit","codeCountry","loadMoreButtonRef","test","setTest","data","fetchNextPage","hasNextPage","isFetchingNextPage","getNextPageParam","lastPage","pages","length","parseInt","page","console","log","target","onIntersect","enabled","accept","projectId","refuse","map","group","i","project","index","_id","marginTop"],"mappings":"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","sourcesContent":["import ProjectCard from \"components/aidchannel/project/ProjectCard\";\nimport React, { useState, useRef } from \"react\";\nimport { useInfiniteQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport {\n    acceptProject,\n   getAllProjectsByCountryPagination,\n   refuseProject,\n  \n} from \"../../apis/projectApi\";\nimport YoutubeVideo from \"../../components/aidchannel/youtubeVideos/YoutubeVideo\";\nimport useIntersectionObserver from \"../../helpers/useIntersectionObserver\";\n\nconst ProjectValidation = () => {\n  const [limit] = useState(4);\n  const { codeCountry } = useParams();\n  const loadMoreButtonRef = useRef();\n  const [test, setTest] = useState(false);\n\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n  } = useInfiniteQuery(\n    [codeCountry, limit, test],\n    getAllProjectsByCountryPagination,\n    {\n      getNextPageParam: (lastPage, pages) => {\n        if (lastPage.data.length === limit) return parseInt(lastPage.page) + 1;\n        return false;\n      },\n    }\n  );\n\n  console.log(data, \"data\");\n\n  useIntersectionObserver({\n    target: loadMoreButtonRef,\n    onIntersect: fetchNextPage,\n    enabled: hasNextPage,\n  });\n\n  const accept = async (projectId) => {\n    await  acceptProject(projectId);\n    setTest(!test);\n  };\n  const refuse = async (projectId) => {\n    await refuseProject(projectId);\n    setTest(!test);\n  };\n\n  return (\n    <>\n      <div className=\"row ml-5 mt-4 d-md-flex\">\n        {data?.pages.map((group, i) => (\n          <React.Fragment key={i}>\n            {group.data.map((project, index) => (\n              <div\n                key={index}\n                className=\"col-12  p-2 col-lg-5 mx-auto mt-3 border\"\n              >\n                <ProjectCard project={project} key={index} />\n                <button\n                  onClick={() => accept(project?._id)}\n                  className=\"btn btn-success shadow-none mr-4\"\n                >\n                  Accept\n                </button>\n                <button\n                  onClick={() => refuse(project?._id)}\n                  className=\"btn btn-danger shadow-none\"\n                >\n                  Refuse\n                </button>\n              </div>\n            ))}\n          </React.Fragment>\n        ))}\n      </div>\n      <div style={{ marginTop: \"20px\" }}>\n        <button\n          ref={loadMoreButtonRef}\n          onClick={() => fetchNextPage()}\n          disabled={!hasNextPage || isFetchingNextPage}\n        >\n          {isFetchingNextPage\n            ? \"Loading more ....\"\n            : hasNextPage\n            ? \"Load More\"\n            : \"Nothing more to load\"}\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default ProjectValidation;\n"]},"metadata":{},"sourceType":"module"}