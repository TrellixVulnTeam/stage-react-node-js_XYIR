{"ast":null,"code":"var _jsxFileName = \"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/general/CounterDatavisualization.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CounterDatavisualization = ({\n  bgColor,\n  textColor,\n  value,\n  title,\n  duration,\n  route\n}) => {\n  _s();\n\n  const [count, setCount] = useState(\"0\");\n  useEffect(() => {\n    let start = 0; // first three numbers from props\n\n    const end = parseInt(value.substring(0, 3)); // if zero, return\n\n    if (start === end) return; // find duration per increment\n\n    let totalMilSecDur = parseInt(duration);\n    let incrementTime = totalMilSecDur / end * 1000; // timer increments start counter\n    // then updates count\n    // ends if start reaches end\n\n    let timer = setInterval(() => {\n      start += 1;\n      setCount(String(start) + value.substring(3));\n      if (start === end) clearInterval(timer);\n    }, incrementTime); // dependency array\n  }, [value, duration]);\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: route,\n    className: \"text-decoration-none\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex p-5\",\n      style: {\n        backgroundColor: bgColor,\n        borderRadius: \"19px\",\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-auto my-4\",\n        style: {\n          color: textColor\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CounterDatavisualization, \"e9WYKlY6D86hItDa7BwgUK75Iv8=\");\n\n_c = CounterDatavisualization;\nexport default CounterDatavisualization;\n\nvar _c;\n\n$RefreshReg$(_c, \"CounterDatavisualization\");","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/general/CounterDatavisualization.js"],"names":["React","useState","useEffect","Link","CounterDatavisualization","bgColor","textColor","value","title","duration","route","count","setCount","start","end","parseInt","substring","totalMilSecDur","incrementTime","timer","setInterval","String","clearInterval","backgroundColor","borderRadius","textAlign","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,wBAAwB,GAAG,CAAC;AAChCC,EAAAA,OADgC;AAEhCC,EAAAA,SAFgC;AAGhCC,EAAAA,KAHgC;AAIhCC,EAAAA,KAJgC;AAKhCC,EAAAA,QALgC;AAMhCC,EAAAA;AANgC,CAAD,KAO3B;AAAA;;AACJ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,GAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,KAAK,GAAG,CAAZ,CADc,CAEd;;AACA,UAAMC,GAAG,GAAGC,QAAQ,CAACR,KAAK,CAACS,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAD,CAApB,CAHc,CAId;;AACA,QAAIH,KAAK,KAAKC,GAAd,EAAmB,OALL,CAOd;;AACA,QAAIG,cAAc,GAAGF,QAAQ,CAACN,QAAD,CAA7B;AACA,QAAIS,aAAa,GAAID,cAAc,GAAGH,GAAlB,GAAyB,IAA7C,CATc,CAWd;AACA;AACA;;AACA,QAAIK,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC5BP,MAAAA,KAAK,IAAI,CAAT;AACAD,MAAAA,QAAQ,CAACS,MAAM,CAACR,KAAD,CAAN,GAAgBN,KAAK,CAACS,SAAN,CAAgB,CAAhB,CAAjB,CAAR;AACA,UAAIH,KAAK,KAAKC,GAAd,EAAmBQ,aAAa,CAACH,KAAD,CAAb;AACpB,KAJsB,EAIpBD,aAJoB,CAAvB,CAdc,CAoBd;AACD,GArBQ,EAqBN,CAACX,KAAD,EAAQE,QAAR,CArBM,CAAT;AAuBA,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAEC,KAAV;AAAiB,IAAA,SAAS,EAAC,sBAA3B;AAAA,2BACE;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,KAAK,EAAE;AACLa,QAAAA,eAAe,EAAElB,OADZ;AAELmB,QAAAA,YAAY,EAAE,MAFT;AAGLC,QAAAA,SAAS,EAAE;AAHN,OAFT;AAAA,6BAQE;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAEpB;AAAT,SAApC;AAAA,gCACE;AAAA,oBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKG;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAlDD;;GAAMP,wB;;KAAAA,wB;AAoDN,eAAeA,wBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CounterDatavisualization = ({\n  bgColor,\n  textColor,\n  value,\n  title,\n  duration,\n  route,\n}) => {\n  const [count, setCount] = useState(\"0\");\n\n  useEffect(() => {\n    let start = 0;\n    // first three numbers from props\n    const end = parseInt(value.substring(0, 3));\n    // if zero, return\n    if (start === end) return;\n\n    // find duration per increment\n    let totalMilSecDur = parseInt(duration);\n    let incrementTime = (totalMilSecDur / end) * 1000;\n\n    // timer increments start counter\n    // then updates count\n    // ends if start reaches end\n    let timer = setInterval(() => {\n      start += 1;\n      setCount(String(start) + value.substring(3));\n      if (start === end) clearInterval(timer);\n    }, incrementTime);\n\n    // dependency array\n  }, [value, duration]);\n\n  return (\n    <Link to={route} className=\"text-decoration-none\">\n      <div\n        className=\"d-flex p-5\"\n        style={{\n          backgroundColor: bgColor,\n          borderRadius: \"19px\",\n          textAlign: \"center\",\n        }}\n      >\n        <div className=\"m-auto my-4\" style={{ color: textColor }}>\n          <h4>{title}</h4>\n          <h4>{count}</h4>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default CounterDatavisualization;\n"]},"metadata":{},"sourceType":"module"}