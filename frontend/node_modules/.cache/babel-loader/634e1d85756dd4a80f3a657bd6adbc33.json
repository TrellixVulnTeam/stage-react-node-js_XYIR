{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nexport default function useIntersectionObserver({\n  root,\n  target,\n  onIntersect,\n  threshold = 0.7,\n  rootMargin = \"0px\",\n  enabled = false\n}) {\n  _s();\n\n  useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n\n    const observer = new IntersectionObserver(entries => entries.forEach(entry => entry.isIntersecting && onIntersect()), {\n      root: root && root.current,\n      rootMargin,\n      threshold\n    });\n    const el = target && target.current;\n\n    if (!el) {\n      return;\n    }\n\n    observer.observe(el);\n    return () => {\n      observer.unobserve(el);\n    };\n  }, [enabled, onIntersect, root, rootMargin, target, threshold]);\n}\n\n_s(useIntersectionObserver, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/helpers/useIntersectionObserver.js"],"names":["useEffect","useIntersectionObserver","root","target","onIntersect","threshold","rootMargin","enabled","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","current","el","observe","unobserve"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,eAAe,SAASC,uBAAT,CAAiC;AAC9CC,EAAAA,IAD8C;AAE9CC,EAAAA,MAF8C;AAG9CC,EAAAA,WAH8C;AAI9CC,EAAAA,SAAS,GAAG,GAJkC;AAK9CC,EAAAA,UAAU,GAAG,KALiC;AAM9CC,EAAAA,OAAO,GAAG;AANoC,CAAjC,EAOZ;AAAA;;AACDP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACO,OAAL,EAAc;AACZ;AACD;;AAED,UAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CACdC,OAAD,IACEA,OAAO,CAACC,OAAR,CAAiBC,KAAD,IAAWA,KAAK,CAACC,cAAN,IAAwBT,WAAW,EAA9D,CAFa,EAGf;AACEF,MAAAA,IAAI,EAAEA,IAAI,IAAIA,IAAI,CAACY,OADrB;AAEER,MAAAA,UAFF;AAGED,MAAAA;AAHF,KAHe,CAAjB;AAUA,UAAMU,EAAE,GAAGZ,MAAM,IAAIA,MAAM,CAACW,OAA5B;;AAEA,QAAI,CAACC,EAAL,EAAS;AACP;AACD;;AACDP,IAAAA,QAAQ,CAACQ,OAAT,CAAiBD,EAAjB;AAEA,WAAO,MAAM;AACXP,MAAAA,QAAQ,CAACS,SAAT,CAAmBF,EAAnB;AACD,KAFD;AAGD,GAzBQ,EAyBN,CAACR,OAAD,EAAUH,WAAV,EAAuBF,IAAvB,EAA6BI,UAA7B,EAAyCH,MAAzC,EAAiDE,SAAjD,CAzBM,CAAT;AA0BD;;GAlCuBJ,uB","sourcesContent":["import { useEffect } from \"react\";\n\nexport default function useIntersectionObserver({\n  root,\n  target,\n  onIntersect,\n  threshold = 0.7,\n  rootMargin = \"0px\",\n  enabled = false,\n}) {\n  useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n\n    const observer = new IntersectionObserver(\n      (entries) =>\n        entries.forEach((entry) => entry.isIntersecting && onIntersect()),\n      {\n        root: root && root.current,\n        rootMargin,\n        threshold,\n      }\n    );\n\n    const el = target && target.current;\n\n    if (!el) {\n      return;\n    }\n    observer.observe(el);\n\n    return () => {\n      observer.unobserve(el);\n    };\n  }, [enabled, onIntersect, root, rootMargin, target, threshold]);\n}\n"]},"metadata":{},"sourceType":"module"}