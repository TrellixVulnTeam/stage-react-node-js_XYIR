{"ast":null,"code":"var _jsxFileName = \"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/NetworkGraph2.js\",\n    _s = $RefreshSig$();\n\nimport Graph from \"react-graph-vis\";\nimport React, { useState } from \"react\";\nimport Color from \"color\";\nimport ReactDOM from \"react-dom\";\nimport \"./Graph.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NetworkGraph2 = props => {\n  _s();\n\n  const [graph, setGraph] = useState({\n    nodes: [],\n    edges: []\n  });\n  const {\n    idProject,\n    multimedia\n  } = useParams();\n  const getDataFromApi = useCallback(async () => {\n    const {\n      impacts\n    } = await getImpactsByProject(idProject);\n    const impactsIds = impacts === null || impacts === void 0 ? void 0 : impacts.map(impact => impact === null || impact === void 0 ? void 0 : impact._id);\n    const {\n      outcomes\n    } = await getOutComeApi(impactsIds);\n    const outcomesIds = outcomes === null || outcomes === void 0 ? void 0 : outcomes.map(outcome => outcome === null || outcome === void 0 ? void 0 : outcome._id);\n    const {\n      outputs\n    } = await getOutPutApi(outcomesIds);\n    const outputsIds = outputs === null || outputs === void 0 ? void 0 : outputs.map(output => output === null || output === void 0 ? void 0 : output._id);\n    const {\n      activities\n    } = await getActivityApi(outputsIds);\n    let nodes = [];\n    let edges = [];\n    impacts === null || impacts === void 0 ? void 0 : impacts.map(impact => {\n      nodes.push({ ...impact,\n        ...{\n          id: impact === null || impact === void 0 ? void 0 : impact._id,\n          level: 0,\n          margin: 20,\n          shape: \"box\",\n          color: \"#34495E\",\n          font: {\n            color: \"white\"\n          }\n        }\n      });\n    });\n    outcomes === null || outcomes === void 0 ? void 0 : outcomes.map(outcome => {\n      nodes.push({ ...outcome,\n        ...{\n          id: outcome === null || outcome === void 0 ? void 0 : outcome._id,\n          level: 1,\n          margin: 20,\n          shape: \"box\",\n          color: \"#3f51b5\",\n          font: {\n            color: \"white\"\n          }\n        }\n      });\n    });\n    outcomes === null || outcomes === void 0 ? void 0 : outcomes.map(outcome => {\n      var _outcome$impacts;\n\n      outcome === null || outcome === void 0 ? void 0 : (_outcome$impacts = outcome.impacts) === null || _outcome$impacts === void 0 ? void 0 : _outcome$impacts.map(impactId => {\n        edges.push({\n          from: impactId,\n          to: outcome === null || outcome === void 0 ? void 0 : outcome._id\n        });\n      });\n    });\n    outputs === null || outputs === void 0 ? void 0 : outputs.map(output => {\n      nodes.push({ ...output,\n        ...{\n          id: output === null || output === void 0 ? void 0 : output._id,\n          level: 2,\n          margin: 20,\n          shape: \"box\",\n          color: \"#1ABC9C\",\n          font: {\n            color: \"white\"\n          }\n        }\n      });\n    });\n    outputs === null || outputs === void 0 ? void 0 : outputs.map(output => {\n      var _output$outComes;\n\n      output === null || output === void 0 ? void 0 : (_output$outComes = output.outComes) === null || _output$outComes === void 0 ? void 0 : _output$outComes.map(outcomeId => {\n        edges.push({\n          from: outcomeId,\n          to: output === null || output === void 0 ? void 0 : output._id\n        });\n      });\n    });\n    console.log(activities, \"activities\");\n    activities === null || activities === void 0 ? void 0 : activities.map(activity => {\n      nodes.push({ ...activity,\n        ...{\n          id: activity === null || activity === void 0 ? void 0 : activity._id,\n          level: 3,\n          margin: 20,\n          shape: \"box\",\n          color: \"#DC7633\",\n          font: {\n            color: \"white\"\n          }\n        }\n      });\n    });\n    activities === null || activities === void 0 ? void 0 : activities.map(activity => {\n      var _activity$outPuts;\n\n      activity === null || activity === void 0 ? void 0 : (_activity$outPuts = activity.outPuts) === null || _activity$outPuts === void 0 ? void 0 : _activity$outPuts.map(outputId => {\n        edges.push({\n          from: outputId,\n          to: activity === null || activity === void 0 ? void 0 : activity._id\n        });\n      });\n    });\n    setGraph({ ...graph,\n      nodes: nodes,\n      edges: edges\n    });\n  }, []);\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n  const options = {\n    autoResize: true,\n    height: \"600\",\n    width: \"100%\",\n    interaction: {\n      navigationButtons: true,\n      keyboard: true,\n      tooltipDelay: 50\n    },\n    layout: {\n      randomSeed: undefined,\n      improvedLayout: true,\n      clusterThreshold: 150,\n      hierarchical: {\n        enabled: false,\n        levelSeparation: 150,\n        nodeSpacing: 100,\n        treeSpacing: 200,\n        blockShifting: true,\n        edgeMinimization: true,\n        parentCentralization: true,\n        // direction: 'UD',        // UD, DU, LR, RL\n        sortMethod: \"hubsize\",\n        // hubsize, directed\n        shakeTowards: \"leaves\" // roots, leaves\n\n      }\n    },\n    nodes: {\n      shape: \"box\",\n      widthConstraint: 120,\n      heightConstraint: 72,\n      shapeProperties: {\n        borderRadius: 20\n      }\n    },\n    edges: {\n      smooth: {\n        type: \"cubicBezier\",\n        forceDirection: \"horizontal\",\n        roundness: 0.9\n      },\n      color: \"white\"\n    }\n  };\n\n  function randomColor() {\n    const red = Math.floor(Math.random() * 256).toString(16).padStart(2, \"0\");\n    const green = Math.floor(Math.random() * 256).toString(16).padStart(2, \"0\");\n    const blue = Math.floor(Math.random() * 256).toString(16).padStart(2, \"0\");\n    return `#${red}${green}${blue}`;\n  }\n\n  var activities = [{\n    id: 1,\n    x: 0,\n    y: 0,\n    label: \"Activity 1 \",\n    title: \"user6 \\n CTO\",\n    shape: \"box\",\n    size: 50,\n    mass: 1,\n    physics: false,\n    color: \"#33FFDE\",\n    widthConstraint: 200,\n    heightConstraint: 20\n  }, {\n    id: 2,\n    x: 0,\n    y: 100,\n    label: \"Activity 2\",\n    shape: \"box\",\n    size: 50,\n    mass: 1,\n    physics: false,\n    color: \"#33FFDE\",\n    widthConstraint: 200,\n    heightConstraint: 20\n  }, {\n    id: 3,\n    x: 0,\n    y: 200,\n    label: \"Activity 3\",\n    shape: \"box\",\n    size: 50,\n    mass: 1,\n    physics: false,\n    color: \"#33FFDE\",\n    widthConstraint: 200,\n    heightConstraint: 20\n  }, {\n    id: 4,\n    x: 0,\n    y: 300,\n    label: \"Activity 4\",\n    shape: \"box\",\n    size: 50,\n    mass: 1,\n    physics: false,\n    color: \"#33FFDE\",\n    widthConstraint: 200,\n    heightConstraint: 20\n  }];\n  var outputs = [{\n    id: 10,\n    x: 300,\n    y: 0,\n    label: \"output 1 \",\n    shape: \"box\",\n    size: 50,\n    mass: 1,\n    physics: false,\n    color: \"#33F3FF\",\n    widthConstraint: 200,\n    heightConstraint: 50\n  }, {\n    id: 11,\n    x: 300,\n    y: 100,\n    label: \"output 2\",\n    shape: \"box\",\n    size: 50,\n    mass: 1,\n    physics: false,\n    color: \"#33F3FF\",\n    widthConstraint: 200,\n    heightConstraint: 50\n  }, {\n    id: 12,\n    x: 300,\n    y: 200,\n    label: \"output 3\",\n    shape: \"box\",\n    size: 50,\n    mass: 1,\n    physics: false,\n    color: \"#33F3FF\",\n    widthConstraint: 200,\n    heightConstraint: 50\n  }, {\n    id: 14,\n    x: 300,\n    y: 300,\n    label: \"Activity 4\",\n    shape: \"box\",\n    size: 50,\n    mass: 1,\n    physics: false,\n    color: \"#33F3FF\",\n    widthConstraint: 200,\n    heightConstraint: 50\n  }];\n  var outcomes = [{\n    id: 20,\n    x: 600,\n    y: 0,\n    label: \"outcome 1 \",\n    shape: \"box\",\n    size: 50,\n    mass: 1,\n    physics: false,\n    // color:\"#338DFF\",\n    widthConstraint: 200,\n    heightConstraint: 100\n  }, {\n    id: 21,\n    x: 600,\n    y: 150,\n    label: \"outcome 2\",\n    title: \"user5 \\n Data Analyst\",\n    shape: \"box\",\n    size: 50,\n    mass: 1,\n    physics: false,\n    //  color:\"#338DFF\",\n    widthConstraint: 200,\n    heightConstraint: 100\n  }, {\n    id: 22,\n    x: 600,\n    y: 300,\n    label: \"output 3\",\n    title: \"user5 \\n Data Analyst\",\n    shape: \"box\",\n    size: 50,\n    mass: 1,\n    physics: false,\n    color: \"#338DFF\",\n    widthConstraint: 200,\n    heightConstraint: 100\n  }].map((c, i) => ({ ...c,\n    color: {\n      border: Color(\"#ffffff\").darken(0.2).hex(),\n      background: \"#ffffff\",\n      highlight: {\n        border: Color(\"#ffffff\").darken(0.3).hex(),\n        background: Color(\"#ffffff\").darken(0.2).hex()\n      },\n      hover: {\n        border: Color(\"#ffffff\").darken(0.3).hex(),\n        background: Color(\"#ffffff\").darken(0.2).hex()\n      }\n    }\n  }));\n  var impacts = [{\n    id: 30,\n    x: 900,\n    y: 150,\n    label: \"impact 1\",\n    shape: \"box\",\n    size: 50,\n    mass: 1,\n    physics: false,\n    color: \"#240EA9\",\n    widthConstraint: 200,\n    heightConstraint: 200,\n    font: {\n      color: \"white\"\n    }\n  }];\n  const [state, setState] = useState({\n    counter: 5,\n    graph: {\n      nodes: [...activities, ...outputs, ...outcomes, ...impacts],\n      edges: [{\n        from: 10,\n        to: 20,\n        width: 2\n      }, {\n        from: 11,\n        to: 21,\n        width: 2\n      }, {\n        from: 2,\n        to: 10,\n        width: 2\n      }, {\n        from: 2,\n        to: 11,\n        width: 2\n      }, {\n        from: 2,\n        to: 12,\n        width: 2\n      }, {\n        from: 3,\n        to: 6,\n        width: 2\n      }, {\n        from: 20,\n        to: 30,\n        width: 2\n      }, {\n        from: 21,\n        to: 30,\n        width: 2\n      }, {\n        from: 22,\n        to: 30,\n        width: 2\n      }]\n    },\n    events: {\n      select: ({\n        nodes,\n        pointer: {\n          canvas\n        }\n      }) => {\n        // const position = nodePosition(2);\n        console.log(\"Selected nodes:\" + nodes);\n        console.log(\"Selected node: \" + nodes + canvas.x + \" \" + canvas.y);\n      } // doubleClick: ({ pointer: { canvas } }) => {\n      //   createNode(canvas.x, canvas.y);\n      // }\n\n    }\n  });\n  const {\n    events\n  } = state;\n  const positions = graph;\n  console.log(positions);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"network-graph\",\n    children: /*#__PURE__*/_jsxDEV(Graph, {\n      graph: graph,\n      options: options,\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 408,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NetworkGraph2, \"AiBlnCF6PfmXO5JiDj/F1hyRXQM=\", true);\n\n_c = NetworkGraph2;\nexport default NetworkGraph2;\n\nvar _c;\n\n$RefreshReg$(_c, \"NetworkGraph2\");","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/NetworkGraph2.js"],"names":["Graph","React","useState","Color","ReactDOM","NetworkGraph2","props","graph","setGraph","nodes","edges","idProject","multimedia","useParams","getDataFromApi","useCallback","impacts","getImpactsByProject","impactsIds","map","impact","_id","outcomes","getOutComeApi","outcomesIds","outcome","outputs","getOutPutApi","outputsIds","output","activities","getActivityApi","push","id","level","margin","shape","color","font","impactId","from","to","outComes","outcomeId","console","log","activity","outPuts","outputId","useEffect","options","autoResize","height","width","interaction","navigationButtons","keyboard","tooltipDelay","layout","randomSeed","undefined","improvedLayout","clusterThreshold","hierarchical","enabled","levelSeparation","nodeSpacing","treeSpacing","blockShifting","edgeMinimization","parentCentralization","sortMethod","shakeTowards","widthConstraint","heightConstraint","shapeProperties","borderRadius","smooth","type","forceDirection","roundness","randomColor","red","Math","floor","random","toString","padStart","green","blue","x","y","label","title","size","mass","physics","c","i","border","darken","hex","background","highlight","hover","state","setState","counter","events","select","pointer","canvas","positions"],"mappings":"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","sourcesContent":["import Graph from \"react-graph-vis\";\nimport React, { useState } from \"react\";\nimport Color from \"color\";\nimport ReactDOM from \"react-dom\";\nimport \"./Graph.css\";\n\nconst NetworkGraph2 = (props) => {\n  const [graph, setGraph] = useState({\n    nodes: [],\n    edges: [],\n  });\n  const { idProject, multimedia } = useParams();\n\n  const getDataFromApi = useCallback(async () => {\n    const { impacts } = await getImpactsByProject(idProject);\n    const impactsIds = impacts?.map((impact) => impact?._id);\n    const { outcomes } = await getOutComeApi(impactsIds);\n    const outcomesIds = outcomes?.map((outcome) => outcome?._id);\n    const { outputs } = await getOutPutApi(outcomesIds);\n    const outputsIds = outputs?.map((output) => output?._id);\n    const { activities } = await getActivityApi(outputsIds);\n    let nodes = [];\n    let edges = [];\n    impacts?.map((impact) => {\n      nodes.push({\n        ...impact,\n        ...{\n          id: impact?._id,\n          level: 0,\n          margin: 20,\n          shape: \"box\",\n          color: \"#34495E\",\n          font: {\n            color: \"white\",\n          },\n        },\n      });\n    });\n    outcomes?.map((outcome) => {\n      nodes.push({\n        ...outcome,\n        ...{\n          id: outcome?._id,\n          level: 1,\n          margin: 20,\n          shape: \"box\",\n          color: \"#3f51b5\",\n          font: {\n            color: \"white\",\n          },\n        },\n      });\n    });\n    outcomes?.map((outcome) => {\n      outcome?.impacts?.map((impactId) => {\n        edges.push({ from: impactId, to: outcome?._id });\n      });\n    });\n\n    outputs?.map((output) => {\n      nodes.push({\n        ...output,\n        ...{\n          id: output?._id,\n          level: 2,\n          margin: 20,\n          shape: \"box\",\n          color: \"#1ABC9C\",\n          font: {\n            color: \"white\",\n          },\n        },\n      });\n    });\n    outputs?.map((output) => {\n      output?.outComes?.map((outcomeId) => {\n        edges.push({ from: outcomeId, to: output?._id });\n      });\n    });\n    console.log(activities, \"activities\");\n    activities?.map((activity) => {\n      nodes.push({\n        ...activity,\n        ...{\n          id: activity?._id,\n          level: 3,\n          margin: 20,\n          shape: \"box\",\n          color: \"#DC7633\",\n          font: {\n            color: \"white\",\n          },\n        },\n      });\n    });\n    activities?.map((activity) => {\n      activity?.outPuts?.map((outputId) => {\n        edges.push({ from: outputId, to: activity?._id });\n      });\n    });\n    setGraph({\n      ...graph,\n      nodes: nodes,\n      edges: edges,\n    });\n  }, []);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const options = {\n    autoResize: true,\n    height: \"600\",\n    width: \"100%\",\n    interaction: {\n      navigationButtons: true,\n      keyboard: true,\n      tooltipDelay: 50,\n    },\n    layout: {\n      randomSeed: undefined,\n      improvedLayout: true,\n      clusterThreshold: 150,\n      hierarchical: {\n        enabled: false,\n        levelSeparation: 150,\n        nodeSpacing: 100,\n        treeSpacing: 200,\n        blockShifting: true,\n        edgeMinimization: true,\n        parentCentralization: true,\n        // direction: 'UD',        // UD, DU, LR, RL\n        sortMethod: \"hubsize\", // hubsize, directed\n        shakeTowards: \"leaves\", // roots, leaves\n      },\n    },\n\n    nodes: {\n      shape: \"box\",\n      widthConstraint: 120,\n      heightConstraint: 72,\n      shapeProperties: {\n        borderRadius: 20,\n      },\n    },\n    edges: {\n      smooth: {\n        type: \"cubicBezier\",\n        forceDirection: \"horizontal\",\n        roundness: 0.9,\n      },\n      color: \"white\",\n    },\n  };\n\n  function randomColor() {\n    const red = Math.floor(Math.random() * 256)\n      .toString(16)\n      .padStart(2, \"0\");\n    const green = Math.floor(Math.random() * 256)\n      .toString(16)\n      .padStart(2, \"0\");\n    const blue = Math.floor(Math.random() * 256)\n      .toString(16)\n      .padStart(2, \"0\");\n    return `#${red}${green}${blue}`;\n  }\n\n  var activities = [\n    {\n      id: 1,\n      x: 0,\n      y: 0,\n      label: \"Activity 1 \",\n      title: \"user6 \\n CTO\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#33FFDE\",\n      widthConstraint: 200,\n      heightConstraint: 20,\n    },\n\n    {\n      id: 2,\n      x: 0,\n      y: 100,\n      label: \"Activity 2\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#33FFDE\",\n      widthConstraint: 200,\n      heightConstraint: 20,\n    },\n\n    {\n      id: 3,\n      x: 0,\n      y: 200,\n      label: \"Activity 3\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#33FFDE\",\n      widthConstraint: 200,\n      heightConstraint: 20,\n    },\n\n    {\n      id: 4,\n      x: 0,\n      y: 300,\n      label: \"Activity 4\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#33FFDE\",\n      widthConstraint: 200,\n      heightConstraint: 20,\n    },\n  ];\n  var outputs = [\n    {\n      id: 10,\n      x: 300,\n      y: 0,\n      label: \"output 1 \",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#33F3FF\",\n      widthConstraint: 200,\n      heightConstraint: 50,\n    },\n\n    {\n      id: 11,\n      x: 300,\n      y: 100,\n      label: \"output 2\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#33F3FF\",\n      widthConstraint: 200,\n      heightConstraint: 50,\n    },\n\n    {\n      id: 12,\n      x: 300,\n      y: 200,\n      label: \"output 3\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#33F3FF\",\n      widthConstraint: 200,\n      heightConstraint: 50,\n    },\n\n    {\n      id: 14,\n      x: 300,\n      y: 300,\n      label: \"Activity 4\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#33F3FF\",\n      widthConstraint: 200,\n      heightConstraint: 50,\n    },\n  ];\n\n  var outcomes = [\n    {\n      id: 20,\n      x: 600,\n      y: 0,\n      label: \"outcome 1 \",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      // color:\"#338DFF\",\n      widthConstraint: 200,\n      heightConstraint: 100,\n    },\n\n    {\n      id: 21,\n      x: 600,\n      y: 150,\n      label: \"outcome 2\",\n      title: \"user5 \\n Data Analyst\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      //  color:\"#338DFF\",\n      widthConstraint: 200,\n      heightConstraint: 100,\n    },\n\n    {\n      id: 22,\n      x: 600,\n      y: 300,\n      label: \"output 3\",\n      title: \"user5 \\n Data Analyst\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#338DFF\",\n      widthConstraint: 200,\n      heightConstraint: 100,\n    },\n  ].map((c, i) => ({\n    ...c,\n    color: {\n      border: Color(\"#ffffff\")\n        .darken(0.2)\n        .hex(),\n      background: \"#ffffff\",\n      highlight: {\n        border: Color(\"#ffffff\")\n          .darken(0.3)\n          .hex(),\n        background: Color(\"#ffffff\")\n          .darken(0.2)\n          .hex(),\n      },\n      hover: {\n        border: Color(\"#ffffff\")\n          .darken(0.3)\n          .hex(),\n        background: Color(\"#ffffff\")\n          .darken(0.2)\n          .hex(),\n      },\n    },\n  }));\n\n  var impacts = [\n    {\n      id: 30,\n      x: 900,\n      y: 150,\n      label: \"impact 1\",\n      shape: \"box\",\n      size: 50,\n      mass: 1,\n      physics: false,\n      color: \"#240EA9\",\n      widthConstraint: 200,\n      heightConstraint: 200,\n      font: {\n        color: \"white\",\n      },\n    },\n  ];\n\n  const [state, setState] = useState({\n    counter: 5,\n    graph: {\n      nodes: [...activities, ...outputs, ...outcomes, ...impacts],\n      edges: [\n        { from: 10, to: 20, width: 2 },\n        { from: 11, to: 21, width: 2 },\n        { from: 2, to: 10, width: 2 },\n        { from: 2, to: 11, width: 2 },\n        { from: 2, to: 12, width: 2 },\n        { from: 3, to: 6, width: 2 },\n        { from: 20, to: 30, width: 2 },\n        { from: 21, to: 30, width: 2 },\n        { from: 22, to: 30, width: 2 },\n      ],\n    },\n    events: {\n      select: ({ nodes, pointer: { canvas } }) => {\n        // const position = nodePosition(2);\n        console.log(\"Selected nodes:\" + nodes);\n        console.log(\"Selected node: \" + nodes + canvas.x + \" \" + canvas.y);\n      },\n      // doubleClick: ({ pointer: { canvas } }) => {\n      //   createNode(canvas.x, canvas.y);\n      // }\n    },\n  });\n  const { events } = state;\n\n  const positions = graph;\n  console.log(positions);\n\n  return (\n    <div className=\"network-graph\">\n      <Graph graph={graph} options={options} events={events} />\n    </div>\n  );\n};\n\nexport default NetworkGraph2;\n"]},"metadata":{},"sourceType":"module"}