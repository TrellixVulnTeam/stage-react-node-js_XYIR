{"ast":null,"code":"var _jsxFileName = \"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ShowMoreDetailsProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Graph from \"react-graph-vis\";\nimport CountryHeader from \"../../components/layout/header/CountryHeader\";\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\nimport ShowMoreDetails from \"../../components/aidchannel/project/ShowMoreDetails\";\nimport { getImpactsByProject } from \"apis/impactApi\";\nimport { getOutComeApi } from \"apis/outComeApi\";\nimport { getOutPutApi } from \"apis/outPutApi\";\nimport { getActivityApi } from \"apis/activityApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ShowMoreDetailsProject = props => {\n  _s();\n\n  const [graph, setGraph] = useState({\n    nodes: [],\n    edges: []\n  });\n  const {\n    idProject\n  } = useParams();\n  const getDataFromApi = useCallback(async () => {\n    const {\n      impacts\n    } = await getImpactsByProject(idProject);\n    const impactsIds = impacts === null || impacts === void 0 ? void 0 : impacts.map(impact => impact === null || impact === void 0 ? void 0 : impact._id);\n    const {\n      outcomes\n    } = await getOutComeApi(impactsIds);\n    const outcomesIds = outcomes === null || outcomes === void 0 ? void 0 : outcomes.map(outcome => outcome === null || outcome === void 0 ? void 0 : outcome._id);\n    const {\n      outputs\n    } = await getOutPutApi(outcomesIds);\n    const outputsIds = outputs === null || outputs === void 0 ? void 0 : outputs.map(output => output === null || output === void 0 ? void 0 : output._id);\n    const {\n      activities\n    } = await getActivityApi(outputsIds);\n    let nodes = [];\n    let edges = [];\n    impacts === null || impacts === void 0 ? void 0 : impacts.map(impact => {\n      nodes.push({ ...impact,\n        ...{\n          id: impact === null || impact === void 0 ? void 0 : impact._id,\n          level: 0,\n          margin: 20,\n          shape: \"box\",\n          color: \"#34495E\",\n          font: {\n            color: \"white\"\n          }\n        }\n      });\n    });\n    outcomes === null || outcomes === void 0 ? void 0 : outcomes.map(outcome => {\n      nodes.push({ ...outcome,\n        ...{\n          id: outcome === null || outcome === void 0 ? void 0 : outcome._id,\n          level: 1,\n          margin: 20,\n          shape: \"box\",\n          color: \"#3f51b5\",\n          font: {\n            color: \"white\"\n          }\n        }\n      });\n    });\n    outcomes === null || outcomes === void 0 ? void 0 : outcomes.map(outcome => {\n      var _outcome$impacts;\n\n      outcome === null || outcome === void 0 ? void 0 : (_outcome$impacts = outcome.impacts) === null || _outcome$impacts === void 0 ? void 0 : _outcome$impacts.map(impactId => {\n        edges.push({\n          from: impactId,\n          to: outcome === null || outcome === void 0 ? void 0 : outcome._id\n        });\n      });\n    });\n    outputs === null || outputs === void 0 ? void 0 : outputs.map(output => {\n      nodes.push({ ...output,\n        ...{\n          id: output === null || output === void 0 ? void 0 : output._id,\n          level: 2,\n          margin: 20,\n          shape: \"box\",\n          color: \"#1ABC9C\",\n          font: {\n            color: \"white\"\n          }\n        }\n      });\n    });\n    outputs === null || outputs === void 0 ? void 0 : outputs.map(output => {\n      var _output$outComes;\n\n      output === null || output === void 0 ? void 0 : (_output$outComes = output.outComes) === null || _output$outComes === void 0 ? void 0 : _output$outComes.map(outcomeId => {\n        edges.push({\n          from: outcomeId,\n          to: output === null || output === void 0 ? void 0 : output._id\n        });\n      });\n    });\n    console.log(activities, \"activities\");\n    activities === null || activities === void 0 ? void 0 : activities.map(activity => {\n      nodes.push({ ...activity,\n        ...{\n          id: activity === null || activity === void 0 ? void 0 : activity._id,\n          level: 3,\n          margin: 20,\n          shape: \"box\",\n          color: \"#DC7633\",\n          font: {\n            color: \"white\"\n          }\n        }\n      });\n    });\n    activities === null || activities === void 0 ? void 0 : activities.map(activity => {\n      var _activity$outPuts;\n\n      activity === null || activity === void 0 ? void 0 : (_activity$outPuts = activity.outPuts) === null || _activity$outPuts === void 0 ? void 0 : _activity$outPuts.map(outputId => {\n        edges.push({\n          from: outputId,\n          to: activity === null || activity === void 0 ? void 0 : activity._id\n        });\n      });\n    });\n    setGraph({ ...graph,\n      nodes: nodes,\n      edges: edges\n    });\n  }, []);\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n  const details = [{\n    expected_results: \"expected_results\",\n    beneficiaries: \"Beneficiaries\",\n    key_experts: \"key_experts\",\n    localization: \"localization\",\n    thematic: \"thematic\",\n    kpi: \"kpi\"\n  }];\n  const options = {\n    layout: {\n      hierarchical: true\n    },\n    interaction: {\n      zoomView: false\n    },\n    edges: {\n      color: \"#000000\"\n    },\n    physics: {\n      forceAtlas2Based: {\n        gravitationalConstant: -26,\n        centralGravity: 0.005,\n        springLength: 230,\n        springConstant: 0.18\n      },\n      maxVelocity: 146,\n      solver: \"forceAtlas2Based\",\n      timestep: 0.35,\n      stabilization: {\n        enabled: true,\n        iterations: 2000,\n        updateInterval: 25\n      }\n    },\n    height: \"500px\"\n  };\n  const optionsgraph2 = {\n    autoResize: true,\n    height: \"600\",\n    width: \"100%\",\n    interaction: {\n      navigationButtons: true,\n      keyboard: true,\n      tooltipDelay: 50\n    },\n    layout: {\n      randomSeed: undefined,\n      improvedLayout: true,\n      clusterThreshold: 150,\n      hierarchical: {\n        enabled: false,\n        levelSeparation: 150,\n        nodeSpacing: 100,\n        treeSpacing: 200,\n        blockShifting: true,\n        edgeMinimization: true,\n        parentCentralization: true,\n        // direction: 'UD',        // UD, DU, LR, RL\n        sortMethod: \"hubsize\",\n        // hubsize, directed\n        shakeTowards: \"leaves\" // roots, leaves\n\n      }\n    },\n    // edges: {\n    //   color: 'white'\n    // },\n    nodes: {\n      shape: \"box\",\n      widthConstraint: 120,\n      heightConstraint: 72,\n      shapeProperties: {\n        borderRadius: 20\n      }\n    },\n    edges: {\n      smooth: {\n        type: \"cubicBezier\",\n        forceDirection: \"horizontal\",\n        roundness: 0.9\n      },\n      color: \"white\"\n    }\n  };\n  const events = {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CountryHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"heading_background  mt-5 mb-5 pb-3 pt-3\",\n        children: [\"Details\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sub-heading\",\n          children: \" of the project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), details.map((item, index) => /*#__PURE__*/_jsxDEV(ShowMoreDetails, {\n        index: index,\n        data: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"heading_background  mt-5 mb-5 pb-3 pt-3\",\n        children: [\"Graph\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sub-heading\",\n          children: \" of the project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Graph, {\n        graph: graph,\n        options: options,\n        events: events,\n        getNetwork: network => {//  if you want access to vis.js network api you can set the state in a parent component using this property\n        }\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Graph, {\n        graph: graph,\n        options: optionsgraph2,\n        events: events,\n        getNetwork: network => {//  if you want access to vis.js network api you can set the state in a parent component using this property\n        }\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PublicFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ShowMoreDetailsProject, \"Ba+grLNy9JeanfHb5pDnySrrRWo=\", false, function () {\n  return [useParams];\n});\n\n_c = ShowMoreDetailsProject;\nexport default ShowMoreDetailsProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowMoreDetailsProject\");","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ShowMoreDetailsProject.js"],"names":["React","useEffect","useState","useCallback","useParams","Graph","CountryHeader","PublicFooter","ShowMoreDetails","getImpactsByProject","getOutComeApi","getOutPutApi","getActivityApi","ShowMoreDetailsProject","props","graph","setGraph","nodes","edges","idProject","getDataFromApi","impacts","impactsIds","map","impact","_id","outcomes","outcomesIds","outcome","outputs","outputsIds","output","activities","push","id","level","margin","shape","color","font","impactId","from","to","outComes","outcomeId","console","log","activity","outPuts","outputId","details","expected_results","beneficiaries","key_experts","localization","thematic","kpi","options","layout","hierarchical","interaction","zoomView","physics","forceAtlas2Based","gravitationalConstant","centralGravity","springLength","springConstant","maxVelocity","solver","timestep","stabilization","enabled","iterations","updateInterval","height","optionsgraph2","autoResize","width","navigationButtons","keyboard","tooltipDelay","randomSeed","undefined","improvedLayout","clusterThreshold","levelSeparation","nodeSpacing","treeSpacing","blockShifting","edgeMinimization","parentCentralization","sortMethod","shakeTowards","widthConstraint","heightConstraint","shapeProperties","borderRadius","smooth","type","forceDirection","roundness","events","item","index","network","Math","random"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AACA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,OAAOC,eAAP,MAA4B,qDAA5B;AACA,SAASC,mBAAT,QAAoC,gBAApC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;;;;AAEA,MAAMC,sBAAsB,GAAIC,KAAD,IAAW;AAAA;;AACxC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC;AACjCe,IAAAA,KAAK,EAAE,EAD0B;AAEjCC,IAAAA,KAAK,EAAE;AAF0B,GAAD,CAAlC;AAIA,QAAM;AAAEC,IAAAA;AAAF,MAAgBf,SAAS,EAA/B;AAEA,QAAMgB,cAAc,GAAGjB,WAAW,CAAC,YAAY;AAC7C,UAAM;AAAEkB,MAAAA;AAAF,QAAc,MAAMZ,mBAAmB,CAACU,SAAD,CAA7C;AACA,UAAMG,UAAU,GAAGD,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAEE,GAAT,CAAcC,MAAD,IAAYA,MAAZ,aAAYA,MAAZ,uBAAYA,MAAM,CAAEC,GAAjC,CAAnB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAe,MAAMhB,aAAa,CAACY,UAAD,CAAxC;AACA,UAAMK,WAAW,GAAGD,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEH,GAAV,CAAeK,OAAD,IAAaA,OAAb,aAAaA,OAAb,uBAAaA,OAAO,CAAEH,GAApC,CAApB;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAc,MAAMlB,YAAY,CAACgB,WAAD,CAAtC;AACA,UAAMG,UAAU,GAAGD,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAEN,GAAT,CAAcQ,MAAD,IAAYA,MAAZ,aAAYA,MAAZ,uBAAYA,MAAM,CAAEN,GAAjC,CAAnB;AACA,UAAM;AAAEO,MAAAA;AAAF,QAAiB,MAAMpB,cAAc,CAACkB,UAAD,CAA3C;AAEA,QAAIb,KAAK,GAAG,EAAZ;AACA,QAAIC,KAAK,GAAG,EAAZ;AACAG,IAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEE,GAAT,CAAcC,MAAD,IAAY;AACvBP,MAAAA,KAAK,CAACgB,IAAN,CAAW,EACT,GAAGT,MADM;AAET,WAAG;AACDU,UAAAA,EAAE,EAAEV,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEC,GADX;AAEDU,UAAAA,KAAK,EAAE,CAFN;AAGDC,UAAAA,MAAM,EAAE,EAHP;AAIDC,UAAAA,KAAK,EAAE,KAJN;AAKDC,UAAAA,KAAK,EAAE,SALN;AAMDC,UAAAA,IAAI,EAAE;AACJD,YAAAA,KAAK,EAAE;AADH;AANL;AAFM,OAAX;AAaD,KAdD;AAeAZ,IAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEH,GAAV,CAAeK,OAAD,IAAa;AACzBX,MAAAA,KAAK,CAACgB,IAAN,CAAW,EACT,GAAGL,OADM;AAET,WAAG;AACDM,UAAAA,EAAE,EAAEN,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEH,GADZ;AAEDU,UAAAA,KAAK,EAAE,CAFN;AAGDC,UAAAA,MAAM,EAAE,EAHP;AAIDC,UAAAA,KAAK,EAAE,KAJN;AAKDC,UAAAA,KAAK,EAAE,SALN;AAMDC,UAAAA,IAAI,EAAE;AACJD,YAAAA,KAAK,EAAE;AADH;AANL;AAFM,OAAX;AAaD,KAdD;AAgBAZ,IAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEH,GAAV,CAAeK,OAAD,IAAa;AAAA;;AACzBA,MAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,gCAAAA,OAAO,CAAEP,OAAT,sEAAkBE,GAAlB,CAAuBiB,QAAD,IAAc;AAClCtB,QAAAA,KAAK,CAACe,IAAN,CAAW;AAAEQ,UAAAA,IAAI,EAAED,QAAR;AAAkBE,UAAAA,EAAE,EAAEd,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEH;AAA/B,SAAX;AACD,OAFD;AAGD,KAJD;AAMAI,IAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEN,GAAT,CAAcQ,MAAD,IAAY;AACvBd,MAAAA,KAAK,CAACgB,IAAN,CAAW,EACT,GAAGF,MADM;AAET,WAAG;AACDG,UAAAA,EAAE,EAAEH,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEN,GADX;AAEDU,UAAAA,KAAK,EAAE,CAFN;AAGDC,UAAAA,MAAM,EAAE,EAHP;AAIDC,UAAAA,KAAK,EAAE,KAJN;AAKDC,UAAAA,KAAK,EAAE,SALN;AAMDC,UAAAA,IAAI,EAAE;AACJD,YAAAA,KAAK,EAAE;AADH;AANL;AAFM,OAAX;AAaD,KAdD;AAgBAT,IAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEN,GAAT,CAAcQ,MAAD,IAAY;AAAA;;AACvBA,MAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,gCAAAA,MAAM,CAAEY,QAAR,sEAAkBpB,GAAlB,CAAuBqB,SAAD,IAAe;AACnC1B,QAAAA,KAAK,CAACe,IAAN,CAAW;AAAEQ,UAAAA,IAAI,EAAEG,SAAR;AAAmBF,UAAAA,EAAE,EAAEX,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEN;AAA/B,SAAX;AACD,OAFD;AAGD,KAJD;AAKAoB,IAAAA,OAAO,CAACC,GAAR,CAAYd,UAAZ,EAAwB,YAAxB;AACAA,IAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAET,GAAZ,CAAiBwB,QAAD,IAAc;AAC5B9B,MAAAA,KAAK,CAACgB,IAAN,CAAW,EACT,GAAGc,QADM;AAET,WAAG;AACDb,UAAAA,EAAE,EAAEa,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEtB,GADb;AAEDU,UAAAA,KAAK,EAAE,CAFN;AAGDC,UAAAA,MAAM,EAAE,EAHP;AAIDC,UAAAA,KAAK,EAAE,KAJN;AAKDC,UAAAA,KAAK,EAAE,SALN;AAMDC,UAAAA,IAAI,EAAE;AACJD,YAAAA,KAAK,EAAE;AADH;AANL;AAFM,OAAX;AAaD,KAdD;AAgBAN,IAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAET,GAAZ,CAAiBwB,QAAD,IAAc;AAAA;;AAC5BA,MAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,iCAAAA,QAAQ,CAAEC,OAAV,wEAAmBzB,GAAnB,CAAwB0B,QAAD,IAAc;AACnC/B,QAAAA,KAAK,CAACe,IAAN,CAAW;AAAEQ,UAAAA,IAAI,EAAEQ,QAAR;AAAkBP,UAAAA,EAAE,EAAEK,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEtB;AAAhC,SAAX;AACD,OAFD;AAGD,KAJD;AAKAT,IAAAA,QAAQ,CAAC,EACP,GAAGD,KADI;AAEPE,MAAAA,KAAK,EAAEA,KAFA;AAGPC,MAAAA,KAAK,EAAEA;AAHA,KAAD,CAAR;AAKD,GAhGiC,EAgG/B,EAhG+B,CAAlC;AAkGAjB,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,cAAc;AACf,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;AAIA,QAAM8B,OAAO,GAAG,CACd;AACEC,IAAAA,gBAAgB,EAAE,kBADpB;AAEEC,IAAAA,aAAa,EAAE,eAFjB;AAGEC,IAAAA,WAAW,EAAE,aAHf;AAIEC,IAAAA,YAAY,EAAE,cAJhB;AAKEC,IAAAA,QAAQ,EAAE,UALZ;AAMEC,IAAAA,GAAG,EAAE;AANP,GADc,CAAhB;AAWA,QAAMC,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE;AACNC,MAAAA,YAAY,EAAE;AADR,KADM;AAIdC,IAAAA,WAAW,EAAE;AACXC,MAAAA,QAAQ,EAAE;AADC,KAJC;AAOd3C,IAAAA,KAAK,EAAE;AACLoB,MAAAA,KAAK,EAAE;AADF,KAPO;AAUdwB,IAAAA,OAAO,EAAE;AACPC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,qBAAqB,EAAE,CAAC,EADR;AAEhBC,QAAAA,cAAc,EAAE,KAFA;AAGhBC,QAAAA,YAAY,EAAE,GAHE;AAIhBC,QAAAA,cAAc,EAAE;AAJA,OADX;AAOPC,MAAAA,WAAW,EAAE,GAPN;AAQPC,MAAAA,MAAM,EAAE,kBARD;AASPC,MAAAA,QAAQ,EAAE,IATH;AAUPC,MAAAA,aAAa,EAAE;AACbC,QAAAA,OAAO,EAAE,IADI;AAEbC,QAAAA,UAAU,EAAE,IAFC;AAGbC,QAAAA,cAAc,EAAE;AAHH;AAVR,KAVK;AA2BdC,IAAAA,MAAM,EAAE;AA3BM,GAAhB;AA6BA,QAAMC,aAAa,GAAG;AACpBC,IAAAA,UAAU,EAAE,IADQ;AAEpBF,IAAAA,MAAM,EAAE,KAFY;AAGpBG,IAAAA,KAAK,EAAE,MAHa;AAIpBlB,IAAAA,WAAW,EAAE;AACXmB,MAAAA,iBAAiB,EAAE,IADR;AAEXC,MAAAA,QAAQ,EAAE,IAFC;AAGXC,MAAAA,YAAY,EAAE;AAHH,KAJO;AASpBvB,IAAAA,MAAM,EAAE;AACNwB,MAAAA,UAAU,EAAEC,SADN;AAENC,MAAAA,cAAc,EAAE,IAFV;AAGNC,MAAAA,gBAAgB,EAAE,GAHZ;AAIN1B,MAAAA,YAAY,EAAE;AACZa,QAAAA,OAAO,EAAE,KADG;AAEZc,QAAAA,eAAe,EAAE,GAFL;AAGZC,QAAAA,WAAW,EAAE,GAHD;AAIZC,QAAAA,WAAW,EAAE,GAJD;AAKZC,QAAAA,aAAa,EAAE,IALH;AAMZC,QAAAA,gBAAgB,EAAE,IANN;AAOZC,QAAAA,oBAAoB,EAAE,IAPV;AAQZ;AACAC,QAAAA,UAAU,EAAE,SATA;AASW;AACvBC,QAAAA,YAAY,EAAE,QAVF,CAUY;;AAVZ;AAJR,KATY;AAyBjB;AACH;AACA;AAEA5E,IAAAA,KAAK,EAAE;AACLoB,MAAAA,KAAK,EAAE,KADF;AAELyD,MAAAA,eAAe,EAAE,GAFZ;AAGLC,MAAAA,gBAAgB,EAAE,EAHb;AAILC,MAAAA,eAAe,EAAE;AACfC,QAAAA,YAAY,EAAE;AADC;AAJZ,KA7Ba;AAqCpB/E,IAAAA,KAAK,EAAE;AACLgF,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,aADA;AAENC,QAAAA,cAAc,EAAE,YAFV;AAGNC,QAAAA,SAAS,EAAE;AAHL,OADH;AAML/D,MAAAA,KAAK,EAAE;AANF;AArCa,GAAtB;AA+CA,QAAMgE,MAAM,GAAG,EAAf;AAEA,sBACE;AAAA,4BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,yCAAd;AAAA,2CACS;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADT;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIGpD,OAAO,CAAC3B,GAAR,CAAY,CAACgF,IAAD,EAAOC,KAAP,kBACX,QAAC,eAAD;AAA6B,QAAA,KAAK,EAAEA,KAApC;AAA2C,QAAA,IAAI,EAAED;AAAjD,SAAsBC,KAAtB;AAAA;AAAA;AAAA;AAAA,cADD,CAJH,eAOE;AAAI,QAAA,SAAS,EAAC,yCAAd;AAAA,yCACO;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADP;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE,QAAC,KAAD;AAEE,QAAA,KAAK,EAAEzF,KAFT;AAGE,QAAA,OAAO,EAAE0C,OAHX;AAIE,QAAA,MAAM,EAAE6C,MAJV;AAKE,QAAA,UAAU,EAAGG,OAAD,IAAa,CACvB;AACD;AAPH,SACOC,IAAI,CAACC,MAAL,EADP;AAAA;AAAA;AAAA;AAAA,cAVF,EAkBK,GAlBL,eAmBE,QAAC,KAAD;AAEE,QAAA,KAAK,EAAE5F,KAFT;AAGE,QAAA,OAAO,EAAE6D,aAHX;AAIE,QAAA,MAAM,EAAE0B,MAJV;AAKE,QAAA,UAAU,EAAGG,OAAD,IAAa,CACvB;AACD;AAPH,SACOC,IAAI,CAACC,MAAL,EADP;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAgCE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAhCF;AAAA,kBADF;AAoCD,CA1OD;;GAAM9F,sB;UAKkBT,S;;;KALlBS,sB;AA4ON,eAAeA,sBAAf","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Graph from \"react-graph-vis\";\nimport CountryHeader from \"../../components/layout/header/CountryHeader\";\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\nimport ShowMoreDetails from \"../../components/aidchannel/project/ShowMoreDetails\";\nimport { getImpactsByProject } from \"apis/impactApi\";\nimport { getOutComeApi } from \"apis/outComeApi\";\nimport { getOutPutApi } from \"apis/outPutApi\";\nimport { getActivityApi } from \"apis/activityApi\";\n\nconst ShowMoreDetailsProject = (props) => {\n  const [graph, setGraph] = useState({\n    nodes: [],\n    edges: [],\n  });\n  const { idProject } = useParams();\n\n  const getDataFromApi = useCallback(async () => {\n    const { impacts } = await getImpactsByProject(idProject);\n    const impactsIds = impacts?.map((impact) => impact?._id);\n    const { outcomes } = await getOutComeApi(impactsIds);\n    const outcomesIds = outcomes?.map((outcome) => outcome?._id);\n    const { outputs } = await getOutPutApi(outcomesIds);\n    const outputsIds = outputs?.map((output) => output?._id);\n    const { activities } = await getActivityApi(outputsIds);\n\n    let nodes = [];\n    let edges = [];\n    impacts?.map((impact) => {\n      nodes.push({\n        ...impact,\n        ...{\n          id: impact?._id,\n          level: 0,\n          margin: 20,\n          shape: \"box\",\n          color: \"#34495E\",\n          font: {\n            color: \"white\",\n          },\n        },\n      });\n    });\n    outcomes?.map((outcome) => {\n      nodes.push({\n        ...outcome,\n        ...{\n          id: outcome?._id,\n          level: 1,\n          margin: 20,\n          shape: \"box\",\n          color: \"#3f51b5\",\n          font: {\n            color: \"white\",\n          },\n        },\n      });\n    });\n\n    outcomes?.map((outcome) => {\n      outcome?.impacts?.map((impactId) => {\n        edges.push({ from: impactId, to: outcome?._id });\n      });\n    });\n\n    outputs?.map((output) => {\n      nodes.push({\n        ...output,\n        ...{\n          id: output?._id,\n          level: 2,\n          margin: 20,\n          shape: \"box\",\n          color: \"#1ABC9C\",\n          font: {\n            color: \"white\",\n          },\n        },\n      });\n    });\n\n    outputs?.map((output) => {\n      output?.outComes?.map((outcomeId) => {\n        edges.push({ from: outcomeId, to: output?._id });\n      });\n    });\n    console.log(activities, \"activities\");\n    activities?.map((activity) => {\n      nodes.push({\n        ...activity,\n        ...{\n          id: activity?._id,\n          level: 3,\n          margin: 20,\n          shape: \"box\",\n          color: \"#DC7633\",\n          font: {\n            color: \"white\",\n          },\n        },\n      });\n    });\n\n    activities?.map((activity) => {\n      activity?.outPuts?.map((outputId) => {\n        edges.push({ from: outputId, to: activity?._id });\n      });\n    });\n    setGraph({\n      ...graph,\n      nodes: nodes,\n      edges: edges,\n    });\n  }, []);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const details = [\n    {\n      expected_results: \"expected_results\",\n      beneficiaries: \"Beneficiaries\",\n      key_experts: \"key_experts\",\n      localization: \"localization\",\n      thematic: \"thematic\",\n      kpi: \"kpi\",\n    },\n  ];\n\n  const options = {\n    layout: {\n      hierarchical: true,\n    },\n    interaction: {\n      zoomView: false,\n    },\n    edges: {\n      color: \"#000000\",\n    },\n    physics: {\n      forceAtlas2Based: {\n        gravitationalConstant: -26,\n        centralGravity: 0.005,\n        springLength: 230,\n        springConstant: 0.18,\n      },\n      maxVelocity: 146,\n      solver: \"forceAtlas2Based\",\n      timestep: 0.35,\n      stabilization: {\n        enabled: true,\n        iterations: 2000,\n        updateInterval: 25,\n      },\n    },\n\n    height: \"500px\",\n  };\n  const optionsgraph2 = {\n    autoResize: true,\n    height: \"600\",\n    width: \"100%\",\n    interaction: {\n      navigationButtons: true,\n      keyboard: true,\n      tooltipDelay: 50,\n    },\n    layout: {\n      randomSeed: undefined,\n      improvedLayout: true,\n      clusterThreshold: 150,\n      hierarchical: {\n        enabled: false,\n        levelSeparation: 150,\n        nodeSpacing: 100,\n        treeSpacing: 200,\n        blockShifting: true,\n        edgeMinimization: true,\n        parentCentralization: true,\n        // direction: 'UD',        // UD, DU, LR, RL\n        sortMethod: \"hubsize\", // hubsize, directed\n        shakeTowards: \"leaves\", // roots, leaves\n      },\n    }, // edges: {\n    //   color: 'white'\n    // },\n\n    nodes: {\n      shape: \"box\",\n      widthConstraint: 120,\n      heightConstraint: 72,\n      shapeProperties: {\n        borderRadius: 20,\n      },\n    },\n    edges: {\n      smooth: {\n        type: \"cubicBezier\",\n        forceDirection: \"horizontal\",\n        roundness: 0.9,\n      },\n      color: \"white\",\n    },\n  };\n\n  const events = {};\n\n  return (\n    <>\n      <CountryHeader />\n      <div className=\"container\">\n        <h1 className=\"heading_background  mt-5 mb-5 pb-3 pt-3\">\n          Details<span className=\"sub-heading\"> of the project</span>\n        </h1>\n        {details.map((item, index) => (\n          <ShowMoreDetails key={index} index={index} data={item} />\n        ))}\n        <h1 className=\"heading_background  mt-5 mb-5 pb-3 pt-3\">\n          Graph<span className=\"sub-heading\"> of the project</span>\n        </h1>\n        <Graph\n          key={Math.random()}\n          graph={graph}\n          options={options}\n          events={events}\n          getNetwork={(network) => {\n            //  if you want access to vis.js network api you can set the state in a parent component using this property\n          }}\n        />{\" \"}\n        <Graph\n          key={Math.random()}\n          graph={graph}\n          options={optionsgraph2}\n          events={events}\n          getNetwork={(network) => {\n            //  if you want access to vis.js network api you can set the state in a parent component using this property\n          }}\n        />\n      </div>\n\n      <PublicFooter />\n    </>\n  );\n};\n\nexport default ShowMoreDetailsProject;\n"]},"metadata":{},"sourceType":"module"}