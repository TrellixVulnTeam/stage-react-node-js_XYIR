{"ast":null,"code":"var _jsxFileName = \"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/public/ViewMoreOrganization.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useInfiniteQuery } from \"react-query\";\nimport { getDonorsOfMonthScrolling, getImplementersOfMonthScrolling } from \"../../apis/organizationApi\";\nimport useIntersectionObserver from \"../../helpers/useIntersectionObserver\";\nimport InputSearch from \"../../components/aidchannel/general/InputSearch\";\nimport PublicHeader from \"../../components/layout/header/PublicHeader\";\nimport OrganizationCard from \"../../components/aidchannel/organization/OrganizationCard\";\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ViewMoreOrganization = () => {\n  _s();\n\n  const [searchText, setSearchText] = useState(\"\");\n  const [limit] = useState(9);\n  const {\n    organization\n  } = useParams();\n  const loadMoreButtonRef = useRef();\n\n  const chooseOrganizationApi = ({\n    pageParam = 1,\n    queryKey\n  }) => {\n    if (organization === \"donors\") return getDonorsOfMonthScrolling({\n      pageParam: 1,\n      queryKey\n    });else if (organization === \"implementers\") return getImplementersOfMonthScrolling({\n      pageParam: 1,\n      queryKey\n    });\n    return null;\n  };\n\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage\n  } = useInfiniteQuery([searchText, limit], chooseOrganizationApi, {\n    getNextPageParam: (lastPage, pages) => {\n      if (lastPage.data.length === limit) return parseInt(lastPage.page) + 1;\n      return false;\n    }\n  });\n  useIntersectionObserver({\n    target: loadMoreButtonRef,\n    onIntersect: fetchNextPage,\n    enabled: hasNextPage\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PublicHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"heading my-4\",\n        children: [organization.charAt(0).toUpperCase() + organization.slice(1), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sub-heading\",\n          children: \" of the month \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSearch, {\n        setSearchText: setSearchText,\n        searchText: searchText,\n        placeholder: `Search for ${organization}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: data === null || data === void 0 ? void 0 : data.pages.map((group, i) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: group.data.map((organization, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-md-6 col-lg-4 my-4\",\n            children: /*#__PURE__*/_jsxDEV(OrganizationCard, {\n              organization: organization\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this))\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          ref: loadMoreButtonRef,\n          onClick: () => fetchNextPage(),\n          disabled: !hasNextPage || isFetchingNextPage,\n          children: isFetchingNextPage ? \"Loading more ....\" : hasNextPage ? \"Load More\" : \"Nothing more to load\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PublicFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ViewMoreOrganization, \"XFgn+IXzCNC7dVTc72KadhhwlNY=\", false, function () {\n  return [useParams, useInfiniteQuery, useIntersectionObserver];\n});\n\n_c = ViewMoreOrganization;\nexport default ViewMoreOrganization;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewMoreOrganization\");","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/public/ViewMoreOrganization.js"],"names":["React","useState","useRef","useParams","useInfiniteQuery","getDonorsOfMonthScrolling","getImplementersOfMonthScrolling","useIntersectionObserver","InputSearch","PublicHeader","OrganizationCard","PublicFooter","ViewMoreOrganization","searchText","setSearchText","limit","organization","loadMoreButtonRef","chooseOrganizationApi","pageParam","queryKey","data","fetchNextPage","hasNextPage","isFetchingNextPage","getNextPageParam","lastPage","pages","length","parseInt","page","target","onIntersect","enabled","charAt","toUpperCase","slice","map","group","i","index","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useInfiniteQuery } from \"react-query\";\nimport {\n  getDonorsOfMonthScrolling,\n  getImplementersOfMonthScrolling,\n} from \"../../apis/organizationApi\";\nimport useIntersectionObserver from \"../../helpers/useIntersectionObserver\";\nimport InputSearch from \"../../components/aidchannel/general/InputSearch\";\nimport PublicHeader from \"../../components/layout/header/PublicHeader\";\nimport OrganizationCard from \"../../components/aidchannel/organization/OrganizationCard\";\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\n\nconst ViewMoreOrganization = () => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [limit] = useState(9);\n\n  const { organization } = useParams();\n  const loadMoreButtonRef = useRef();\n\n  const chooseOrganizationApi = ({ pageParam = 1, queryKey }) => {\n    if (organization === \"donors\")\n      return getDonorsOfMonthScrolling({ pageParam: 1, queryKey });\n    else if (organization === \"implementers\")\n      return getImplementersOfMonthScrolling({ pageParam: 1, queryKey });\n    return null;\n  };\n\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n  } = useInfiniteQuery([searchText, limit], chooseOrganizationApi, {\n    getNextPageParam: (lastPage, pages) => {\n      if (lastPage.data.length === limit) return parseInt(lastPage.page) + 1;\n      return false;\n    },\n  });\n\n  useIntersectionObserver({\n    target: loadMoreButtonRef,\n    onIntersect: fetchNextPage,\n    enabled: hasNextPage,\n  });\n\n  return (\n    <>\n      <PublicHeader />\n      <div className=\"container\">\n        <h1 className=\"heading my-4\">\n          {organization.charAt(0).toUpperCase() + organization.slice(1)}\n          <span className=\"sub-heading\"> of the month </span>\n        </h1>\n        <InputSearch\n          setSearchText={setSearchText}\n          searchText={searchText}\n          placeholder={`Search for ${organization}`}\n        />\n        <div className=\"row\">\n          {data?.pages.map((group, i) => (\n            <React.Fragment key={i}>\n              {group.data.map((organization, index) => (\n                <div key={index} className=\"col-12 col-md-6 col-lg-4 my-4\">\n                  <OrganizationCard organization={organization} key={index} />\n                </div>\n              ))}\n            </React.Fragment>\n          ))}\n        </div>\n        <div style={{ marginTop: \"20px\" }}>\n          <button\n            ref={loadMoreButtonRef}\n            onClick={() => fetchNextPage()}\n            disabled={!hasNextPage || isFetchingNextPage}\n          >\n            {isFetchingNextPage\n              ? \"Loading more ....\"\n              : hasNextPage\n              ? \"Load More\"\n              : \"Nothing more to load\"}\n          </button>\n        </div>\n      </div>\n      <PublicFooter />\n    </>\n  );\n};\n\nexport default ViewMoreOrganization;\n"]},"metadata":{},"sourceType":"module"}