{"ast":null,"code":"var _jsxFileName = \"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/InterviewForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport JoditEditor from \"jodit-react\";\nimport Select from \"react-select\";\nimport { getCountryByCode } from \"../../../apis/countryApi\";\nimport \"./InterviewForm.css\";\nimport { getInterviewTtpe } from \"../../../apis/interviewTypeApi\";\nimport { getAllProjectsOfMonthByCountry } from \"../../../apis/projectApi\";\nimport { addInterview, getOneInterview, updateInterview } from \"../../../apis/interviewApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InterviewForm = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    codeCountry,\n    idInterview\n  } = useParams();\n  const editor = useRef(null);\n  const [content, setContent] = useState(\"\");\n  const [optionsInterviewType, setOptionsInterviewType] = useState();\n  const [interviewType, setInterviewType] = useState(null);\n  const [project, setProject] = useState(null);\n  const [optionsProject, setOptionsProject] = useState();\n  const config = {\n    readonly: false,\n    placeholder: \"Write Interview\"\n  };\n  const {\n    register,\n    handleSubmit,\n    setValue //formState: { errors },\n\n  } = useForm();\n  const getDataFromApi = useCallback(async () => {\n    const interviewTypes = await getInterviewTtpe();\n    setOptionsInterviewType(interviewTypes === null || interviewTypes === void 0 ? void 0 : interviewTypes.map(interType => {\n      return {\n        value: interType._id,\n        label: interType.name\n      };\n    }));\n    const projects = await getAllProjectsOfMonthByCountry(codeCountry);\n    setOptionsProject(projects === null || projects === void 0 ? void 0 : projects.map(proj => {\n      return {\n        value: proj._id,\n        label: proj.name\n      };\n    }));\n\n    if (idInterview !== undefined) {\n      var _interview$type_inter, _interview$type_inter2, _interview$project, _interview$project2;\n\n      const interview = await getOneInterview(idInterview);\n      setInterviewType({\n        value: interview === null || interview === void 0 ? void 0 : (_interview$type_inter = interview.type_interview) === null || _interview$type_inter === void 0 ? void 0 : _interview$type_inter._id,\n        label: interview === null || interview === void 0 ? void 0 : (_interview$type_inter2 = interview.type_interview) === null || _interview$type_inter2 === void 0 ? void 0 : _interview$type_inter2.name\n      });\n      setContent(interview === null || interview === void 0 ? void 0 : interview.interview);\n      setValue(\"name\", interview === null || interview === void 0 ? void 0 : interview.name);\n      setProject({\n        value: interview === null || interview === void 0 ? void 0 : (_interview$project = interview.project) === null || _interview$project === void 0 ? void 0 : _interview$project._id,\n        label: interview === null || interview === void 0 ? void 0 : (_interview$project2 = interview.project) === null || _interview$project2 === void 0 ? void 0 : _interview$project2.name\n      }); //setValue(\"organization_size\", subOrg?.organization_size);\n      //setValue(\"youtube_url\", subOrg?.youtube_url);\n    }\n  }, [idInterview, setValue, codeCountry]);\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const onSubmit = async data => {\n    const country = await getCountryByCode(codeCountry);\n    if (content === \"\") data.interview = null;else data.interview = content;\n    data.type_interview = interviewType === null || interviewType === void 0 ? void 0 : interviewType.value;\n    data.project = project === null || project === void 0 ? void 0 : project.value;\n    data.country = country._id;\n\n    if (idInterview !== undefined) {\n      await updateInterview(idInterview, data);\n    } else {\n      await addInterview(data);\n    }\n\n    history.push(`/web-master/interview/${codeCountry}`);\n  };\n\n  const handleChangeInterviewType = interviewType => {\n    setInterviewType(interviewType);\n  };\n\n  const handleChangeProject = project => {\n    setProject(project);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row pb-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"centralize mt-4 col-12 col-lg-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-org-form\",\n              type: \"text\",\n              id: \"name\",\n              spellCheck: \"false\",\n              ...register(\"name\", {\n                required: \"Name required\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"placeholder\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"ml-4 logo-file\",\n            htmlFor: \"logo\",\n            children: \"Interview Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"form-control-file ml-4 shadow-none logo-file\",\n            id: \"image_url\",\n            name: \"image_url\",\n            multiple: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-lg-6 centralize mt-4\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Select Interview Type\",\n            value: interviewType,\n            onChange: handleChangeInterviewType,\n            options: optionsInterviewType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-lg-6 centralize mt-4\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Select Project\",\n            value: project,\n            onChange: handleChangeProject,\n            options: optionsProject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 mt-4\",\n          children: /*#__PURE__*/_jsxDEV(JoditEditor, {\n            ref: editor,\n            value: content,\n            config: config,\n            tabIndex: 1,\n            onBlur: newContent => setContent(newContent)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit(onSubmit),\n          type: \"submit\",\n          className: \"btn btn-primary w-100 h-25 submit-login my-5 \",\n          children: idInterview !== undefined ? \"Edit Interview\" : \"Add Interview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InterviewForm, \"/Cw9jXuKle65/Zh2ORiUEkJ0oSA=\", false, function () {\n  return [useHistory, useParams, useForm];\n});\n\n_c = InterviewForm;\nexport default InterviewForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InterviewForm\");","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/InterviewForm.js"],"names":["React","useState","useRef","useEffect","useCallback","useHistory","useParams","useForm","JoditEditor","Select","getCountryByCode","getInterviewTtpe","getAllProjectsOfMonthByCountry","addInterview","getOneInterview","updateInterview","InterviewForm","history","codeCountry","idInterview","editor","content","setContent","optionsInterviewType","setOptionsInterviewType","interviewType","setInterviewType","project","setProject","optionsProject","setOptionsProject","config","readonly","placeholder","register","handleSubmit","setValue","getDataFromApi","interviewTypes","map","interType","value","_id","label","name","projects","proj","undefined","interview","type_interview","onSubmit","data","country","push","handleChangeInterviewType","handleChangeProject","required","newContent"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport JoditEditor from \"jodit-react\";\nimport Select from \"react-select\";\nimport { getCountryByCode } from \"../../../apis/countryApi\";\n\nimport \"./InterviewForm.css\";\nimport { getInterviewTtpe } from \"../../../apis/interviewTypeApi\";\nimport { getAllProjectsOfMonthByCountry } from \"../../../apis/projectApi\";\nimport {\n  addInterview,\n  getOneInterview,\n  updateInterview,\n} from \"../../../apis/interviewApi\";\n\nconst InterviewForm = () => {\n  const history = useHistory();\n  const { codeCountry, idInterview } = useParams();\n  const editor = useRef(null);\n  const [content, setContent] = useState(\"\");\n  const [optionsInterviewType, setOptionsInterviewType] = useState();\n  const [interviewType, setInterviewType] = useState(null);\n  const [project, setProject] = useState(null);\n  const [optionsProject, setOptionsProject] = useState();\n\n  const config = {\n    readonly: false,\n    placeholder: \"Write Interview\",\n  };\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    //formState: { errors },\n  } = useForm();\n\n  const getDataFromApi = useCallback(async () => {\n    const interviewTypes = await getInterviewTtpe();\n    setOptionsInterviewType(\n      interviewTypes?.map((interType) => {\n        return {\n          value: interType._id,\n          label: interType.name,\n        };\n      })\n    );\n    const projects = await getAllProjectsOfMonthByCountry(codeCountry);\n    setOptionsProject(\n      projects?.map((proj) => {\n        return {\n          value: proj._id,\n          label: proj.name,\n        };\n      })\n    );\n    if (idInterview !== undefined) {\n      const interview = await getOneInterview(idInterview);\n      setInterviewType({\n        value: interview?.type_interview?._id,\n        label: interview?.type_interview?.name,\n      });\n      setContent(interview?.interview);\n      setValue(\"name\", interview?.name);\n      setProject({\n        value: interview?.project?._id,\n        label: interview?.project?.name,\n      });\n      //setValue(\"organization_size\", subOrg?.organization_size);\n      //setValue(\"youtube_url\", subOrg?.youtube_url);\n    }\n  }, [idInterview, setValue, codeCountry]);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const onSubmit = async (data) => {\n    const country = await getCountryByCode(codeCountry);\n\n    if (content === \"\") data.interview = null;\n    else data.interview = content;\n    data.type_interview = interviewType?.value;\n    data.project = project?.value;\n    data.country = country._id;\n\n    if (idInterview !== undefined) {\n      await updateInterview(idInterview, data);\n    } else {\n      await addInterview(data);\n    }\n\n    history.push(`/web-master/interview/${codeCountry}`);\n  };\n\n  const handleChangeInterviewType = (interviewType) => {\n    setInterviewType(interviewType);\n  };\n\n  const handleChangeProject = (project) => {\n    setProject(project);\n  };\n\n  return (\n    <div className=\"container\">\n      <form>\n        <div className=\"row pb-5\">\n          <div className=\"centralize mt-4 col-12 col-lg-6\">\n            <div className=\"input-block\">\n              <input\n                className=\"input-org-form\"\n                type=\"text\"\n                id=\"name\"\n                spellCheck=\"false\"\n                {...register(\"name\", {\n                  required: \"Name required\",\n                })}\n              />\n              <span className=\"placeholder\">Name</span>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label className=\"ml-4 logo-file\" htmlFor=\"logo\">\n              Interview Image\n            </label>\n            <input\n              type=\"file\"\n              className=\"form-control-file ml-4 shadow-none logo-file\"\n              id=\"image_url\"\n              name=\"image_url\"\n              multiple={false}\n            />\n          </div>\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <Select\n              placeholder=\"Select Interview Type\"\n              value={interviewType}\n              onChange={handleChangeInterviewType}\n              options={optionsInterviewType}\n            />\n          </div>\n          <div className=\"col-12 col-lg-6 centralize mt-4\">\n            <Select\n              placeholder=\"Select Project\"\n              value={project}\n              onChange={handleChangeProject}\n              options={optionsProject}\n            />\n          </div>\n\n          <div className=\"col-12 mt-4\">\n            <JoditEditor\n              ref={editor}\n              value={content}\n              config={config}\n              tabIndex={1}\n              onBlur={(newContent) => setContent(newContent)}\n            />\n          </div>\n\n          <button\n            onClick={handleSubmit(onSubmit)}\n            type=\"submit\"\n            className=\"btn btn-primary w-100 h-25 submit-login my-5 \"\n          >\n            {idInterview !== undefined ? \"Edit Interview\" : \"Add Interview\"}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default InterviewForm;\n"]},"metadata":{},"sourceType":"module"}