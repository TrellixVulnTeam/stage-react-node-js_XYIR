{"ast":null,"code":"var _jsxFileName = \"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ViewMoreTweet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useInfiniteQuery } from \"react-query\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport InputSearch from \"../../components/aidchannel/general/InputSearch\";\nimport PublicHeader from \"../../components/layout/header/PublicHeader\";\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\nimport { gettweetsScrolling } from \"../../apis/twitterApi\";\nimport Post from \"../../components/aidchannel/tweets/Post\";\nimport useIntersectionObserver from \"../../helpers/useIntersectionObserver\";\nimport CountryHeader from \"components/layout/header/CountryHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ViewMoreTweet = () => {\n  _s();\n\n  const [searchText, setSearchText] = useState(\"\");\n  const [limit] = useState(9);\n  const loadMoreButtonRef = useRef();\n  const history = useHistory();\n  const {\n    codeCountry\n  } = useParams();\n  const [test, setTest] = useState(false);\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage\n  } = useInfiniteQuery([searchText, codeCountry, limit, test], gettweetsScrolling, {\n    getNextPageParam: (lastPage, pages) => {\n      if (lastPage.data.length === limit) return parseInt(lastPage.page) + 1;\n      return false;\n    }\n  });\n  useIntersectionObserver({\n    target: loadMoreButtonRef,\n    onIntersect: fetchNextPage,\n    enabled: hasNextPage\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CountryHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"heading my-4\",\n        children: [\"More\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sub-heading\",\n          children: \" Tweets \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSearch, {\n        setSearchText: setSearchText,\n        searchText: searchText,\n        placeholder: `Search for Tweets`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: data === null || data === void 0 ? void 0 : data.pages.map((group, i) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: group.data.map((tweet, index) => {\n            var _tweet$photos;\n\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12  p-2 col-lg-5 mx-auto mt-3 border\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                style: {\n                  textDecoration: \"none\"\n                },\n                href: `https://twitter.com/${tweet === null || tweet === void 0 ? void 0 : tweet.twitter_username}/status/${tweet === null || tweet === void 0 ? void 0 : tweet.tweet_id}`,\n                target: \"_blank\",\n                rel: \"noreferrer\",\n                children: /*#__PURE__*/_jsxDEV(Post, {\n                  displayName: tweet === null || tweet === void 0 ? void 0 : tweet.name,\n                  username: tweet === null || tweet === void 0 ? void 0 : tweet.twitter_username,\n                  verified: true,\n                  text: tweet === null || tweet === void 0 ? void 0 : tweet.body,\n                  avatar: tweet === null || tweet === void 0 ? void 0 : tweet.avatar_id,\n                  image: (tweet === null || tweet === void 0 ? void 0 : (_tweet$photos = tweet.photos) === null || _tweet$photos === void 0 ? void 0 : _tweet$photos.length) > 0 && tweet.photos[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this);\n          })\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          ref: loadMoreButtonRef,\n          onClick: () => fetchNextPage(),\n          disabled: !hasNextPage || isFetchingNextPage,\n          children: isFetchingNextPage ? \"Loading more ....\" : hasNextPage ? \"Load More\" : \"Nothing more to load\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PublicFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ViewMoreTweet, \"jshyfcU48U72UH1taiIVK3QGhYU=\", false, function () {\n  return [useHistory, useParams, useInfiniteQuery, useIntersectionObserver];\n});\n\n_c = ViewMoreTweet;\nexport default ViewMoreTweet;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewMoreTweet\");","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/country/ViewMoreTweet.js"],"names":["React","useState","useRef","useEffect","useCallback","useInfiniteQuery","useParams","useHistory","InputSearch","PublicHeader","PublicFooter","gettweetsScrolling","Post","useIntersectionObserver","CountryHeader","ViewMoreTweet","searchText","setSearchText","limit","loadMoreButtonRef","history","codeCountry","test","setTest","data","fetchNextPage","hasNextPage","isFetchingNextPage","getNextPageParam","lastPage","pages","length","parseInt","page","target","onIntersect","enabled","map","group","i","tweet","index","textDecoration","twitter_username","tweet_id","name","body","avatar_id","photos","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useInfiniteQuery } from \"react-query\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport InputSearch from \"../../components/aidchannel/general/InputSearch\";\nimport PublicHeader from \"../../components/layout/header/PublicHeader\";\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\n\nimport { gettweetsScrolling } from \"../../apis/twitterApi\";\nimport Post from \"../../components/aidchannel/tweets/Post\";\nimport useIntersectionObserver from \"../../helpers/useIntersectionObserver\";\nimport CountryHeader from \"components/layout/header/CountryHeader\";\n\nconst ViewMoreTweet = () => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [limit] = useState(9);\n  const loadMoreButtonRef = useRef();\n  const history = useHistory();\n  const { codeCountry } = useParams();\n\n  const [test, setTest] = useState(false);\n\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n  } = useInfiniteQuery(\n    [searchText, codeCountry, limit, test],\n    gettweetsScrolling,\n    {\n      getNextPageParam: (lastPage, pages) => {\n        if (lastPage.data.length === limit) return parseInt(lastPage.page) + 1;\n        return false;\n      },\n    }\n  );\n  useIntersectionObserver({\n    target: loadMoreButtonRef,\n    onIntersect: fetchNextPage,\n    enabled: hasNextPage,\n  });\n\n  return (\n    <>\n      <CountryHeader />\n      <div className=\"container\">\n        <h1 className=\"heading my-4\">\n          More\n          <span className=\"sub-heading\"> Tweets </span>\n        </h1>\n        <InputSearch\n          setSearchText={setSearchText}\n          searchText={searchText}\n          placeholder={`Search for Tweets`}\n        />\n\n        <div className=\"row\">\n          {data?.pages.map((group, i) => (\n            <React.Fragment key={i}>\n              {group.data.map((tweet, index) => (\n                <div\n                  key={index}\n                  className=\"col-12  p-2 col-lg-5 mx-auto mt-3 border\"\n                >\n                  <a\n                    style={{ textDecoration: \"none\" }}\n                    href={`https://twitter.com/${tweet?.twitter_username}/status/${tweet?.tweet_id}`}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    <Post\n                      displayName={tweet?.name}\n                      username={tweet?.twitter_username}\n                      verified={true}\n                      text={tweet?.body}\n                      avatar={tweet?.avatar_id}\n                      image={tweet?.photos?.length > 0 && tweet.photos[0]}\n                    />\n                  </a>\n                </div>\n              ))}\n            </React.Fragment>\n          ))}\n        </div>\n\n        <div style={{ marginTop: \"20px\" }}>\n          <button\n            ref={loadMoreButtonRef}\n            onClick={() => fetchNextPage()}\n            disabled={!hasNextPage || isFetchingNextPage}\n          >\n            {isFetchingNextPage\n              ? \"Loading more ....\"\n              : hasNextPage\n              ? \"Load More\"\n              : \"Nothing more to load\"}\n          </button>\n        </div>\n      </div>\n      <PublicFooter />\n    </>\n  );\n};\n\nexport default ViewMoreTweet;\n"]},"metadata":{},"sourceType":"module"}