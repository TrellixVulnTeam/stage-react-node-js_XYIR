{"ast":null,"code":"var _jsxFileName = \"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/public/ViewMoreExpert.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { useInfiniteQuery } from \"react-query\";\nimport useIntersectionObserver from \"../../helpers/useIntersectionObserver\";\nimport InputSearch from \"../../components/aidchannel/general/InputSearch\";\nimport PublicHeader from \"../../components/layout/header/PublicHeader\";\nimport { getExpertsofMonthScrolling } from \"../../apis/userApi\";\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\nimport ExpertCard from \"../../components/aidchannel/expert/ExpertCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ViewMoreExpert = () => {\n  _s();\n\n  const [searchText, setSearchText] = useState(\"\");\n  const [limit] = useState(9);\n  const loadMoreButtonRef = useRef();\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage\n  } = useInfiniteQuery([searchText, limit], getExpertsofMonthScrolling, {\n    getNextPageParam: (lastPage, pages) => {\n      if (lastPage.data.length === limit) return parseInt(lastPage.page) + 1;\n      return false;\n    }\n  });\n  useIntersectionObserver({\n    target: loadMoreButtonRef,\n    onIntersect: fetchNextPage,\n    enabled: hasNextPage\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PublicHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"heading my-4\",\n        children: [\"Experts\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sub-heading\",\n          children: \" of the month \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSearch, {\n        setSearchText: setSearchText,\n        searchText: searchText,\n        placeholder: `Search for experts`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: data === null || data === void 0 ? void 0 : data.pages.map((group, i) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: group.data.map((expert, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-md-6 col-lg-4 my-4\",\n            children: /*#__PURE__*/_jsxDEV(ExpertCard, {\n              expert: expert\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this))\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          ref: loadMoreButtonRef,\n          onClick: () => fetchNextPage(),\n          disabled: !hasNextPage || isFetchingNextPage,\n          children: isFetchingNextPage ? \"Loading more ....\" : hasNextPage ? \"Load More\" : \"Nothing more to load\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PublicFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ViewMoreExpert, \"ifLWwW738F2ElKr6tHS5R/eok7E=\", false, function () {\n  return [useInfiniteQuery, useIntersectionObserver];\n});\n\n_c = ViewMoreExpert;\nexport default ViewMoreExpert;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewMoreExpert\");","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/public/ViewMoreExpert.js"],"names":["React","useState","useRef","useInfiniteQuery","useIntersectionObserver","InputSearch","PublicHeader","getExpertsofMonthScrolling","PublicFooter","ExpertCard","ViewMoreExpert","searchText","setSearchText","limit","loadMoreButtonRef","data","fetchNextPage","hasNextPage","isFetchingNextPage","getNextPageParam","lastPage","pages","length","parseInt","page","target","onIntersect","enabled","map","group","i","expert","index","marginTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,OAAOC,uBAAP,MAAoC,uCAApC;AACA,OAAOC,WAAP,MAAwB,iDAAxB;AACA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,SAASC,0BAAT,QAA2C,oBAA3C;AACA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,OAAOC,UAAP,MAAuB,+CAAvB;;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACY,KAAD,IAAUZ,QAAQ,CAAC,CAAD,CAAxB;AAEA,QAAMa,iBAAiB,GAAGZ,MAAM,EAAhC;AAEA,QAAM;AACJa,IAAAA,IADI;AAEJC,IAAAA,aAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA;AAJI,MAKFf,gBAAgB,CAAC,CAACQ,UAAD,EAAaE,KAAb,CAAD,EAAsBN,0BAAtB,EAAkD;AACpEY,IAAAA,gBAAgB,EAAE,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACrC,UAAID,QAAQ,CAACL,IAAT,CAAcO,MAAd,KAAyBT,KAA7B,EAAoC,OAAOU,QAAQ,CAACH,QAAQ,CAACI,IAAV,CAAR,GAA0B,CAAjC;AACpC,aAAO,KAAP;AACD;AAJmE,GAAlD,CALpB;AAYApB,EAAAA,uBAAuB,CAAC;AACtBqB,IAAAA,MAAM,EAAEX,iBADc;AAEtBY,IAAAA,WAAW,EAAEV,aAFS;AAGtBW,IAAAA,OAAO,EAAEV;AAHa,GAAD,CAAvB;AAMA,sBACE;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,2CAEE;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,WAAD;AACE,QAAA,aAAa,EAAEL,aADjB;AAEE,QAAA,UAAU,EAAED,UAFd;AAGE,QAAA,WAAW,EAAG;AAHhB;AAAA;AAAA;AAAA;AAAA,cALF,eAUE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACGI,IADH,aACGA,IADH,uBACGA,IAAI,CAAEM,KAAN,CAAYO,GAAZ,CAAgB,CAACC,KAAD,EAAQC,CAAR,kBACf,QAAC,KAAD,CAAO,QAAP;AAAA,oBACGD,KAAK,CAACd,IAAN,CAAWa,GAAX,CAAe,CAACG,MAAD,EAASC,KAAT,kBACd;AAAiB,YAAA,SAAS,EAAC,+BAA3B;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,MAAM,EAAED;AAApB,eAAiCC,KAAjC;AAAA;AAAA;AAAA;AAAA;AADF,aAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,kBADD;AADH,WAAqBF,CAArB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAVF,eAqBE;AAAK,QAAA,KAAK,EAAE;AAAEG,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA,+BACE;AACE,UAAA,GAAG,EAAEnB,iBADP;AAEE,UAAA,OAAO,EAAE,MAAME,aAAa,EAF9B;AAGE,UAAA,QAAQ,EAAE,CAACC,WAAD,IAAgBC,kBAH5B;AAAA,oBAKGA,kBAAkB,GACf,mBADe,GAEfD,WAAW,GACX,WADW,GAEX;AATN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAqCE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YArCF;AAAA,kBADF;AAyCD,CAjED;;GAAMP,c;UAWAP,gB,EAOJC,uB;;;KAlBIM,c;AAmEN,eAAeA,cAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { useInfiniteQuery } from \"react-query\";\nimport useIntersectionObserver from \"../../helpers/useIntersectionObserver\";\nimport InputSearch from \"../../components/aidchannel/general/InputSearch\";\nimport PublicHeader from \"../../components/layout/header/PublicHeader\";\nimport { getExpertsofMonthScrolling } from \"../../apis/userApi\";\nimport PublicFooter from \"../../components/layout/footer/PublicFooter\";\nimport ExpertCard from \"../../components/aidchannel/expert/ExpertCard\";\n\nconst ViewMoreExpert = () => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [limit] = useState(9);\n\n  const loadMoreButtonRef = useRef();\n\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n  } = useInfiniteQuery([searchText, limit], getExpertsofMonthScrolling, {\n    getNextPageParam: (lastPage, pages) => {\n      if (lastPage.data.length === limit) return parseInt(lastPage.page) + 1;\n      return false;\n    },\n  });\n\n  useIntersectionObserver({\n    target: loadMoreButtonRef,\n    onIntersect: fetchNextPage,\n    enabled: hasNextPage,\n  });\n\n  return (\n    <>\n      <PublicHeader />\n      <div className=\"container\">\n        <h1 className=\"heading my-4\">\n          Experts\n          <span className=\"sub-heading\"> of the month </span>\n        </h1>\n        <InputSearch\n          setSearchText={setSearchText}\n          searchText={searchText}\n          placeholder={`Search for experts`}\n        />\n        <div className=\"row\">\n          {data?.pages.map((group, i) => (\n            <React.Fragment key={i}>\n              {group.data.map((expert, index) => (\n                <div key={index} className=\"col-12 col-md-6 col-lg-4 my-4\">\n                  <ExpertCard expert={expert} key={index} />\n                </div>\n              ))}\n            </React.Fragment>\n          ))}\n        </div>\n        <div style={{ marginTop: \"20px\" }}>\n          <button\n            ref={loadMoreButtonRef}\n            onClick={() => fetchNextPage()}\n            disabled={!hasNextPage || isFetchingNextPage}\n          >\n            {isFetchingNextPage\n              ? \"Loading more ....\"\n              : hasNextPage\n              ? \"Load More\"\n              : \"Nothing more to load\"}\n          </button>\n        </div>\n      </div>\n      <PublicFooter />\n    </>\n  );\n};\n\nexport default ViewMoreExpert;\n"]},"metadata":{},"sourceType":"module"}