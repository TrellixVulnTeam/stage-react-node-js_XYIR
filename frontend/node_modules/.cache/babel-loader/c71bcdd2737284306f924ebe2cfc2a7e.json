{"ast":null,"code":"var _jsxFileName = \"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/MtableExpert.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { enableExpertOfMonth, disabledExpertOfMonth, getExpert, getAllExpertsByCountry } from \"apis/userApi\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Avatar, Grid, Typography, TablePagination, TableFooter, Checkbox } from \"@material-ui/core\";\nimport { getCountryByCode } from \"apis/countryApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  table: {// minWidth: 650,\n  },\n  tableContainer: {\n    borderRadius: 15,\n    margin: \"10px 10px\" // maxWidth: 950,\n\n  },\n  tableHeaderCell: {\n    width: \"25%\",\n    fontWeight: \"bold\",\n    backgroundColor: \"black\",\n    color: theme.palette.getContrastText(theme.palette.primary.dark)\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.getContrastText(theme.palette.primary.light)\n  },\n  name: {\n    fontWeight: \"bold\",\n    color: theme.palette.secondary.dark\n  },\n  status: {\n    fontWeight: \"bold\",\n    fontSize: \"0.75rem\",\n    color: \"white\",\n    backgroundColor: \"grey\",\n    borderRadius: 8,\n    padding: \"3px 10px\",\n    display: \"inline-block\"\n  }\n}));\n\nconst MTableExpert = ({\n  deleteRow\n}) => {\n  _s();\n\n  var _experts$slice;\n\n  const [checked, setChecked] = useState(false);\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const {\n    codeCountry,\n    idExpert\n  } = useParams();\n  const [country, setCountry] = useState();\n  const [experts, setExperts] = useState([]);\n  const getDataFromApi = useCallback(async () => {\n    const country = await getCountryByCode(codeCountry);\n    setCountry(country);\n    const expert = await getAllExpertsByCountry(codeCountry);\n    setExperts(expert === null || expert === void 0 ? void 0 : expert.reverse());\n  }, []);\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi, checked]);\n  const history = useHistory();\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleChangeCheckbox = async expert => {\n    if (expert.expert_of_month === true) {\n      await disabledExpertOfMonth(expert._id);\n    } else {\n      await enableExpertOfMonth(expert._id);\n    }\n\n    setChecked(!checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    className: classes.tableContainer,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            className: classes.tableHeaderCell,\n            style: {\n              width: \"25%\"\n            },\n            children: \"FullName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            className: classes.tableHeaderCell,\n            style: {\n              width: \"15%\"\n            },\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            className: classes.tableHeaderCell,\n            style: {\n              width: \"10%\"\n            },\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            className: classes.tableHeaderCell,\n            style: {\n              width: \"10%\"\n            },\n            children: \"Expert of the month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            className: classes.tableHeaderCell,\n            style: {\n              width: \"15%\"\n            },\n            children: [\" \", \"Expert's Article\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(TableCell, {\n            className: classes.tableHeaderCell,\n            style: {\n              width: \"10%\"\n            },\n            children: [\" \", \"Delete\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: experts === null || experts === void 0 ? void 0 : (_experts$slice = experts.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)) === null || _experts$slice === void 0 ? void 0 : _experts$slice.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                lg: 2,\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  alt: row.name,\n                  src: row.logo,\n                  className: classes.avatar\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                lg: 10,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.name,\n                  children: row.fullname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"primary\",\n              variant: \"subtitle2\",\n              children: row === null || row === void 0 ? void 0 : row.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"body2\",\n              children: row === null || row === void 0 ? void 0 : row.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: (row === null || row === void 0 ? void 0 : row.expert_of_month) === true ? \"btn btn-success shadow-none\" : \"btn btn-primary shadow-none\",\n              onClick: () => handleChangeCheckbox(row),\n              children: (row === null || row === void 0 ? void 0 : row.expert_of_month) === true ? \"Yes\" : \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => history.push(`/web-master/add-expert-article/${codeCountry}/${row._id}`),\n              className: \"btn btn-warning  mt-3  shadow-none\",\n              children: \"Add / Edit Article\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger shadow-none\",\n              onClick: () => deleteRow(row),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this)]\n        }, row.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n        children: /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [5, 10, 15],\n          count: experts.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MTableExpert, \"A+A3SMIAdNemHx5p9/0/ddKElRE=\", false, function () {\n  return [useStyles, useParams, useHistory];\n});\n\n_c = MTableExpert;\nexport default MTableExpert;\n\nvar _c;\n\n$RefreshReg$(_c, \"MTableExpert\");","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/MtableExpert.js"],"names":["React","useState","useRef","useEffect","useCallback","enableExpertOfMonth","disabledExpertOfMonth","getExpert","getAllExpertsByCountry","Link","useHistory","useParams","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Avatar","Grid","Typography","TablePagination","TableFooter","Checkbox","getCountryByCode","useStyles","theme","table","tableContainer","borderRadius","margin","tableHeaderCell","width","fontWeight","backgroundColor","color","palette","getContrastText","primary","dark","avatar","light","name","secondary","status","fontSize","padding","display","MTableExpert","deleteRow","checked","setChecked","classes","page","setPage","rowsPerPage","setRowsPerPage","codeCountry","idExpert","country","setCountry","experts","setExperts","getDataFromApi","expert","reverse","history","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","handleChangeCheckbox","expert_of_month","_id","slice","map","row","logo","fullname","email","phone","push","length"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport {\n  enableExpertOfMonth,\n  disabledExpertOfMonth,\n  getExpert,\n  getAllExpertsByCountry,\n} from \"apis/userApi\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Avatar,\n  Grid,\n  Typography,\n  TablePagination,\n  TableFooter,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { getCountryByCode } from \"apis/countryApi\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    // minWidth: 650,\n  },\n  tableContainer: {\n    borderRadius: 15,\n    margin: \"10px 10px\",\n    // maxWidth: 950,\n  },\n  tableHeaderCell: {\n    width: \"25%\",\n    fontWeight: \"bold\",\n    backgroundColor: \"black\",\n    color: theme.palette.getContrastText(theme.palette.primary.dark),\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.getContrastText(theme.palette.primary.light),\n  },\n  name: {\n    fontWeight: \"bold\",\n    color: theme.palette.secondary.dark,\n  },\n  status: {\n    fontWeight: \"bold\",\n    fontSize: \"0.75rem\",\n    color: \"white\",\n    backgroundColor: \"grey\",\n    borderRadius: 8,\n    padding: \"3px 10px\",\n    display: \"inline-block\",\n  },\n}));\n\nconst MTableExpert = ({ deleteRow }) => {\n  const [checked, setChecked] = useState(false);\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const { codeCountry, idExpert } = useParams();\n  const [country, setCountry] = useState();\n  const [experts, setExperts] = useState([]);\n\n  const getDataFromApi = useCallback(async () => {\n    const country = await getCountryByCode(codeCountry);\n    setCountry(country);\n    const expert = await getAllExpertsByCountry(codeCountry);\n    setExperts(expert?.reverse());\n  }, []);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi, checked]);\n\n  const history = useHistory();\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const handleChangeCheckbox = async (expert) => {\n    if (expert.expert_of_month === true) {\n      await disabledExpertOfMonth(expert._id);\n    } else {\n      await enableExpertOfMonth(expert._id);\n    }\n    setChecked(!checked);\n  };\n  return (\n    <TableContainer component={Paper} className={classes.tableContainer}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell\n              className={classes.tableHeaderCell}\n              style={{ width: \"25%\" }}\n            >\n              FullName\n            </TableCell>\n            <TableCell\n              className={classes.tableHeaderCell}\n              style={{ width: \"15%\" }}\n            >\n              Email\n            </TableCell>\n            <TableCell\n              className={classes.tableHeaderCell}\n              style={{ width: \"10%\" }}\n            >\n              Phone\n            </TableCell>\n            <TableCell\n              className={classes.tableHeaderCell}\n              style={{ width: \"10%\" }}\n            >\n              Expert of the month\n            </TableCell>\n            <TableCell\n              className={classes.tableHeaderCell}\n              style={{ width: \"15%\" }}\n            >\n              {\" \"}\n              Expert's Article\n            </TableCell>{\" \"}\n            <TableCell\n              className={classes.tableHeaderCell}\n              style={{ width: \"10%\" }}\n            >\n              {\" \"}\n              Delete\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {experts\n            ?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            ?.map((row) => (\n              <TableRow key={row.name}>\n                <TableCell>\n                  <Grid container>\n                    <Grid item lg={2}>\n                      <Avatar\n                        alt={row.name}\n                        src={row.logo}\n                        className={classes.avatar}\n                      />\n                    </Grid>\n                    <Grid item lg={10}>\n                      <Typography className={classes.name}>\n                        {row.fullname}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"primary\" variant=\"subtitle2\">\n                    {row?.email}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography color=\"textSecondary\" variant=\"body2\">\n                    {row?.phone}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <button\n                    className={\n                      row?.expert_of_month === true\n                        ? \"btn btn-success shadow-none\"\n                        : \"btn btn-primary shadow-none\"\n                    }\n                    onClick={() => handleChangeCheckbox(row)}\n                  >\n                    {row?.expert_of_month === true ? \"Yes\" : \"No\"}\n                  </button>\n                </TableCell>\n                <TableCell>\n                  <button\n                    onClick={() =>\n                      history.push(\n                        `/web-master/add-expert-article/${codeCountry}/${row._id}`\n                      )\n                    }\n                    className=\"btn btn-warning  mt-3  shadow-none\"\n                  >\n                    Add / Edit Article\n                  </button>\n                </TableCell>{\" \"}\n                <TableCell>\n                  <button\n                    className=\"btn btn-danger shadow-none\"\n                    onClick={() => deleteRow(row)}\n                  >\n                    Delete\n                  </button>\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n        <TableFooter>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 15]}\n            count={experts.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default MTableExpert;\n"]},"metadata":{},"sourceType":"module"}