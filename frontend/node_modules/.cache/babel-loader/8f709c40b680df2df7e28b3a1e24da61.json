{"ast":null,"code":"var _jsxFileName = \"/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/ListAddedUsers.js\",\n    _s = $RefreshSig$();\n\nimport TableOrganization from \"components/aidchannel/webmaster/TableOrganization\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Flag from \"react-world-flags\";\nimport { getCountryByCode } from \"../../apis/countryApi\";\nimport { deleteOrganization, getAllOrganizationsByCountry } from \"../../apis/organizationApi\";\nimport MTableOrganization from \"../../components/aidchannel/webmaster/MTableOrganization\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ListAddedUsers = () => {\n  _s();\n\n  //   const history = useHistory();\n  const {\n    codeCountry\n  } = useParams();\n  const [country, setCountry] = useState();\n  const [organizations, setOrganizations] = useState([]);\n  const orgTableRef = /*#__PURE__*/React.createRef();\n  const history = useHistory(); //   const { codeCountry } = useParams();\n\n  const reloadTableData = () => {\n    orgTableRef.current.onQueryChange();\n  };\n\n  const getDataFromApi = useCallback(async () => {\n    const country = await getCountryByCode(codeCountry);\n    setCountry(country);\n    const subOrganization = await getAllOrganizationsByCountry(codeCountry);\n    setOrganizations(subOrganization === null || subOrganization === void 0 ? void 0 : subOrganization.reverse());\n  }, [codeCountry]);\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi, codeCountry]);\n\n  const deleteSubOrg = async org => {\n    if (window.confirm(`Are you sure you wish to delete ${org.name} ?`)) {\n      try {\n        await deleteOrganization(org._id);\n        const newOrganizationList = organizations.filter(function (item) {\n          if (item[\"_id\"] === (org === null || org === void 0 ? void 0 : org._id)) return false;\n          return true;\n        });\n        setOrganizations(newOrganizationList);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: country && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"tableRef=\", orgTableRef, \"title=\\\"List of experts\\\" columns=\", [{\n        field: \"image_url\",\n        title: \"Profil\",\n        render: rowData => /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img-fluid\",\n          src: urlImageAdapter(rowData === null || rowData === void 0 ? void 0 : rowData.image_url),\n          style: {\n            verticalAlign: \"middle\",\n            width: \"50px\",\n            height: \"50px\",\n            borderRadius: \"50%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this),\n        cellStyle: {\n          width: \"15%\",\n          textAlign: \"center\"\n        }\n      }, {\n        title: \"Full Name\",\n        field: \"fullname\",\n        cellStyle: {\n          width: \"25%\",\n          textAlign: \"center\"\n        }\n      }, {\n        title: \"Email\",\n        field: \"email\",\n        cellStyle: {\n          width: \"25%\",\n          textAlign: \"center\"\n        }\n      }, {\n        title: \"Phone\",\n        field: \"phone\",\n        cellStyle: {\n          width: \"25%\",\n          textAlign: \"center\"\n        }\n      }, {\n        title: \"Expert of the month\",\n        field: \"expert_of_month\",\n        cellStyle: {\n          width: \"25%\",\n          textAlign: \"center\"\n        }\n      }], \"data=\", query => new Promise((resolve, reject) => {\n        let url = `${process.env.REACT_APP_BACKEND}user/expertsByCodeCountryPagination/${codeCountry}?`;\n        url += \"limit=\" + query.pageSize;\n        url += \"&page=\" + (query.page + 1);\n        axios.post(url, {\n          searchText: query.search\n        }).then(result => {\n          resolve({\n            data: result.data.data,\n            page: result.data.page - 1,\n            totalCount: result.data.totalCount\n          });\n        });\n      }), \"options=\", {\n        filtering: false,\n        search: true,\n        sorting: false,\n        headerStyle: {\n          backgroundColor: \"#0069d9\",\n          textAlign: \"center\",\n          color: \"white\"\n        },\n        actionsColumnIndex: -1\n      }, \"actions=\", [{\n        icon: \"refresh\",\n        tooltip: \"Refresh Data\",\n        isFreeAction: true,\n        onClick: () => orgTableRef.current && orgTableRef.current.onQueryChange()\n      }, {\n        icon: () => /*#__PURE__*/_jsxDEV(FaRegEdit, {\n          size: 30,\n          color: \"#ffc107\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 27\n        }, this),\n        tooltip: \"Edit Expert\",\n        onClick: (event, expert) => {\n          history.push(`/web-master/edit-Expert/${codeCountry}/${expert === null || expert === void 0 ? void 0 : expert._id}`);\n        }\n      }, {\n        icon: () => /*#__PURE__*/_jsxDEV(FcCalendar, {\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 27\n        }, this),\n        tooltip: \"Expert of the month\",\n        onClick: (event, interview) => {\n          history.push(`/web-master/add-expert-article/${codeCountry}/${interview === null || interview === void 0 ? void 0 : interview._id}`);\n        }\n      }, {\n        icon: () => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger border-none shadow-none\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }, this),\n        onClick: async (event, user) => {\n          if (window.confirm(`Are you sure you wish to delete ${user.fullname} ?`)) {\n            try {\n              await deleteExpert(user === null || user === void 0 ? void 0 : user._id);\n              reloadTableData();\n              reloadTableData();\n            } catch (error) {\n              console.log(error);\n            }\n          }\n        }\n      }]]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListAddedUsers, \"Eu22z5e8an1n6+zMDJHvvLOz+hA=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = ListAddedUsers;\nexport default ListAddedUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListAddedUsers\");","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/pages/webmaster/ListAddedUsers.js"],"names":["TableOrganization","React","useState","useEffect","useCallback","useHistory","useParams","Flag","getCountryByCode","deleteOrganization","getAllOrganizationsByCountry","MTableOrganization","ListAddedUsers","codeCountry","country","setCountry","organizations","setOrganizations","orgTableRef","createRef","history","reloadTableData","current","onQueryChange","getDataFromApi","subOrganization","reverse","deleteSubOrg","org","window","confirm","name","_id","newOrganizationList","filter","item","error","console","log","field","title","render","rowData","urlImageAdapter","image_url","verticalAlign","width","height","borderRadius","cellStyle","textAlign","query","Promise","resolve","reject","url","process","env","REACT_APP_BACKEND","pageSize","page","axios","post","searchText","search","then","result","data","totalCount","filtering","sorting","headerStyle","backgroundColor","color","actionsColumnIndex","icon","tooltip","isFreeAction","onClick","event","expert","push","interview","user","fullname","deleteExpert"],"mappings":"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","sourcesContent":["import TableOrganization from \"components/aidchannel/webmaster/TableOrganization\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Flag from \"react-world-flags\";\nimport { getCountryByCode } from \"../../apis/countryApi\";\nimport {\n  deleteOrganization,\n  getAllOrganizationsByCountry,\n} from \"../../apis/organizationApi\";\nimport MTableOrganization from \"../../components/aidchannel/webmaster/MTableOrganization\";\n\nconst ListAddedUsers = () => {\n  //   const history = useHistory();\n  const { codeCountry } = useParams();\n  const [country, setCountry] = useState();\n  const [organizations, setOrganizations] = useState([]);\n\n  const orgTableRef = React.createRef();\n  const history = useHistory();\n  //   const { codeCountry } = useParams();\n\n  const reloadTableData = () => {\n    orgTableRef.current.onQueryChange();\n  };\n\n  const getDataFromApi = useCallback(async () => {\n    const country = await getCountryByCode(codeCountry);\n    setCountry(country);\n    const subOrganization = await getAllOrganizationsByCountry(codeCountry);\n    setOrganizations(subOrganization?.reverse());\n  }, [codeCountry]);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi, codeCountry]);\n\n  const deleteSubOrg = async (org) => {\n    if (window.confirm(`Are you sure you wish to delete ${org.name} ?`)) {\n      try {\n        await deleteOrganization(org._id);\n        const newOrganizationList = organizations.filter(function(item) {\n          if (item[\"_id\"] === org?._id) return false;\n          return true;\n        });\n        setOrganizations(newOrganizationList);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      {country && (\n        <>\n          tableRef={orgTableRef}\n          title=\"List of experts\" columns=\n          {[\n            {\n              field: \"image_url\",\n              title: \"Profil\",\n              render: (rowData) => (\n                <img\n                  className=\"img-fluid\"\n                  src={urlImageAdapter(rowData?.image_url)}\n                  style={{\n                    verticalAlign: \"middle\",\n                    width: \"50px\",\n                    height: \"50px\",\n                    borderRadius: \"50%\",\n                  }}\n                />\n              ),\n              cellStyle: {\n                width: \"15%\",\n                textAlign: \"center\",\n              },\n            },\n            {\n              title: \"Full Name\",\n              field: \"fullname\",\n              cellStyle: {\n                width: \"25%\",\n\n                textAlign: \"center\",\n              },\n            },\n            {\n              title: \"Email\",\n              field: \"email\",\n              cellStyle: {\n                width: \"25%\",\n\n                textAlign: \"center\",\n              },\n            },\n            {\n              title: \"Phone\",\n              field: \"phone\",\n              cellStyle: {\n                width: \"25%\",\n                textAlign: \"center\",\n              },\n            },\n            {\n              title: \"Expert of the month\",\n              field: \"expert_of_month\",\n              cellStyle: {\n                width: \"25%\",\n                textAlign: \"center\",\n              },\n            },\n          ]}\n          data=\n          {(query) =>\n            new Promise((resolve, reject) => {\n              let url = `${process.env.REACT_APP_BACKEND}user/expertsByCodeCountryPagination/${codeCountry}?`;\n              url += \"limit=\" + query.pageSize;\n              url += \"&page=\" + (query.page + 1);\n              axios\n                .post(url, {\n                  searchText: query.search,\n                })\n                .then((result) => {\n                  resolve({\n                    data: result.data.data,\n                    page: result.data.page - 1,\n                    totalCount: result.data.totalCount,\n                  });\n                });\n            })\n          }\n          options=\n          {{\n            filtering: false,\n            search: true,\n            sorting: false,\n            headerStyle: {\n              backgroundColor: \"#0069d9\",\n              textAlign: \"center\",\n              color: \"white\",\n            },\n            actionsColumnIndex: -1,\n          }}\n          actions=\n          {[\n            {\n              icon: \"refresh\",\n              tooltip: \"Refresh Data\",\n              isFreeAction: true,\n              onClick: () =>\n                orgTableRef.current && orgTableRef.current.onQueryChange(),\n            },\n\n            {\n              icon: () => <FaRegEdit size={30} color=\"#ffc107\" />,\n              tooltip: \"Edit Expert\",\n              onClick: (event, expert) => {\n                history.push(\n                  `/web-master/edit-Expert/${codeCountry}/${expert?._id}`\n                );\n              },\n            },\n            {\n              icon: () => <FcCalendar size={30} />,\n              tooltip: \"Expert of the month\",\n              onClick: (event, interview) => {\n                history.push(\n                  `/web-master/add-expert-article/${codeCountry}/${interview?._id}`\n                );\n              },\n            },\n            {\n              icon: () => (\n                <button className=\"btn btn-danger border-none shadow-none\">\n                  Delete\n                </button>\n              ),\n              onClick: async (event, user) => {\n                if (\n                  window.confirm(\n                    `Are you sure you wish to delete ${user.fullname} ?`\n                  )\n                ) {\n                  try {\n                    await deleteExpert(user?._id);\n                    reloadTableData();\n                    reloadTableData();\n                  } catch (error) {\n                    console.log(error);\n                  }\n                }\n              },\n            },\n          ]}\n          {/* </div> */}\n          {/* <TableOrganization /> */}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ListAddedUsers;\n"]},"metadata":{},"sourceType":"module"}