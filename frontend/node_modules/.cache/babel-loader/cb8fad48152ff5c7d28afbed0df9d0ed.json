{"ast":null,"code":"var _jsxFileName = \"/Users/yasmine/Desktop/stage/aidchannel-front/src/helpers/SecureRouteLink.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport isLogin from \"./authorization\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SecureRouteLink = props => {\n  _s();\n\n  const [isLogged] = useState(isLogin);\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: props.path,\n    render: data => isLogged ? /*#__PURE__*/_jsxDEV(props.component, { ...data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/linkdin/login\",\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SecureRouteLink, \"Pgg9fjYRHKgMqpXgKlFYrTVdJkE=\");\n\n_c = SecureRouteLink;\nexport default SecureRouteLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"SecureRouteLink\");","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/helpers/SecureRouteLink.js"],"names":["React","useState","Redirect","Route","isLogin","SecureRouteLink","props","isLogged","path","data","pathname","state","from","location"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,OAAOC,OAAP,MAAoB,iBAApB;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAM,CAACC,QAAD,IAAaN,QAAQ,CAACG,OAAD,CAA3B;AACA,sBACE,QAAC,KAAD;AACE,IAAA,IAAI,EAAEE,KAAK,CAACE,IADd;AAEE,IAAA,MAAM,EAAGC,IAAD,IACNF,QAAQ,gBACN,QAAC,KAAD,CAAO,SAAP,OAAqBE;AAArB;AAAA;AAAA;AAAA;AAAA,YADM,gBAGN,QAAC,QAAD;AACE,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE,gBAAZ;AAA8BC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEN,KAAK,CAACO;AAAd;AAArC;AADN;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAhBD;;GAAMR,e;;KAAAA,e;AAkBN,eAAeA,eAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport isLogin from \"./authorization\";\n\nconst SecureRouteLink = (props) => {\n  const [isLogged] = useState(isLogin);\n  return (\n    <Route\n      path={props.path}\n      render={(data) =>\n        isLogged ? (\n          <props.component {...data}></props.component>\n        ) : (\n          <Redirect\n            to={{ pathname: \"/linkdin/login\", state: { from: props.location } }}\n          ></Redirect>\n        )\n      }\n    ></Route>\n  );\n};\n\nexport default SecureRouteLink;\n"]},"metadata":{},"sourceType":"module"}