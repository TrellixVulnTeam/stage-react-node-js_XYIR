{"ast":null,"code":"import axios from \"axios\";\nconst axiosClient = axios.create();\naxiosClient.defaults.baseURL = process.env.REACT_APP_BACKEND;\naxiosClient.defaults.headers = {\n  \"Content-Type\": \"application/json\",\n  Accept: \"application/json\"\n}; //All request will wait 2 seconds before timeout\n//axiosClient.defaults.timeout = 2000;\n//axiosClient.defaults.withCredentials = true;\n\nconst requestHandler = request => {\n  // Token will be dynamic so we can use any app-specific way to always\n  // fetch the new token before making the call\n  // request.headers.Authorization =\n  // \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMTIzNDU2Nzg5IiwibmFtZSI6IlNhbXBsZSIsImlhdCI6MTUxNjIzODIzfQ.ZEBwz4pWYGqgFJc6DIi7HdTN0z5Pfs4Lcv4ZNwMr1rs\";\n  return request;\n};\n\nconst responseHandler = response => {\n  //if (response.status === 401) {\n  //   window.location = \"/login\";\n  // }\n  return response;\n};\n\nconst errorHandler = error => {\n  return Promise.reject(error);\n};\n\naxiosClient.interceptors.request.use(request => requestHandler(request), error => errorHandler(error));\naxiosClient.interceptors.response.use(response => responseHandler(response), error => errorHandler(error));\nexport function getRequest(URL) {\n  return axiosClient.get(URL).then(response => response);\n}\nexport function postRequest(URL, payload) {\n  return axiosClient.post(URL, payload).then(response => response);\n}\nexport function putRequest(URL, payload) {\n  return axiosClient.put(URL, payload).then(response => response);\n}\nexport function deleteRequest(URL) {\n  return axiosClient.delete(URL).then(response => response);\n}","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/apis/index.js"],"names":["axios","axiosClient","create","defaults","baseURL","process","env","REACT_APP_BACKEND","headers","Accept","requestHandler","request","responseHandler","response","errorHandler","error","Promise","reject","interceptors","use","getRequest","URL","get","then","postRequest","payload","post","putRequest","put","deleteRequest","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,WAAW,GAAGD,KAAK,CAACE,MAAN,EAApB;AAEAD,WAAW,CAACE,QAAZ,CAAqBC,OAArB,GAA+BC,OAAO,CAACC,GAAR,CAAYC,iBAA3C;AAEAN,WAAW,CAACE,QAAZ,CAAqBK,OAArB,GAA+B;AAC7B,kBAAgB,kBADa;AAE7BC,EAAAA,MAAM,EAAE;AAFqB,CAA/B,C,CAKA;AACA;AAEA;;AAEA,MAAMC,cAAc,GAAIC,OAAD,IAAa;AAClC;AACA;AACA;AACA;AACA,SAAOA,OAAP;AACD,CAND;;AAQA,MAAMC,eAAe,GAAIC,QAAD,IAAc;AACpC;AACA;AACA;AACA,SAAOA,QAAP;AACD,CALD;;AAOA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAFD;;AAIAd,WAAW,CAACiB,YAAZ,CAAyBP,OAAzB,CAAiCQ,GAAjC,CACGR,OAAD,IAAaD,cAAc,CAACC,OAAD,CAD7B,EAEGI,KAAD,IAAWD,YAAY,CAACC,KAAD,CAFzB;AAKAd,WAAW,CAACiB,YAAZ,CAAyBL,QAAzB,CAAkCM,GAAlC,CACGN,QAAD,IAAcD,eAAe,CAACC,QAAD,CAD/B,EAEGE,KAAD,IAAWD,YAAY,CAACC,KAAD,CAFzB;AAKA,OAAO,SAASK,UAAT,CAAoBC,GAApB,EAAyB;AAC9B,SAAOpB,WAAW,CAACqB,GAAZ,CAAgBD,GAAhB,EAAqBE,IAArB,CAA2BV,QAAD,IAAcA,QAAxC,CAAP;AACD;AAED,OAAO,SAASW,WAAT,CAAqBH,GAArB,EAA0BI,OAA1B,EAAmC;AACxC,SAAOxB,WAAW,CAACyB,IAAZ,CAAiBL,GAAjB,EAAsBI,OAAtB,EAA+BF,IAA/B,CAAqCV,QAAD,IAAcA,QAAlD,CAAP;AACD;AAED,OAAO,SAASc,UAAT,CAAoBN,GAApB,EAAyBI,OAAzB,EAAkC;AACvC,SAAOxB,WAAW,CAAC2B,GAAZ,CAAgBP,GAAhB,EAAqBI,OAArB,EAA8BF,IAA9B,CAAoCV,QAAD,IAAcA,QAAjD,CAAP;AACD;AAED,OAAO,SAASgB,aAAT,CAAuBR,GAAvB,EAA4B;AACjC,SAAOpB,WAAW,CAAC6B,MAAZ,CAAmBT,GAAnB,EAAwBE,IAAxB,CAA8BV,QAAD,IAAcA,QAA3C,CAAP;AACD","sourcesContent":["import axios from \"axios\";\n\nconst axiosClient = axios.create();\n\naxiosClient.defaults.baseURL = process.env.REACT_APP_BACKEND;\n\naxiosClient.defaults.headers = {\n  \"Content-Type\": \"application/json\",\n  Accept: \"application/json\",\n};\n\n//All request will wait 2 seconds before timeout\n//axiosClient.defaults.timeout = 2000;\n\n//axiosClient.defaults.withCredentials = true;\n\nconst requestHandler = (request) => {\n  // Token will be dynamic so we can use any app-specific way to always\n  // fetch the new token before making the call\n  // request.headers.Authorization =\n  // \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMTIzNDU2Nzg5IiwibmFtZSI6IlNhbXBsZSIsImlhdCI6MTUxNjIzODIzfQ.ZEBwz4pWYGqgFJc6DIi7HdTN0z5Pfs4Lcv4ZNwMr1rs\";\n  return request;\n};\n\nconst responseHandler = (response) => {\n  //if (response.status === 401) {\n  //   window.location = \"/login\";\n  // }\n  return response;\n};\n\nconst errorHandler = (error) => {\n  return Promise.reject(error);\n};\n\naxiosClient.interceptors.request.use(\n  (request) => requestHandler(request),\n  (error) => errorHandler(error)\n);\n\naxiosClient.interceptors.response.use(\n  (response) => responseHandler(response),\n  (error) => errorHandler(error)\n);\n\nexport function getRequest(URL) {\n  return axiosClient.get(URL).then((response) => response);\n}\n\nexport function postRequest(URL, payload) {\n  return axiosClient.post(URL, payload).then((response) => response);\n}\n\nexport function putRequest(URL, payload) {\n  return axiosClient.put(URL, payload).then((response) => response);\n}\n\nexport function deleteRequest(URL) {\n  return axiosClient.delete(URL).then((response) => response);\n}\n"]},"metadata":{},"sourceType":"module"}