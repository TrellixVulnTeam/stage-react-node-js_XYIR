{"ast":null,"code":"var _jsxFileName = \"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/TechnicalDetailsCanvas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { addImpactApi, deleteGraphApi, deleteImpactApi, getImpactsByProject, updateImpactApi } from \"apis/impactApi\";\nimport MultiSelectGraph from \"pages/webmaster/MultiSelectGraph\";\nimport Graph from \"react-graph-vis\";\nimport Modal from \"react-modal\";\nimport Select from \"react-select\";\nimport { useParams } from \"react-router-dom\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { addOutComeApi, getOutComeApi, updateOutcomeApi } from \"apis/outComeApi\";\nimport { addOutPutApi, getOutPutApi, updateOutputApi } from \"apis/outPutApi\";\nimport { addActivityApi, getActivityApi, updateActivityApi } from \"apis/activityApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\n\nfunction TechnicalDetailsCanvas() {\n  _s();\n\n  var _graph$nodes4;\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [editModalIsOpen, setEditModalIsOpen] = useState(false);\n  const [selectedType, setSelectedType] = useState(null);\n  const [displayNodeType, setDisplayNodeType] = useState(null);\n  const [parentNode, setParantNode] = useState([]);\n  const [count, setCount] = useState(200);\n  const [name, setName] = useState(\"\");\n  const [selectedParents, setSelectedParents] = useState(\"\");\n  const [selectedNode, setSelectedNode] = useState();\n  const [refresh, setRefresh] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [graph, setGraph] = useState({\n    nodes: [],\n    edges: []\n  });\n  const sm = useMediaQuery({\n    query: \"(max-width: 700px)\"\n  });\n  const customStyles = {\n    content: {\n      top: \"50%\",\n      left: \"50%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      marginRight: \"-50%\",\n      transform: \"translate(-50%, -50%)\",\n      width: sm ? \"75%\" : \"60%\",\n      height: \"75%\"\n    }\n  };\n  const {\n    idProject\n  } = useParams();\n  const getDataFromApi = useCallback(async () => {\n    const {\n      impacts\n    } = await getImpactsByProject(idProject);\n    const impactsIds = impacts === null || impacts === void 0 ? void 0 : impacts.map(impact => impact === null || impact === void 0 ? void 0 : impact._id);\n    const {\n      outcomes\n    } = await getOutComeApi(impactsIds);\n    const outcomesIds = outcomes === null || outcomes === void 0 ? void 0 : outcomes.map(outcome => outcome === null || outcome === void 0 ? void 0 : outcome._id);\n    const {\n      outputs\n    } = await getOutPutApi(outcomesIds);\n    const outputsIds = outputs === null || outputs === void 0 ? void 0 : outputs.map(output => output === null || output === void 0 ? void 0 : output._id);\n    const {\n      activities\n    } = await getActivityApi(outputsIds);\n    let nodes = [];\n    let edges = [];\n    impacts === null || impacts === void 0 ? void 0 : impacts.map(impact => {\n      nodes.push({ ...impact,\n        ...{\n          id: impact === null || impact === void 0 ? void 0 : impact._id,\n          level: 0,\n          margin: 20,\n          shape: \"box\",\n          color: \"#34495E\",\n          font: {\n            color: \"white\"\n          }\n        }\n      });\n    });\n    outcomes === null || outcomes === void 0 ? void 0 : outcomes.map(outcome => {\n      nodes.push({ ...outcome,\n        ...{\n          id: outcome === null || outcome === void 0 ? void 0 : outcome._id,\n          level: 1,\n          margin: 20,\n          shape: \"box\",\n          color: \"#3f51b5\",\n          font: {\n            color: \"white\"\n          }\n        }\n      });\n    });\n    outcomes === null || outcomes === void 0 ? void 0 : outcomes.map(outcome => {\n      var _outcome$impacts;\n\n      outcome === null || outcome === void 0 ? void 0 : (_outcome$impacts = outcome.impacts) === null || _outcome$impacts === void 0 ? void 0 : _outcome$impacts.map(impactId => {\n        edges.push({\n          from: impactId,\n          to: outcome === null || outcome === void 0 ? void 0 : outcome._id\n        });\n      });\n    });\n    outputs === null || outputs === void 0 ? void 0 : outputs.map(output => {\n      nodes.push({ ...output,\n        ...{\n          id: output === null || output === void 0 ? void 0 : output._id,\n          level: 2,\n          margin: 20,\n          shape: \"box\",\n          color: \"#1ABC9C\",\n          font: {\n            color: \"white\"\n          }\n        }\n      });\n    });\n    outputs === null || outputs === void 0 ? void 0 : outputs.map(output => {\n      var _output$outComes;\n\n      output === null || output === void 0 ? void 0 : (_output$outComes = output.outComes) === null || _output$outComes === void 0 ? void 0 : _output$outComes.map(outcomeId => {\n        edges.push({\n          from: outcomeId,\n          to: output === null || output === void 0 ? void 0 : output._id\n        });\n      });\n    });\n    console.log(activities, \"activities\");\n    activities === null || activities === void 0 ? void 0 : activities.map(activity => {\n      nodes.push({ ...activity,\n        ...{\n          id: activity === null || activity === void 0 ? void 0 : activity._id,\n          level: 3,\n          margin: 20,\n          shape: \"box\",\n          color: \"#DC7633\",\n          font: {\n            color: \"white\"\n          }\n        }\n      });\n    });\n    activities === null || activities === void 0 ? void 0 : activities.map(activity => {\n      var _activity$outPuts;\n\n      activity === null || activity === void 0 ? void 0 : (_activity$outPuts = activity.outPuts) === null || _activity$outPuts === void 0 ? void 0 : _activity$outPuts.map(outputId => {\n        edges.push({\n          from: outputId,\n          to: activity === null || activity === void 0 ? void 0 : activity._id\n        });\n      });\n    });\n    setGraph({ ...graph,\n      nodes: nodes,\n      edges: edges\n    });\n  }, []);\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi, refresh]);\n  const options = {\n    layout: {\n      hierarchical: true\n    },\n    edges: {\n      color: \"#000000\"\n    },\n    physics: {\n      forceAtlas2Based: {\n        gravitationalConstant: -26,\n        centralGravity: 0.005,\n        springLength: 230,\n        springConstant: 0.18\n      },\n      maxVelocity: 146,\n      solver: \"forceAtlas2Based\",\n      timestep: 0.35,\n      stabilization: {\n        enabled: true,\n        iterations: 2000,\n        updateInterval: 25\n      }\n    },\n    height: \"500px\"\n  };\n\n  const initialiseGraph = () => {\n    setGraph({\n      nodes: [],\n      edges: []\n    });\n  };\n\n  const events = {\n    select: event => {\n      var _graph$nodes, _selected$, _selected$3;\n\n      var {\n        nodes,\n        edges\n      } = event; //setEditModalIsOpen(true);\n\n      const selected = (_graph$nodes = graph.nodes) === null || _graph$nodes === void 0 ? void 0 : _graph$nodes.filter(node => {\n        if ((node === null || node === void 0 ? void 0 : node.id) == nodes) return true;\n        return false;\n      });\n      setSelectedNode(selected[0]);\n      setName((_selected$ = selected[0]) === null || _selected$ === void 0 ? void 0 : _selected$.label);\n      const selectType = typeOptions.filter(type => {\n        var _selected$2;\n\n        if ((type === null || type === void 0 ? void 0 : type.value) === ((_selected$2 = selected[0]) === null || _selected$2 === void 0 ? void 0 : _selected$2.type)) return true;\n        return false;\n      });\n      setSelectedType(selectType[0]);\n\n      if (((_selected$3 = selected[0]) === null || _selected$3 === void 0 ? void 0 : _selected$3.type) !== \"impact\") {\n        var _selected$4, _selected$6, _selected$8;\n\n        let parents = [];\n\n        if (((_selected$4 = selected[0]) === null || _selected$4 === void 0 ? void 0 : _selected$4.type) === \"outcome\") {\n          parents = graph === null || graph === void 0 ? void 0 : graph.nodes.filter(node => {\n            var _selected$5, _selected$5$impacts;\n\n            if (((_selected$5 = selected[0]) === null || _selected$5 === void 0 ? void 0 : (_selected$5$impacts = _selected$5.impacts) === null || _selected$5$impacts === void 0 ? void 0 : _selected$5$impacts.includes(node === null || node === void 0 ? void 0 : node.id)) === true && (node === null || node === void 0 ? void 0 : node.type) === \"impact\") return true;\n            return false;\n          }).map(node => {\n            return {\n              value: node === null || node === void 0 ? void 0 : node.id,\n              label: node === null || node === void 0 ? void 0 : node.label\n            };\n          });\n        } else if (((_selected$6 = selected[0]) === null || _selected$6 === void 0 ? void 0 : _selected$6.type) === \"output\") {\n          parents = graph === null || graph === void 0 ? void 0 : graph.nodes.filter(node => {\n            var _selected$7, _selected$7$outComes;\n\n            if (((_selected$7 = selected[0]) === null || _selected$7 === void 0 ? void 0 : (_selected$7$outComes = _selected$7.outComes) === null || _selected$7$outComes === void 0 ? void 0 : _selected$7$outComes.includes(node === null || node === void 0 ? void 0 : node.id)) === true && (node === null || node === void 0 ? void 0 : node.type) === \"outcome\") return true;\n            return false;\n          }).map(node => {\n            return {\n              value: node === null || node === void 0 ? void 0 : node.id,\n              label: node === null || node === void 0 ? void 0 : node.label\n            };\n          });\n        } else if (((_selected$8 = selected[0]) === null || _selected$8 === void 0 ? void 0 : _selected$8.type) === \"activity\") {\n          parents = graph === null || graph === void 0 ? void 0 : graph.nodes.filter(node => {\n            var _selected$9, _selected$9$outPuts;\n\n            if (((_selected$9 = selected[0]) === null || _selected$9 === void 0 ? void 0 : (_selected$9$outPuts = _selected$9.outPuts) === null || _selected$9$outPuts === void 0 ? void 0 : _selected$9$outPuts.includes(node === null || node === void 0 ? void 0 : node.id)) === true && (node === null || node === void 0 ? void 0 : node.type) === \"output\") return true;\n            return false;\n          }).map(node => {\n            return {\n              value: node === null || node === void 0 ? void 0 : node.id,\n              label: node === null || node === void 0 ? void 0 : node.label\n            };\n          });\n        }\n\n        setSelectedParents(parents);\n      }\n\n      setEdit(true);\n      setModalIsOpen(true);\n    }\n  };\n\n  function closeModal() {\n    setModalIsOpen(false);\n    setEdit(false);\n    setName(\"\");\n    setSelectedType(null);\n    setSelectedParents([]);\n  }\n\n  function closeEditModal() {\n    setEditModalIsOpen(false);\n  }\n\n  const typeOptions = [{\n    value: \"impact\",\n    label: \"Impact\"\n  }, {\n    value: \"outcome\",\n    label: \"OutCome\"\n  }, {\n    value: \"output\",\n    label: \"OutPut\"\n  }, {\n    value: \"activity\",\n    label: \"Activity\"\n  }];\n\n  const handleTypeChange = selectedOption => {\n    setSelectedType(selectedOption);\n  };\n\n  const filtredTypes = typenode => {\n    var _graph$nodes2;\n\n    let type;\n    if (typenode === \"outcome\") type = \"impact\";\n    if (typenode === \"output\") type = \"outcome\";\n    if (typenode === \"activity\") type = \"output\";\n    const nodeType = graph === null || graph === void 0 ? void 0 : (_graph$nodes2 = graph.nodes) === null || _graph$nodes2 === void 0 ? void 0 : _graph$nodes2.filter(node => {\n      if ((node === null || node === void 0 ? void 0 : node.type) === type) return true;\n      return false;\n    });\n    return nodeType.map(nodetyp => {\n      return {\n        value: nodetyp === null || nodetyp === void 0 ? void 0 : nodetyp.id,\n        label: nodetyp === null || nodetyp === void 0 ? void 0 : nodetyp.label\n      };\n    });\n  };\n\n  const addNode = async parents => {\n    let level = 4;\n    let color = \"black\";\n    let node = {}; // if (edit) {\n    //   if (selectedNode?.type === \"impact\") {\n    //     await deleteImpactApi(selectedNode?.id);\n    //   }\n    // }\n\n    if ((selectedType === null || selectedType === void 0 ? void 0 : selectedType.value) === \"impact\") {\n      level = 0;\n      color = \"#34495E\";\n      const impact = {\n        label: name,\n        project: idProject\n      }; //initialiseGraph();\n\n      if (edit) {\n        node = await updateImpactApi(selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.id, impact);\n      } else {\n        node = await addImpactApi(impact);\n      } //setRefresh(!refresh);\n\n    } else if ((selectedType === null || selectedType === void 0 ? void 0 : selectedType.value) === \"outcome\") {\n      level = 1;\n      color = \"#3f51b5\";\n      const impacts = selectedParents === null || selectedParents === void 0 ? void 0 : selectedParents.map(parent => parent === null || parent === void 0 ? void 0 : parent.value);\n      const outcome = {\n        label: name,\n        impacts\n      }; //initialiseGraph();\n\n      if (edit) {\n        node = await updateOutcomeApi(selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.id, outcome);\n      } else {\n        node = await addOutComeApi(outcome);\n      } //setRefresh(!refresh);\n\n    }\n\n    if ((selectedType === null || selectedType === void 0 ? void 0 : selectedType.value) === \"output\") {\n      level = 2;\n      color = \"#1ABC9C\";\n      const outComes = selectedParents === null || selectedParents === void 0 ? void 0 : selectedParents.map(parent => parent === null || parent === void 0 ? void 0 : parent.value);\n      const output = {\n        label: name,\n        outComes\n      }; //initialiseGraph();\n\n      if (edit) {\n        node = await updateOutputApi(selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.id, output);\n      } else {\n        node = await addOutPutApi(output);\n      } //setRefresh(!refresh);\n\n    }\n\n    if ((selectedType === null || selectedType === void 0 ? void 0 : selectedType.value) === \"activity\") {\n      level = 3;\n      color = \"#DC7633\";\n      const outPuts = selectedParents === null || selectedParents === void 0 ? void 0 : selectedParents.map(parent => parent === null || parent === void 0 ? void 0 : parent.value);\n      const activity = {\n        label: name,\n        outPuts\n      }; //initialiseGraph();\n\n      if (edit) {\n        node = await updateActivityApi(selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.id, activity);\n      } else {\n        node = await addActivityApi(activity);\n      } //setRefresh(!refresh);\n\n    }\n\n    let edges = [];\n\n    if ((selectedType === null || selectedType === void 0 ? void 0 : selectedType.value) !== \"impact\") {\n      edges = selectedParents === null || selectedParents === void 0 ? void 0 : selectedParents.map(parent => {\n        var _node;\n\n        return {\n          from: parent === null || parent === void 0 ? void 0 : parent.value,\n          to: (_node = node) === null || _node === void 0 ? void 0 : _node._id\n        };\n      });\n    }\n\n    if (edit) {\n      var _graph$nodes3, _node2;\n\n      const newNodes = graph === null || graph === void 0 ? void 0 : (_graph$nodes3 = graph.nodes) === null || _graph$nodes3 === void 0 ? void 0 : _graph$nodes3.filter(node => {\n        if ((node === null || node === void 0 ? void 0 : node.id) === (selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.id)) return false;\n        return true;\n      });\n      let newEdges = graph === null || graph === void 0 ? void 0 : graph.edges;\n\n      if ((selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.type) !== \"impact\") {\n        var _graph$edges;\n\n        newEdges = graph === null || graph === void 0 ? void 0 : (_graph$edges = graph.edges) === null || _graph$edges === void 0 ? void 0 : _graph$edges.filter(edge => {\n          if ((edge === null || edge === void 0 ? void 0 : edge.to) === (selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.id)) return false;\n          return true;\n        });\n      }\n\n      setGraph({ ...graph,\n        nodes: [...newNodes, {\n          id: (_node2 = node) === null || _node2 === void 0 ? void 0 : _node2._id,\n          level: level,\n          label: name,\n          type: selectedType === null || selectedType === void 0 ? void 0 : selectedType.value,\n          title: \"node 4 tootip text\",\n          margin: 20,\n          shape: \"box\",\n          color: color,\n          font: {\n            color: \"white\"\n          },\n          ...node\n        }],\n        edges: [...newEdges, ...edges]\n      });\n    } else {\n      var _node3;\n\n      setGraph({ ...graph,\n        nodes: [...(graph === null || graph === void 0 ? void 0 : graph.nodes), {\n          id: (_node3 = node) === null || _node3 === void 0 ? void 0 : _node3._id,\n          level: level,\n          label: name,\n          type: selectedType === null || selectedType === void 0 ? void 0 : selectedType.value,\n          title: \"node 4 tootip text\",\n          margin: 20,\n          shape: \"box\",\n          color: color,\n          font: {\n            color: \"white\"\n          },\n          ...node\n        }],\n        edges: [...(graph === null || graph === void 0 ? void 0 : graph.edges), ...edges]\n      });\n    }\n  };\n\n  const resetGraph = async () => {\n    if (window.confirm(`Are you sure you wish to reset the graph`)) {\n      setGraph({\n        nodes: [],\n        edges: []\n      });\n      await deleteGraphApi(idProject);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success shadow-none\",\n      onClick: () => setModalIsOpen(true),\n      children: \"Add Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this), (graph === null || graph === void 0 ? void 0 : (_graph$nodes4 = graph.nodes) === null || _graph$nodes4 === void 0 ? void 0 : _graph$nodes4.length) > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-danger shadow-none mx-2\",\n      onClick: resetGraph,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Graph, {\n      graph: graph,\n      options: options,\n      events: events,\n      getNetwork: network => {//  if you want access to vis.js network api you can set the state in a parent component using this property\n      }\n    }, Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      style: customStyles,\n      contentLabel: \"Example Modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\" \", edit ? \"Edit Node\" : \"Add Node\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mb-2\",\n            children: \"Node Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: name,\n            onChange: e => setName(e.target.value),\n            type: \"text\",\n            class: \"form-control\",\n            placeholder: \"Node Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this), !edit && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mb-2\",\n            children: \"Node Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedType,\n            onChange: handleTypeChange,\n            options: typeOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 13\n        }, this), (selectedType === null || selectedType === void 0 ? void 0 : selectedType.value) !== undefined && (selectedType === null || selectedType === void 0 ? void 0 : selectedType.value) !== \"impact\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mb-2\",\n            children: \"Parent Nodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(MultiSelectGraph, {\n            selectedValues: selectedParents,\n            higherLevelNode: filtredTypes(selectedType === null || selectedType === void 0 ? void 0 : selectedType.value),\n            addNode: addNode,\n            setModalIsOpen: setModalIsOpen,\n            setSelectedParents: setSelectedParents\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [edit ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success mx-3\",\n            onClick: () => {\n              addNode(selectedParents);\n              setModalIsOpen(false);\n              setName(\"\");\n              setSelectedType(undefined);\n              setSelectedParents(undefined);\n            },\n            children: \"Edit Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success shadow-none mx-3\",\n            onClick: () => {\n              addNode(selectedParents);\n              setModalIsOpen(false);\n              setName(\"\");\n              setSelectedType(undefined);\n              setSelectedParents(undefined);\n            },\n            children: \"Add Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary shadow-none\",\n            onClick: closeModal,\n            children: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 445,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TechnicalDetailsCanvas, \"IyusnVWVowcYDeYfHA7ZRQtLTio=\", false, function () {\n  return [useMediaQuery, useParams];\n});\n\n_c = TechnicalDetailsCanvas;\nexport default TechnicalDetailsCanvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"TechnicalDetailsCanvas\");","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/TechnicalDetailsCanvas.js"],"names":["React","useState","useEffect","useCallback","addImpactApi","deleteGraphApi","deleteImpactApi","getImpactsByProject","updateImpactApi","MultiSelectGraph","Graph","Modal","Select","useParams","useMediaQuery","addOutComeApi","getOutComeApi","updateOutcomeApi","addOutPutApi","getOutPutApi","updateOutputApi","addActivityApi","getActivityApi","updateActivityApi","setAppElement","TechnicalDetailsCanvas","modalIsOpen","setModalIsOpen","editModalIsOpen","setEditModalIsOpen","selectedType","setSelectedType","displayNodeType","setDisplayNodeType","parentNode","setParantNode","count","setCount","name","setName","selectedParents","setSelectedParents","selectedNode","setSelectedNode","refresh","setRefresh","edit","setEdit","graph","setGraph","nodes","edges","sm","query","customStyles","content","top","left","right","bottom","marginRight","transform","width","height","idProject","getDataFromApi","impacts","impactsIds","map","impact","_id","outcomes","outcomesIds","outcome","outputs","outputsIds","output","activities","push","id","level","margin","shape","color","font","impactId","from","to","outComes","outcomeId","console","log","activity","outPuts","outputId","options","layout","hierarchical","physics","forceAtlas2Based","gravitationalConstant","centralGravity","springLength","springConstant","maxVelocity","solver","timestep","stabilization","enabled","iterations","updateInterval","initialiseGraph","events","select","event","selected","filter","node","label","selectType","typeOptions","type","value","parents","includes","closeModal","closeEditModal","handleTypeChange","selectedOption","filtredTypes","typenode","nodeType","nodetyp","addNode","project","parent","newNodes","newEdges","edge","title","resetGraph","window","confirm","length","network","Math","random","e","target","undefined"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport {\n  addImpactApi,\n  deleteGraphApi,\n  deleteImpactApi,\n  getImpactsByProject,\n  updateImpactApi,\n} from \"apis/impactApi\";\nimport MultiSelectGraph from \"pages/webmaster/MultiSelectGraph\";\nimport Graph from \"react-graph-vis\";\nimport Modal from \"react-modal\";\nimport Select from \"react-select\";\nimport { useParams } from \"react-router-dom\";\nimport { useMediaQuery } from \"react-responsive\";\nimport {\n  addOutComeApi,\n  getOutComeApi,\n  updateOutcomeApi,\n} from \"apis/outComeApi\";\nimport { addOutPutApi, getOutPutApi, updateOutputApi } from \"apis/outPutApi\";\nimport {\n  addActivityApi,\n  getActivityApi,\n  updateActivityApi,\n} from \"apis/activityApi\";\n\nModal.setAppElement(\"#root\");\n\nfunction TechnicalDetailsCanvas() {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [editModalIsOpen, setEditModalIsOpen] = useState(false);\n  const [selectedType, setSelectedType] = useState(null);\n  const [displayNodeType, setDisplayNodeType] = useState(null);\n  const [parentNode, setParantNode] = useState([]);\n  const [count, setCount] = useState(200);\n  const [name, setName] = useState(\"\");\n  const [selectedParents, setSelectedParents] = useState(\"\");\n  const [selectedNode, setSelectedNode] = useState();\n  const [refresh, setRefresh] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [graph, setGraph] = useState({\n    nodes: [],\n    edges: [],\n  });\n\n  const sm = useMediaQuery({\n    query: \"(max-width: 700px)\",\n  });\n\n  const customStyles = {\n    content: {\n      top: \"50%\",\n      left: \"50%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      marginRight: \"-50%\",\n      transform: \"translate(-50%, -50%)\",\n      width: sm ? \"75%\" : \"60%\",\n      height: \"75%\",\n      \n    },\n  };\n\n  const { idProject } = useParams();\n\n  const getDataFromApi = useCallback(async () => {\n    const { impacts } = await getImpactsByProject(idProject);\n    const impactsIds = impacts?.map((impact) => impact?._id);\n    const { outcomes } = await getOutComeApi(impactsIds);\n    const outcomesIds = outcomes?.map((outcome) => outcome?._id);\n    const { outputs } = await getOutPutApi(outcomesIds);\n    const outputsIds = outputs?.map((output) => output?._id);\n    const { activities } = await getActivityApi(outputsIds);\n\n    let nodes = [];\n    let edges = [];\n    impacts?.map((impact) => {\n      nodes.push({\n        ...impact,\n        ...{\n          id: impact?._id,\n          level: 0,\n          margin: 20,\n          shape: \"box\",\n          color: \"#34495E\",\n          font: {\n            color: \"white\",\n          },\n        },\n      });\n    });\n    outcomes?.map((outcome) => {\n      nodes.push({\n        ...outcome,\n        ...{\n          id: outcome?._id,\n          level: 1,\n          margin: 20,\n          shape: \"box\",\n          color: \"#3f51b5\",\n          font: {\n            color: \"white\",\n          },\n        },\n      });\n    });\n\n    outcomes?.map((outcome) => {\n      outcome?.impacts?.map((impactId) => {\n        edges.push({ from: impactId, to: outcome?._id });\n      });\n    });\n\n    outputs?.map((output) => {\n      nodes.push({\n        ...output,\n        ...{\n          id: output?._id,\n          level: 2,\n          margin: 20,\n          shape: \"box\",\n          color: \"#1ABC9C\",\n          font: {\n            color: \"white\",\n          },\n        },\n      });\n    });\n\n    outputs?.map((output) => {\n      output?.outComes?.map((outcomeId) => {\n        edges.push({ from: outcomeId, to: output?._id });\n      });\n    });\n    console.log(activities, \"activities\");\n    activities?.map((activity) => {\n      nodes.push({\n        ...activity,\n        ...{\n          id: activity?._id,\n          level: 3,\n          margin: 20,\n          shape: \"box\",\n          color: \"#DC7633\",\n          font: {\n            color: \"white\",\n          },\n        },\n      });\n    });\n\n    activities?.map((activity) => {\n      activity?.outPuts?.map((outputId) => {\n        edges.push({ from: outputId, to: activity?._id });\n      });\n    });\n    setGraph({\n      ...graph,\n      nodes: nodes,\n      edges: edges,\n    });\n  }, []);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi, refresh]);\n\n  const options = {\n    layout: {\n      hierarchical: true,\n    },\n    edges: {\n      color: \"#000000\",\n    },\n    physics: {\n      forceAtlas2Based: {\n        gravitationalConstant: -26,\n        centralGravity: 0.005,\n        springLength: 230,\n        springConstant: 0.18,\n      },\n      maxVelocity: 146,\n      solver: \"forceAtlas2Based\",\n      timestep: 0.35,\n      stabilization: {\n        enabled: true,\n        iterations: 2000,\n        updateInterval: 25,\n      },\n    },\n\n    height: \"500px\",\n  };\n\n  const initialiseGraph = () => {\n    setGraph({\n      nodes: [],\n      edges: [],\n    });\n  };\n\n  const events = {\n    select: (event) => {\n      var { nodes, edges } = event;\n\n      //setEditModalIsOpen(true);\n\n      const selected = graph.nodes?.filter((node) => {\n        if (node?.id == nodes) return true;\n        return false;\n      });\n      setSelectedNode(selected[0]);\n      setName(selected[0]?.label);\n      const selectType = typeOptions.filter((type) => {\n        if (type?.value === selected[0]?.type) return true;\n        return false;\n      });\n      setSelectedType(selectType[0]);\n      if (selected[0]?.type !== \"impact\") {\n        let parents = [];\n        if (selected[0]?.type === \"outcome\") {\n          parents = graph?.nodes\n            .filter((node) => {\n              if (\n                selected[0]?.impacts?.includes(node?.id) === true &&\n                node?.type === \"impact\"\n              )\n                return true;\n              return false;\n            })\n            .map((node) => {\n              return { value: node?.id, label: node?.label };\n            });\n        } else if (selected[0]?.type === \"output\") {\n          parents = graph?.nodes\n            .filter((node) => {\n              if (\n                selected[0]?.outComes?.includes(node?.id) === true &&\n                node?.type === \"outcome\"\n              )\n                return true;\n              return false;\n            })\n            .map((node) => {\n              return { value: node?.id, label: node?.label };\n            });\n        } else if (selected[0]?.type === \"activity\") {\n          parents = graph?.nodes\n            .filter((node) => {\n              if (\n                selected[0]?.outPuts?.includes(node?.id) === true &&\n                node?.type === \"output\"\n              )\n                return true;\n              return false;\n            })\n            .map((node) => {\n              return { value: node?.id, label: node?.label };\n            });\n        }\n\n        setSelectedParents(parents);\n      }\n      setEdit(true);\n      setModalIsOpen(true);\n    },\n  };\n\n  function closeModal() {\n    setModalIsOpen(false);\n    setEdit(false);\n    setName(\"\");\n    setSelectedType(null);\n    setSelectedParents([]);\n  }\n  function closeEditModal() {\n    setEditModalIsOpen(false);\n  }\n  const typeOptions = [\n    { value: \"impact\", label: \"Impact\" },\n    { value: \"outcome\", label: \"OutCome\" },\n    { value: \"output\", label: \"OutPut\" },\n    { value: \"activity\", label: \"Activity\" },\n  ];\n\n  const handleTypeChange = (selectedOption) => {\n    setSelectedType(selectedOption);\n  };\n\n  const filtredTypes = (typenode) => {\n    let type;\n    if (typenode === \"outcome\") type = \"impact\";\n    if (typenode === \"output\") type = \"outcome\";\n    if (typenode === \"activity\") type = \"output\";\n    const nodeType = graph?.nodes?.filter((node) => {\n      if (node?.type === type) return true;\n      return false;\n    });\n    return nodeType.map((nodetyp) => {\n      return {\n        value: nodetyp?.id,\n        label: nodetyp?.label,\n      };\n    });\n  };\n\n  const addNode = async (parents) => {\n    let level = 4;\n    let color = \"black\";\n    let node = {};\n    // if (edit) {\n    //   if (selectedNode?.type === \"impact\") {\n    //     await deleteImpactApi(selectedNode?.id);\n    //   }\n    // }\n    if (selectedType?.value === \"impact\") {\n      level = 0;\n      color = \"#34495E\";\n      const impact = { label: name, project: idProject };\n      //initialiseGraph();\n      if (edit) {\n        node = await updateImpactApi(selectedNode?.id, impact);\n      } else {\n        node = await addImpactApi(impact);\n      }\n\n      //setRefresh(!refresh);\n    } else if (selectedType?.value === \"outcome\") {\n      level = 1;\n      color = \"#3f51b5\";\n      const impacts = selectedParents?.map((parent) => parent?.value);\n      const outcome = { label: name, impacts };\n      //initialiseGraph();\n      if (edit) {\n        node = await updateOutcomeApi(selectedNode?.id, outcome);\n      } else {\n        node = await addOutComeApi(outcome);\n      }\n\n      //setRefresh(!refresh);\n    }\n    if (selectedType?.value === \"output\") {\n      level = 2;\n      color = \"#1ABC9C\";\n      const outComes = selectedParents?.map((parent) => parent?.value);\n      const output = { label: name, outComes };\n      //initialiseGraph();\n      if (edit) {\n        node = await updateOutputApi(selectedNode?.id, output);\n      } else {\n        node = await addOutPutApi(output);\n      }\n\n      //setRefresh(!refresh);\n    }\n    if (selectedType?.value === \"activity\") {\n      level = 3;\n      color = \"#DC7633\";\n      const outPuts = selectedParents?.map((parent) => parent?.value);\n      const activity = { label: name, outPuts };\n      //initialiseGraph();\n      if (edit) {\n        node = await updateActivityApi(selectedNode?.id, activity);\n      } else {\n        node = await addActivityApi(activity);\n      }\n\n      //setRefresh(!refresh);\n    }\n    let edges = [];\n    if (selectedType?.value !== \"impact\") {\n      edges = selectedParents?.map((parent) => {\n        return { from: parent?.value, to: node?._id };\n      });\n    }\n    if (edit) {\n      const newNodes = graph?.nodes?.filter((node) => {\n        if (node?.id === selectedNode?.id) return false;\n        return true;\n      });\n      let newEdges = graph?.edges;\n      if (selectedNode?.type !== \"impact\") {\n        newEdges = graph?.edges?.filter((edge) => {\n          if (edge?.to === selectedNode?.id) return false;\n          return true;\n        });\n      }\n\n      setGraph({\n        ...graph,\n        nodes: [\n          ...newNodes,\n          {\n            id: node?._id,\n            level: level,\n            label: name,\n            type: selectedType?.value,\n            title: \"node 4 tootip text\",\n            margin: 20,\n            shape: \"box\",\n            color: color,\n            font: {\n              color: \"white\",\n            },\n            ...node,\n          },\n        ],\n        edges: [...newEdges, ...edges],\n      });\n    } else {\n      setGraph({\n        ...graph,\n        nodes: [\n          ...graph?.nodes,\n          {\n            id: node?._id,\n            level: level,\n            label: name,\n            type: selectedType?.value,\n            title: \"node 4 tootip text\",\n            margin: 20,\n            shape: \"box\",\n            color: color,\n            font: {\n              color: \"white\",\n            },\n            ...node,\n          },\n        ],\n        edges: [...graph?.edges, ...edges],\n      });\n    }\n  };\n  const resetGraph = async () => {\n    if (window.confirm(`Are you sure you wish to reset the graph`)) {\n      setGraph({\n        nodes: [],\n        edges: [],\n      });\n      await deleteGraphApi(idProject);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <button\n        className=\"btn btn-success shadow-none\"\n        onClick={() => setModalIsOpen(true)}\n      >\n        Add Node\n      </button>\n      {graph?.nodes?.length > 0 && (\n        <button\n          className=\"btn btn-danger shadow-none mx-2\"\n          onClick={resetGraph}\n        >\n          Reset\n        </button>\n      )}\n\n      <Graph\n        key={Math.random()}\n        graph={graph}\n        options={options}\n        events={events}\n        getNetwork={(network) => {\n          //  if you want access to vis.js network api you can set the state in a parent component using this property\n        }}\n      />\n\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Example Modal\"\n      >\n        <div className=\"container my-auto\">\n          <h2> {edit ? \"Edit Node\" : \"Add Node\"}</h2>\n          <div className=\"mt-3\">\n            <label className=\"mb-2\">Node Name</label>\n            <input\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"Node Name\"\n            />\n          </div>\n          {!edit && (\n            <div className=\"mt-3\">\n              <label className=\"mb-2\">Node Type</label>\n              <Select\n                value={selectedType}\n                onChange={handleTypeChange}\n                options={typeOptions}\n              />\n            </div>\n          )}\n          {selectedType?.value !== undefined &&\n            selectedType?.value !== \"impact\" && (\n              <div className=\"mt-3\">\n                <label className=\"mb-2\">Parent Nodes</label>\n                <MultiSelectGraph\n                  selectedValues={selectedParents}\n                  higherLevelNode={filtredTypes(selectedType?.value)}\n                  addNode={addNode}\n                  setModalIsOpen={setModalIsOpen}\n                  setSelectedParents={setSelectedParents}\n                />\n              </div>\n            )}\n\n          <div className=\"mt-3\">\n            {edit ? (\n              <button\n                className=\"btn btn-success mx-3\"\n                onClick={() => {\n                  addNode(selectedParents);\n                  setModalIsOpen(false);\n                  setName(\"\");\n                  setSelectedType(undefined);\n                  setSelectedParents(undefined);\n                }}\n              >\n                Edit Node\n              </button>\n            ) : (\n              <button\n                className=\"btn btn-success shadow-none mx-3\"\n                onClick={() => {\n                  addNode(selectedParents);\n                  setModalIsOpen(false);\n                  setName(\"\");\n                  setSelectedType(undefined);\n                  setSelectedParents(undefined);\n                }}\n              >\n                Add Node\n              </button>\n            )}\n\n            <button\n              className=\"btn btn-secondary shadow-none\"\n              onClick={closeModal}\n            >\n              close\n            </button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nexport default TechnicalDetailsCanvas;\n"]},"metadata":{},"sourceType":"module"}