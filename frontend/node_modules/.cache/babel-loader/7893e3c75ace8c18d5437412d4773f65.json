{"ast":null,"code":"var _jsxFileName = \"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/TableProjectAccepted.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { AiFillDelete, AiFillEdit } from \"react-icons/ai\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { FcCalendar } from \"react-icons/fc\";\nimport { CgDetailsMore } from \"react-icons/cg\";\nimport { BiShow } from \"react-icons/bi\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport { deleteProject } from \"apis/projectApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TableProjectAccepted = () => {\n  _s();\n\n  const tableRef = /*#__PURE__*/React.createRef();\n  const history = useHistory();\n  const {\n    codeCountry\n  } = useParams();\n\n  const reloadTableData = () => {\n    tableRef.current.onQueryChange();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      tableRef: tableRef,\n      title: \"List of Projects Accepted\",\n      columns: [{\n        field: \"image_url\",\n        title: \"Image\",\n        render: rowData => /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img-fluid\",\n          src: urlImageAdapter(rowData.image_url),\n          style: {\n            verticalAlign: \"middle\",\n            width: \"50px\",\n            height: \"50px\",\n            borderRadius: \"50%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this),\n        cellStyle: {\n          width: \"10%\",\n          textAlign: \"center\"\n        }\n      }, {\n        title: \"Name\",\n        field: \"name\",\n        cellStyle: {\n          width: \"40%\",\n          textAlign: \"center\"\n        }\n      }, {\n        title: \"Thematique\",\n        field: \"thematique.name\",\n        cellStyle: {\n          width: \"20%\",\n          textAlign: \"center\"\n        }\n      }, {\n        title: \"Total Cost\",\n        field: \"total_cost\",\n        type: \"numeric\",\n        cellStyle: {\n          width: \"15%\",\n          textAlign: \"center\"\n        }\n      }, {\n        title: \"Project of the month\",\n        field: \"project_of_month\",\n        cellStyle: {\n          width: \"15%\",\n          textAlign: \"center\"\n        }\n      }],\n      data: query => new Promise((resolve, reject) => {\n        let url = `${process.env.REACT_APP_BACKEND}project/projectsAccepted/${codeCountry}?`;\n        url += \"limit=\" + query.pageSize;\n        url += \"&page=\" + (query.page + 1);\n        axios.post(url, {\n          searchText: query.search\n        }).then(result => {\n          resolve({\n            data: result.data.data,\n            page: result.data.page - 1,\n            totalCount: result.data.totalCount\n          });\n        });\n      }),\n      options: {\n        filtering: false,\n        search: true,\n        sorting: false,\n        headerStyle: {\n          backgroundColor: \"#0069d9\",\n          textAlign: \"center\",\n          color: \"white\"\n        },\n        actionsColumnIndex: -1\n      },\n      actions: [{\n        icon: \"refresh\",\n        tooltip: \"Refresh Data\",\n        isFreeAction: true,\n        onClick: () => tableRef.current && tableRef.current.onQueryChange()\n      }, {\n        icon: () => /*#__PURE__*/_jsxDEV(FaRegEdit, {\n          size: 30,\n          color: \"#ffc107\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this),\n        tooltip: \"Edit Project\",\n        onClick: (event, project) => {\n          history.push(`/web-master/edit-project/${codeCountry}/${project === null || project === void 0 ? void 0 : project._id}`);\n        }\n      }, {\n        icon: () => /*#__PURE__*/_jsxDEV(FcCalendar, {\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this),\n        tooltip: \"Project of the month\",\n        onClick: (event, project) => {\n          history.push(`/web-master/projectofthemonth/${codeCountry}/${project._id}`);\n        }\n      }, {\n        icon: () => /*#__PURE__*/_jsxDEV(CgDetailsMore, {\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this),\n        tooltip: \"Technical details\",\n        onClick: (event, project) => {\n          history.push(`/web-master/technicaldetails/${codeCountry}/${project._id}`);\n        }\n      }, {\n        icon: () => /*#__PURE__*/_jsxDEV(BiShow, {\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this),\n        tooltip: \"Show in Browser\",\n        onClick: (event, project) => {\n          window.open(`${process.env.REACT_APP_FRONT}projectdetails/${project._id}`, \"_blank\");\n        }\n      }, {\n        icon: () => /*#__PURE__*/_jsxDEV(AiFillDelete, {\n          size: 30,\n          color: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this),\n        tooltip: \"Delete Project\",\n        onClick: async (event, project) => {\n          if (window.confirm(`Are you sure you wish to delete ${project.name} ?`)) {\n            try {\n              await deleteProject(project._id);\n              reloadTableData();\n            } catch (error) {\n              console.log(error);\n            }\n          }\n        }\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TableProjectAccepted, \"OHHtikjGZ02fsTP2OGKOZ0ErWbY=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = TableProjectAccepted;\nexport default TableProjectAccepted;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableProjectAccepted\");","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/TableProjectAccepted.js"],"names":["React","useState","useEffect","MaterialTable","AiFillDelete","AiFillEdit","FaRegEdit","FcCalendar","CgDetailsMore","BiShow","useHistory","useParams","axios","urlImageAdapter","deleteProject","TableProjectAccepted","tableRef","createRef","history","codeCountry","reloadTableData","current","onQueryChange","field","title","render","rowData","image_url","verticalAlign","width","height","borderRadius","cellStyle","textAlign","type","query","Promise","resolve","reject","url","process","env","REACT_APP_BACKEND","pageSize","page","post","searchText","search","then","result","data","totalCount","filtering","sorting","headerStyle","backgroundColor","color","actionsColumnIndex","icon","tooltip","isFreeAction","onClick","event","project","push","_id","window","open","REACT_APP_FRONT","confirm","name","error","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { AiFillDelete, AiFillEdit } from \"react-icons/ai\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport { FcCalendar } from \"react-icons/fc\";\nimport { CgDetailsMore } from \"react-icons/cg\";\nimport { BiShow } from \"react-icons/bi\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport axios from \"axios\";\nimport urlImageAdapter from \"helpers/urlImageAdapter\";\nimport { deleteProject } from \"apis/projectApi\";\n\nconst TableProjectAccepted = () => {\n  const tableRef = React.createRef();\n  const history = useHistory();\n  const { codeCountry } = useParams();\n\n  const reloadTableData = () => {\n    tableRef.current.onQueryChange();\n  };\n\n  return (\n    <div>\n      <MaterialTable\n        tableRef={tableRef}\n        title=\"List of Projects Accepted\"\n        columns={[\n          {\n            field: \"image_url\",\n            title: \"Image\",\n            render: (rowData) => (\n              <img\n                className=\"img-fluid\"\n                src={urlImageAdapter(rowData.image_url)}\n                style={{\n                  verticalAlign: \"middle\",\n                  width: \"50px\",\n                  height: \"50px\",\n                  borderRadius: \"50%\",\n                }}\n              />\n            ),\n            cellStyle: {\n              width: \"10%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Name\",\n            field: \"name\",\n            cellStyle: {\n              width: \"40%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Thematique\",\n            field: \"thematique.name\",\n            cellStyle: {\n              width: \"20%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Total Cost\",\n            field: \"total_cost\",\n            type: \"numeric\",\n            cellStyle: {\n              width: \"15%\",\n              textAlign: \"center\",\n            },\n          },\n          {\n            title: \"Project of the month\",\n            field: \"project_of_month\",\n            cellStyle: {\n              width: \"15%\",\n              textAlign: \"center\",\n            },\n          },\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) => {\n            let url = `${process.env.REACT_APP_BACKEND}project/projectsAccepted/${codeCountry}?`;\n            url += \"limit=\" + query.pageSize;\n            url += \"&page=\" + (query.page + 1);\n            axios\n              .post(url, {\n                searchText: query.search,\n              })\n              .then((result) => {\n                resolve({\n                  data: result.data.data,\n                  page: result.data.page - 1,\n                  totalCount: result.data.totalCount,\n                });\n              });\n          })\n        }\n        options={{\n          filtering: false,\n          search: true,\n          sorting: false,\n          headerStyle: {\n            backgroundColor: \"#0069d9\",\n            textAlign: \"center\",\n            color: \"white\",\n          },\n          actionsColumnIndex: -1,\n        }}\n        actions={[\n          {\n            icon: \"refresh\",\n            tooltip: \"Refresh Data\",\n            isFreeAction: true,\n            onClick: () => tableRef.current && tableRef.current.onQueryChange(),\n          },\n          {\n            icon: () => <FaRegEdit size={30} color=\"#ffc107\" />,\n            tooltip: \"Edit Project\",\n            onClick: (event, project) => {\n              history.push(\n                `/web-master/edit-project/${codeCountry}/${project?._id}`\n              );\n            },\n          },\n\n          {\n            icon: () => <FcCalendar size={30} />,\n            tooltip: \"Project of the month\",\n            onClick: (event, project) => {\n              history.push(\n                `/web-master/projectofthemonth/${codeCountry}/${project._id}`\n              );\n            },\n          },\n          {\n            icon: () => <CgDetailsMore size={30} />,\n            tooltip: \"Technical details\",\n            onClick: (event, project) => {\n              history.push(\n                `/web-master/technicaldetails/${codeCountry}/${project._id}`\n              );\n            },\n          },\n          {\n            icon: () => <BiShow size={30} />,\n            tooltip: \"Show in Browser\",\n            onClick: (event, project) => {\n              window.open(\n                `${process.env.REACT_APP_FRONT}projectdetails/${project._id}`,\n                \"_blank\"\n              );\n            },\n          },\n          {\n            icon: () => <AiFillDelete size={30} color=\"red\" />,\n            tooltip: \"Delete Project\",\n            onClick: async (event, project) => {\n              if (\n                window.confirm(\n                  `Are you sure you wish to delete ${project.name} ?`\n                )\n              ) {\n                try {\n                  await deleteProject(project._id);\n                  reloadTableData();\n                } catch (error) {\n                  console.log(error);\n                }\n              }\n            },\n          },\n        ]}\n      />\n    </div>\n  );\n};\n\nexport default TableProjectAccepted;\n"]},"metadata":{},"sourceType":"module"}