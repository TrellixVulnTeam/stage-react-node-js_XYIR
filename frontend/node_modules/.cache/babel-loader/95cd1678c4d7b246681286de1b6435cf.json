{"ast":null,"code":"var _jsxFileName = \"/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/ImpactAccordion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Accordion, AccordionItem, AccordionItemHeading, AccordionItemButton, AccordionItemPanel } from \"react-accessible-accordion\";\nimport { useParams } from \"react-router-dom\"; // Demo styles, see 'Styles' section below for some notes on use.\n\nimport \"react-accessible-accordion/dist/fancy-example.css\";\nimport { addImpactApi, getImpactsByProject, getProjectImpactsAllData } from \"apis/impactApi\";\nimport OutComeAccordion from \"./OutComeAccordion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ImpactAccordion = ({\n  outcomes,\n  outputs,\n  activities\n}) => {\n  _s();\n\n  const {\n    idProject\n  } = useParams();\n  const [impacts, setImpacts] = useState([]);\n  const [impactContent, setImpactContent] = useState(\"\");\n  const getDataFromApi = useCallback(async () => {\n    const impacts = await getProjectImpactsAllData(idProject);\n    setImpacts(impacts);\n  }, []);\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const addImpact = async e => {\n    e.preventDefault();\n\n    if (impactContent !== \"\") {\n      const newImpact = {\n        content: impactContent,\n        project: idProject\n      };\n      const imp = await addImpactApi(newImpact);\n      setImpacts([...impacts, imp]);\n      setImpactContent(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: impacts && /*#__PURE__*/_jsxDEV(Accordion, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-inline m-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mx-sm-3 mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: impactContent,\n            onChange: e => setImpactContent(e.target.value),\n            type: \"text\",\n            className: \"form-control shadow-none\",\n            placeholder: \"Enter Impact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addImpact,\n          className: \"btn btn-primary mb-2 shadow-none\",\n          children: \"Add impact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), impacts === null || impacts === void 0 ? void 0 : impacts.map((impact, index) => /*#__PURE__*/_jsxDEV(AccordionItem, {\n        children: [/*#__PURE__*/_jsxDEV(AccordionItemHeading, {\n          children: /*#__PURE__*/_jsxDEV(AccordionItemButton, {\n            children: impact === null || impact === void 0 ? void 0 : impact.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(AccordionItemPanel, {\n          children: /*#__PURE__*/_jsxDEV(OutComeAccordion, {\n            impact: impact\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(ImpactAccordion, \"2MBBJliNNnzMWD8qHgoSSxMR3Do=\", false, function () {\n  return [useParams];\n});\n\n_c = ImpactAccordion;\nexport default ImpactAccordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImpactAccordion\");","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/src/components/aidchannel/webmaster/ImpactAccordion.js"],"names":["React","useState","useEffect","useCallback","Accordion","AccordionItem","AccordionItemHeading","AccordionItemButton","AccordionItemPanel","useParams","addImpactApi","getImpactsByProject","getProjectImpactsAllData","OutComeAccordion","ImpactAccordion","outcomes","outputs","activities","idProject","impacts","setImpacts","impactContent","setImpactContent","getDataFromApi","addImpact","e","preventDefault","newImpact","content","project","imp","target","value","map","impact","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel,\n} from \"react-accessible-accordion\";\nimport { useParams } from \"react-router-dom\";\n\n// Demo styles, see 'Styles' section below for some notes on use.\nimport \"react-accessible-accordion/dist/fancy-example.css\";\nimport {\n  addImpactApi,\n  getImpactsByProject,\n  getProjectImpactsAllData,\n} from \"apis/impactApi\";\nimport OutComeAccordion from \"./OutComeAccordion\";\n\nconst ImpactAccordion = ({ outcomes, outputs, activities }) => {\n  const { idProject } = useParams();\n  const [impacts, setImpacts] = useState([]);\n  const [impactContent, setImpactContent] = useState(\"\");\n\n  const getDataFromApi = useCallback(async () => {\n    const impacts = await getProjectImpactsAllData(idProject);\n    setImpacts(impacts);\n  }, []);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, [getDataFromApi]);\n\n  const addImpact = async (e) => {\n    e.preventDefault();\n    if (impactContent !== \"\") {\n      const newImpact = { content: impactContent, project: idProject };\n      const imp = await addImpactApi(newImpact);\n      setImpacts([...impacts, imp]);\n      setImpactContent(\"\");\n    }\n  };\n\n  return (\n    <>\n      {impacts && (\n        <Accordion>\n          <form className=\"form-inline m-3\">\n            <div className=\"form-group mb-2\"></div>\n            <div className=\"form-group mx-sm-3 mb-2\">\n              <input\n                value={impactContent}\n                onChange={(e) => setImpactContent(e.target.value)}\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                placeholder=\"Enter Impact\"\n              />\n            </div>\n            <button\n              onClick={addImpact}\n              className=\"btn btn-primary mb-2 shadow-none\"\n            >\n              Add impact\n            </button>\n          </form>\n          {impacts?.map((impact, index) => (\n            <AccordionItem key={index}>\n              <AccordionItemHeading>\n                <AccordionItemButton>{impact?.content}</AccordionItemButton>\n              </AccordionItemHeading>\n              <AccordionItemPanel>\n                <OutComeAccordion impact={impact} />\n              </AccordionItemPanel>\n            </AccordionItem>\n          ))}\n        </Accordion>\n      )}\n    </>\n  );\n};\n\nexport default ImpactAccordion;\n"]},"metadata":{},"sourceType":"module"}