{"ast":null,"code":"import 'intersection-observer';\nimport * as React from 'react';\nimport useLayoutEffect from '@react-hook/passive-layout-effect';\n\nfunction useIntersectionObserver(target, options = {}) {\n  const {\n    root = null,\n    pollInterval = null,\n    useMutationObserver = false,\n    rootMargin = '0px 0px 0px 0px',\n    threshold = 0,\n    initialIsIntersecting = false\n  } = options;\n  const [entry, setEntry] = React.useState(() => ({\n    boundingClientRect: null,\n    intersectionRatio: 0,\n    intersectionRect: null,\n    isIntersecting: initialIsIntersecting,\n    rootBounds: null,\n    target: null,\n    time: 0\n  }));\n  const [observer, setObserver] = React.useState(() => getIntersectionObserver({\n    root,\n    pollInterval,\n    useMutationObserver,\n    rootMargin,\n    threshold\n  }));\n  React.useEffect(() => {\n    const observer = getIntersectionObserver({\n      root,\n      pollInterval,\n      useMutationObserver,\n      rootMargin,\n      threshold\n    });\n    setObserver(observer); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [root, rootMargin, pollInterval, useMutationObserver, JSON.stringify(threshold)]);\n  useLayoutEffect(() => {\n    const targetEl = target && 'current' in target ? target.current : target;\n    if (!observer || !targetEl) return;\n    let didUnsubscribe = false;\n    observer.observer.observe(targetEl);\n\n    const callback = entries => {\n      if (didUnsubscribe) return;\n\n      for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        if (entry.target === targetEl) {\n          setEntry(entry);\n        }\n      }\n    };\n\n    observer.subscribe(callback);\n    return () => {\n      didUnsubscribe = true;\n      observer.observer.unobserve(targetEl);\n      observer.unsubscribe(callback);\n    };\n  }, [target, observer]);\n  return entry;\n}\n\nfunction createIntersectionObserver({\n  root = null,\n  pollInterval = null,\n  useMutationObserver = false,\n  rootMargin = '0px 0px 0px 0px',\n  threshold = 0\n}) {\n  const callbacks = new Set();\n  if (typeof IntersectionObserver === 'undefined') return null;\n  const observer = new IntersectionObserver(entries => {\n    for (const callback of callbacks) callback(entries, observer);\n  }, {\n    root,\n    rootMargin,\n    threshold\n  }); // @ts-ignore\n\n  observer.POLL_INTERVAL = pollInterval; // @ts-ignore\n\n  observer.USE_MUTATION_OBSERVER = useMutationObserver;\n  return {\n    observer,\n\n    getListeners() {\n      return callbacks;\n    },\n\n    subscribe: callback => callbacks.add(callback),\n    unsubscribe: callback => callbacks.delete(callback)\n  };\n}\n\nconst _intersectionObserver = /*#__PURE__*/new Map();\n\nfunction getIntersectionObserver(options) {\n  const {\n    root,\n    ...keys\n  } = options;\n  const key = JSON.stringify(keys);\n\n  let base = _intersectionObserver.get(root);\n\n  if (!base) {\n    base = {};\n\n    _intersectionObserver.set(root, base);\n  }\n\n  return !base[key] ? base[key] = createIntersectionObserver(options) : base[key];\n}\n\nexport default useIntersectionObserver;","map":{"version":3,"sources":["/Users/yasmine/Desktop/stage/aidchannel-front/node_modules/@react-hook/intersection-observer/dist/module/index.js"],"names":["React","useLayoutEffect","useIntersectionObserver","target","options","root","pollInterval","useMutationObserver","rootMargin","threshold","initialIsIntersecting","entry","setEntry","useState","boundingClientRect","intersectionRatio","intersectionRect","isIntersecting","rootBounds","time","observer","setObserver","getIntersectionObserver","useEffect","JSON","stringify","targetEl","current","didUnsubscribe","observe","callback","entries","i","length","subscribe","unobserve","unsubscribe","createIntersectionObserver","callbacks","Set","IntersectionObserver","POLL_INTERVAL","USE_MUTATION_OBSERVER","getListeners","add","delete","_intersectionObserver","Map","keys","key","base","get","set"],"mappings":"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","sourcesContent":["import 'intersection-observer';\nimport * as React from 'react';\nimport useLayoutEffect from '@react-hook/passive-layout-effect';\n\nfunction useIntersectionObserver(target, options = {}) {\n  const {\n    root = null,\n    pollInterval = null,\n    useMutationObserver = false,\n    rootMargin = '0px 0px 0px 0px',\n    threshold = 0,\n    initialIsIntersecting = false\n  } = options;\n  const [entry, setEntry] = React.useState(() => ({\n    boundingClientRect: null,\n    intersectionRatio: 0,\n    intersectionRect: null,\n    isIntersecting: initialIsIntersecting,\n    rootBounds: null,\n    target: null,\n    time: 0\n  }));\n  const [observer, setObserver] = React.useState(() => getIntersectionObserver({\n    root,\n    pollInterval,\n    useMutationObserver,\n    rootMargin,\n    threshold\n  }));\n  React.useEffect(() => {\n    const observer = getIntersectionObserver({\n      root,\n      pollInterval,\n      useMutationObserver,\n      rootMargin,\n      threshold\n    });\n    setObserver(observer); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [root, rootMargin, pollInterval, useMutationObserver, JSON.stringify(threshold)]);\n  useLayoutEffect(() => {\n    const targetEl = target && 'current' in target ? target.current : target;\n    if (!observer || !targetEl) return;\n    let didUnsubscribe = false;\n    observer.observer.observe(targetEl);\n\n    const callback = entries => {\n      if (didUnsubscribe) return;\n\n      for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        if (entry.target === targetEl) {\n          setEntry(entry);\n        }\n      }\n    };\n\n    observer.subscribe(callback);\n    return () => {\n      didUnsubscribe = true;\n      observer.observer.unobserve(targetEl);\n      observer.unsubscribe(callback);\n    };\n  }, [target, observer]);\n  return entry;\n}\n\nfunction createIntersectionObserver({\n  root = null,\n  pollInterval = null,\n  useMutationObserver = false,\n  rootMargin = '0px 0px 0px 0px',\n  threshold = 0\n}) {\n  const callbacks = new Set();\n  if (typeof IntersectionObserver === 'undefined') return null;\n  const observer = new IntersectionObserver(entries => {\n    for (const callback of callbacks) callback(entries, observer);\n  }, {\n    root,\n    rootMargin,\n    threshold\n  }); // @ts-ignore\n\n  observer.POLL_INTERVAL = pollInterval; // @ts-ignore\n\n  observer.USE_MUTATION_OBSERVER = useMutationObserver;\n  return {\n    observer,\n\n    getListeners() {\n      return callbacks;\n    },\n\n    subscribe: callback => callbacks.add(callback),\n    unsubscribe: callback => callbacks.delete(callback)\n  };\n}\n\nconst _intersectionObserver = /*#__PURE__*/new Map();\n\nfunction getIntersectionObserver(options) {\n  const {\n    root,\n    ...keys\n  } = options;\n  const key = JSON.stringify(keys);\n\n  let base = _intersectionObserver.get(root);\n\n  if (!base) {\n    base = {};\n\n    _intersectionObserver.set(root, base);\n  }\n\n  return !base[key] ? base[key] = createIntersectionObserver(options) : base[key];\n}\n\nexport default useIntersectionObserver;"]},"metadata":{},"sourceType":"module"}